/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JPanelLocalizationCommand.java
 *
 * Created on Apr 3, 2011, 8:48:49 PM
 */

package rssi_graph.localization;

import java.awt.event.ItemListener;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import rssi_graph.JPannelLoggerLogElement;
import rssi_graph.NodeSelectedEvent;
import rssi_graph.NodeSelectionChangedListener;
import rssi_graph.RSSI_graphApp;
import rssi_graph.messages.MultiPingMsg;

/**
 *
 * @author ph4r05
 */
public class JPanelLocalizationCommand extends javax.swing.JPanel implements NodeSelectionChangedListener {

    /** Creates new form JPanelLocalizationCommand */
    public JPanelLocalizationCommand() {
        initComponents();

        //bind components
        //jToggle_R2D_ON.addItemListener((ItemListener) RSSI_graphApp.getApplication().getWorker(1));
        //jButtonFinishTry.addActionListener((ActionListener) RSSI_graphApp.getApplication().getWorker(1));

        // register myself to loc module
        //RSSI_graphApp.getApplication().getWorker(0)
    }

    public void connectWithWorker(){
        // toggle timer for localization sampling
        this.jToggleLocalizationTimer.addItemListener((ItemListener) RSSI_graphApp.getApplication().getWorker(0));
    }

    /**
     * Logging to main log window
     * @param s
     * @param type
     * @param typeString
     * @param severity
     */
    public void logToWindow(String s,int type, String typeString, int severity){
        RSSI_graphApp.getApplication().getGraphViewFrame().getjPanelLogger1().addLogEntry(s, type, typeString, severity);
    }

    /**
     * Logging to main log window, filled type and type string with module id
     * @param s
     * @param severity
     */
    public void logToWindow(String s, int severity){
        this.logToWindow(s, 145, "LocalizationCommander", severity);
    }

    /**
     * return selected nodes
     * @return
     */
    public int[] getSelectedNodes(){
        return this.jPanelNodeSelector1.getSelectedNodes();
        // scan table for selected nodes
        //Array<Integer> result = new Array<Integer>();
//        ArrayList<Integer> result = new ArrayList<Integer>();
//        for(int i=0; i<this.jTableMobileNode.getRowCount();i++){
//            int modelI = this.jTableMobileNode.convertRowIndexToModel(i);
//            if (this.jTableMobileNode.getModel().getValueAt(modelI, 0) == null) continue;
//            
//            if ((Boolean)this.jTableMobileNode.getModel().getValueAt(modelI, 0)==true){
//                result.add((Integer) this.jTableMobileNode.getModel().getValueAt(modelI, 1));
//            }
//        }

//        int[] resultReal = new int[result.size()];
//        for(int i=0; i<result.size();i++){
//            resultReal[i] = result.get(i);
//        }
    }

    public int lookupPackets(){
        return Integer.parseInt(this.jTextFieldPackets.getText());
    }

    public int lookupDelay(){
        return Integer.parseInt(this.jTextFieldDelay.getText());
    }

    public int lookupSampleTimerDelay(){
        return Integer.parseInt(this.jTextSampleTimerDelay.getText());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldPackets = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDelay = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jToggleLocalizationTimer = new javax.swing.JToggleButton();
        jTextSampleTimerDelay = new javax.swing.JTextField();
        jButtonLocalizeNow = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanelTXpowerSelector1 = new rssi_graph.localization.JPanelTXpowerSelector();
        jToggleModuleOn = new javax.swing.JToggleButton();
        jPanelNodeSelector1 = new rssi_graph.JPanelNodeSelector();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(rssi_graph.RSSI_graphApp.class).getContext().getResourceMap(JPanelLocalizationCommand.class);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTextFieldPackets.setText(resourceMap.getString("jTextFieldPackets.text")); // NOI18N
        jTextFieldPackets.setToolTipText(resourceMap.getString("jTextFieldPackets.toolTipText")); // NOI18N
        jTextFieldPackets.setName("jTextFieldPackets"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setToolTipText(resourceMap.getString("jLabel2.toolTipText")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jTextFieldDelay.setText(resourceMap.getString("jTextFieldDelay.text")); // NOI18N
        jTextFieldDelay.setName("jTextFieldDelay"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane2.setViewportView(jTextArea1);

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToggleLocalizationTimer.setText(resourceMap.getString("jToggleLocalizationTimer.text")); // NOI18N
        jToggleLocalizationTimer.setActionCommand(resourceMap.getString("jToggleLocalizationTimer.actionCommand")); // NOI18N
        jToggleLocalizationTimer.setName("jToggleLocalizationTimer"); // NOI18N
        jToggleLocalizationTimer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleLocalizationTimerItemStateChanged(evt);
            }
        });

        jTextSampleTimerDelay.setText(resourceMap.getString("jTextSampleTimerDelay.text")); // NOI18N
        jTextSampleTimerDelay.setName("jTextSampleTimerDelay"); // NOI18N

        jButtonLocalizeNow.setText(resourceMap.getString("jButtonLocalizeNow.text")); // NOI18N
        jButtonLocalizeNow.setActionCommand(resourceMap.getString("jButtonLocalizeNow.actionCommand")); // NOI18N
        jButtonLocalizeNow.setName("jButtonLocalizeNow"); // NOI18N
        jButtonLocalizeNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLocalizeNowActionPerformed(evt);
            }
        });

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(32, 32, 32)
                                .addComponent(jTextFieldDelay))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldPackets, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jToggleLocalizationTimer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextSampleTimerDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7))
                    .addComponent(jButtonLocalizeNow))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldPackets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jButtonLocalizeNow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleLocalizationTimer)
                    .addComponent(jLabel6)
                    .addComponent(jTextSampleTimerDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonLocalizeNow, jToggleLocalizationTimer});

        jPanelTXpowerSelector1.setName("jPanelTXpowerSelector1"); // NOI18N

        jToggleModuleOn.setSelected(true);
        jToggleModuleOn.setText(resourceMap.getString("jToggleModuleOn.text")); // NOI18N
        jToggleModuleOn.setActionCommand(resourceMap.getString("jToggleModuleOn.actionCommand")); // NOI18N
        jToggleModuleOn.setName("jToggleModuleOn"); // NOI18N
        jToggleModuleOn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleModuleOnItemStateChanged(evt);
            }
        });

        jPanelNodeSelector1.setName("jPanelNodeSelector1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToggleModuleOn)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTXpowerSelector1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelNodeSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelNodeSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelTXpowerSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleModuleOn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Send simple ping request for all selected nodes with defined TX power
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        // send that damn signal
        int[] txPower = this.jPanelTXpowerSelector1.getWantedTx();
        if (txPower==null){
            throw new NullPointerException("Null TX power");
        }
        if (txPower.length!=1){
            this.logToWindow("Can select only one txpower her", JPannelLoggerLogElement.SEVERITY_ERROR);
            return;
        }

        int[] selectedNodes = this.getSelectedNodes();
        if (selectedNodes==null){
            throw new NullPointerException("Selected nodes are null");
        }
        if(selectedNodes.length==0){
            return;
        }

        int packets = this.lookupPackets();
        int delay = this.lookupDelay();

        // we have enough information, send now magic ping ;-)
        for(int i=0; i<selectedNodes.length;i++){
            // construct message to send
            MultiPingMsg payload = new MultiPingMsg();
            // prepare packet fields
            payload.set_txpower((short) txPower[0]);
            payload.set_delay(delay);
            payload.set_packets(packets);
            payload.set_counter(0);
            
            RSSI_graphApp.getApplication().getMsgSender().add(selectedNodes[i], payload, "LocalizationRequest for:"+selectedNodes[i]+"; delay="+delay+"; cn="+packets);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleLocalizationTimerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jToggleLocalizationTimerItemStateChanged
        // TODO add your handling code here:
        RSSI_graphApp.getApplication().getWorker(0).itemStateChanged(evt);
    }//GEN-LAST:event_jToggleLocalizationTimerItemStateChanged

    private void jToggleModuleOnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jToggleModuleOnItemStateChanged
        // TODO add your handling code here:
        RSSI_graphApp.getApplication().getWorker(0).itemStateChanged(evt);
    }//GEN-LAST:event_jToggleModuleOnItemStateChanged

    private void jButtonLocalizeNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLocalizeNowActionPerformed
        // TODO add your handling code here:
        RSSI_graphApp.getApplication().getWorker(0).actionPerformed(evt);
    }//GEN-LAST:event_jButtonLocalizeNowActionPerformed

    @Action
    public Task sendStartLocalizationSignal() {
        return new SendStartLocalizationSignalTask(org.jdesktop.application.Application.getInstance(rssi_graph.RSSI_graphApp.class));
    }

    /**
     * Node selector changed
     * @param evt 
     */
    public void nodeChanged(NodeSelectedEvent evt) {
        // select appropriate tx powers
        this.jPanelTXpowerSelector1.nodeChanged(evt);
    }

    /**
     * initialize panel
     */
    void initThis() {
        jPanelNodeSelector1.initThis();
        jPanelNodeSelector1.addNodeSelectionChangedListener(this);
        
        // allow to select only single TX power
        this.jPanelTXpowerSelector1.setSelectionMode(JPanelTXpowerSelector.SELECT_SINGLE);
    }

    private class SendStartLocalizationSignalTask extends org.jdesktop.application.Task<Object, Void> {
        SendStartLocalizationSignalTask(org.jdesktop.application.Application app) {
            // Runs on the EDT.  Copy GUI state that
            // doInBackground() depends on from parameters
            // to SendStartLocalizationSignalTask fields, here.
            super(app);
        }
        @Override protected Object doInBackground() {
            // Your Task's code here.  This method runs
            // on a background thread, so don't reference
            // the Swing GUI from here.
            return null;  // return your result
        }
        @Override protected void succeeded(Object result) {
            // Runs on the EDT.  Update the GUI based on
            // the result computed by doInBackground().
        }
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonLocalizeNow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private rssi_graph.JPanelNodeSelector jPanelNodeSelector1;
    private rssi_graph.localization.JPanelTXpowerSelector jPanelTXpowerSelector1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldDelay;
    private javax.swing.JTextField jTextFieldPackets;
    private javax.swing.JTextField jTextSampleTimerDelay;
    private javax.swing.JToggleButton jToggleLocalizationTimer;
    private javax.swing.JToggleButton jToggleModuleOn;
    // End of variables declaration//GEN-END:variables

}
