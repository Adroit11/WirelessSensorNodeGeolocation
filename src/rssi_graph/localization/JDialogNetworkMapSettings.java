/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogNetworkMapSettings.java
 *
 * Created on Apr 22, 2011, 2:21:20 PM
 */

package rssi_graph.localization;

import java.text.NumberFormat;
import javax.swing.JPanel;

/**
 *
 * @author ph4r05
 */
public class JDialogNetworkMapSettings extends javax.swing.JDialog {

    /**
     * parent panel where show button was pressed
     */
    protected javax.swing.JPanel parentPanel = null;

    /** Creates new form JDialogNetworkMapSettings */
    public JDialogNetworkMapSettings(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public JPanel getParentPanel() {
        return parentPanel;
    }

    public void setParentPanel(JPanel parentPanel) {
        this.parentPanel = parentPanel;
    }
    
    /**
     * fetch data from parent and update view
     */
    public void fetchData(){
        if (this.parentPanel== null || !(this.parentPanel instanceof JPanelNetworkMap)){
            return;
        }
        
        final JPanelNetworkMap myPanel = (JPanelNetworkMap) this.parentPanel;
        this.jCheckShowPositionHistory.setSelected(myPanel.isShowEstimateHistory());
        this.jFormattedHistorySize.setText(String.valueOf(myPanel.getMaxHistorySize()));
        this.jCheckConnectRealToEst.setSelected(myPanel.isShowError());
        this.jCheckDisplayTextAnnotForMobile.setSelected(myPanel.isShowMobileTextAnnot());
        this.jCheckEstimateOnlyForSelected.setSelected(myPanel.isShowEstimateOnlyForSelected());
    }

    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonDispose = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jCheckShowPositionHistory = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jFormattedHistorySize = new javax.swing.JFormattedTextField(NumberFormat.getIntegerInstance());
        jButtonPruneHistory = new javax.swing.JButton();
        jButtonApply = new javax.swing.JButton();
        jCheckConnectRealToEst = new javax.swing.JCheckBox();
        jCheckDisplayTextAnnotForMobile = new javax.swing.JCheckBox();
        jCheckEstimateOnlyForSelected = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(rssi_graph.RSSI_graphApp.class).getContext().getResourceMap(JDialogNetworkMapSettings.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jButtonDispose.setText(resourceMap.getString("jButtonDispose.text")); // NOI18N
        jButtonDispose.setName("jButtonDispose"); // NOI18N
        jButtonDispose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisposeActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jCheckShowPositionHistory.setText(resourceMap.getString("jCheckShowPositionHistory.text")); // NOI18N
        jCheckShowPositionHistory.setName("jCheckShowPositionHistory"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jFormattedHistorySize.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        jFormattedHistorySize.setText(resourceMap.getString("jFormattedHistorySize.text")); // NOI18N
        jFormattedHistorySize.setName("jFormattedHistorySize"); // NOI18N

        jButtonPruneHistory.setText(resourceMap.getString("jButtonPruneHistory.text")); // NOI18N
        jButtonPruneHistory.setName("jButtonPruneHistory"); // NOI18N
        jButtonPruneHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPruneHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedHistorySize))
                    .addComponent(jCheckShowPositionHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPruneHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckShowPositionHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jFormattedHistorySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPruneHistory)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jButtonApply.setText(resourceMap.getString("jButtonApply.text")); // NOI18N
        jButtonApply.setName("jButtonApply"); // NOI18N
        jButtonApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApplyActionPerformed(evt);
            }
        });

        jCheckConnectRealToEst.setText(resourceMap.getString("jCheckConnectRealToEst.text")); // NOI18N
        jCheckConnectRealToEst.setName("jCheckConnectRealToEst"); // NOI18N

        jCheckDisplayTextAnnotForMobile.setText(resourceMap.getString("jCheckDisplayTextAnnotForMobile.text")); // NOI18N
        jCheckDisplayTextAnnotForMobile.setName("jCheckDisplayTextAnnotForMobile"); // NOI18N

        jCheckEstimateOnlyForSelected.setText(resourceMap.getString("jCheckEstimateOnlyForSelected.text")); // NOI18N
        jCheckEstimateOnlyForSelected.setName("jCheckEstimateOnlyForSelected"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckConnectRealToEst)
                    .addComponent(jCheckDisplayTextAnnotForMobile)
                    .addComponent(jCheckEstimateOnlyForSelected)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jButtonApply)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDispose))
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonApply, jButtonDispose});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckConnectRealToEst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckDisplayTextAnnotForMobile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckEstimateOnlyForSelected)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonApply)
                    .addComponent(jButtonDispose))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDisposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisposeActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonDisposeActionPerformed

    private void jButtonApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApplyActionPerformed
        // TODO add your handling code here:
        if (this.parentPanel== null || !(this.parentPanel instanceof JPanelNetworkMap)){
            return;
        }
        
        final JPanelNetworkMap myPanel = (JPanelNetworkMap) this.parentPanel;
        myPanel.setShowEstimateHistory(this.jCheckShowPositionHistory.isSelected());
        myPanel.setMaxHistorySize(Integer.parseInt(this.jFormattedHistorySize.getText()));
        myPanel.setShowError(this.jCheckConnectRealToEst.isSelected());
        myPanel.setShowMobileTextAnnot(this.jCheckDisplayTextAnnotForMobile.isSelected());
        myPanel.setShowEstimateOnlyForSelected(this.jCheckEstimateOnlyForSelected.isSelected());
        myPanel.redraw();
        
        this.dispose();
    }//GEN-LAST:event_jButtonApplyActionPerformed

    private void jButtonPruneHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPruneHistoryActionPerformed
         // TODO add your handling code here:
        if (this.parentPanel== null || !(this.parentPanel instanceof JPanelNetworkMap)){
            return;
        }
        
        final JPanelNetworkMap myPanel = (JPanelNetworkMap) this.parentPanel;
        myPanel.pruneHistory(null, Integer.parseInt(this.jFormattedHistorySize.getText()));
    }//GEN-LAST:event_jButtonPruneHistoryActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogNetworkMapSettings dialog = new JDialogNetworkMapSettings(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApply;
    private javax.swing.JButton jButtonDispose;
    private javax.swing.JButton jButtonPruneHistory;
    private javax.swing.JCheckBox jCheckConnectRealToEst;
    private javax.swing.JCheckBox jCheckDisplayTextAnnotForMobile;
    private javax.swing.JCheckBox jCheckEstimateOnlyForSelected;
    private javax.swing.JCheckBox jCheckShowPositionHistory;
    private javax.swing.JFormattedTextField jFormattedHistorySize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
