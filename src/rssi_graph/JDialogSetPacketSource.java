/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogSetPacketSource.java
 *
 * Created on Sep 23, 2011, 1:22:05 AM
 */
package rssi_graph;

import javax.swing.JOptionPane;

/**
 *
 * @author ph4r05
 */
public class JDialogSetPacketSource extends javax.swing.JDialog {

    private RSSI_graphApp app = null;
    
    /** Creates new form JDialogSetPacketSource */
    public JDialogSetPacketSource(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    /**
     * Change was successfull
     */
    protected void notifyOK(){
        JOptionPane.showMessageDialog(null,
                "Packet source successfully changed!" + RSSI_graphApp.getLineSeparator() +
                "New packet source: " + this.jTextSource.getText(),
                "Operation successfull",
                JOptionPane.INFORMATION_MESSAGE);
    }
    
    /**
     * Change was not successfull
     * @param mesage 
     */
    protected void notifyBad(String message){
        JOptionPane.showMessageDialog(null,
                "Packet source was not changed!" + (message==null ? "" : RSSI_graphApp.getLineSeparator() + "Message: " + message),
                "Operation failed",
                JOptionPane.WARNING_MESSAGE);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextSource = new javax.swing.JTextField();
        jButtonChange = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(rssi_graph.RSSI_graphApp.class).getContext().getResourceMap(JDialogSetPacketSource.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTextSource.setText(resourceMap.getString("jTextSource.text")); // NOI18N
        jTextSource.setName("jTextSource"); // NOI18N

        jButtonChange.setText(resourceMap.getString("jButtonChange.text")); // NOI18N
        jButtonChange.setName("jButtonChange"); // NOI18N
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        jButtonCancel.setText(resourceMap.getString("jButtonCancel.text")); // NOI18N
        jButtonCancel.setName("jButtonCancel"); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextSource, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonChange)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonCancel, jButtonChange});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonChange)
                    .addComponent(jButtonCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        // TODO add your handling code here:
        String source = this.jTextSource.getText();
        if (this.app == null){
            this.notifyBad("Dialog not correctly initialized.");
            return;
        }
        
        // get old packet source
        String oldSource = this.app.getSource();
        
        // set new source and try to reset
        this.app.setSource(source);
        boolean resetOK = this.app.resetPacketSource();
        
        if (resetOK){
            this.notifyOK();
            dispose();
            return;
        } else {
            this.notifyBad("Packet source bad/rejected. Trying to reconnect to old one...");
            
            // try to revert old source
            this.app.setSource(oldSource);
            resetOK = this.app.resetPacketSource();
            
            if (resetOK){
                this.notifyOK();
                dispose();
                return;
            } else {
                this.notifyBad("Packet source bad/rejected. This seems bad, sorry :(");
                dispose();
                return;
            }
        }
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDialogSetPacketSource dialog = new JDialogSetPacketSource(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextSource;
    // End of variables declaration//GEN-END:variables

    public RSSI_graphApp getApp() {
        return app;
    }

    public void setApp(RSSI_graphApp app) {
        this.app = app;
        if (this.app==null) return;
        
        // set current source
        this.jTextSource.setText(this.app.getSource());
    }
}
