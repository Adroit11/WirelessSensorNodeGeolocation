<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="126:SendingMoteAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xf6d030e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xf752ea90"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xf752ea90"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xf75189b8"/></to>
    </wire>
    <wire loc="132:SendingMoteAppC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xf6d03908"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xf74b7a40"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xf74b7a40"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xf74b1010"/></to>
    </wire>
    <wire loc="133:SendingMoteAppC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0xf6d02a90"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0xf74afaf8"/></to>
    </wire>
    <wire loc="166:SendingMoteAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xf6d1c010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xf744d188"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xf744d188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xf7374408"/></to>
    </wire>
    <wire loc="167:SendingMoteAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6d07b10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf705fa88"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf705fa88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf7059180"/></to>
    </wire>
    <wire loc="168:SendingMoteAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xf6d08380"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf7562d30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf7562d30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf7537c48"/></to>
    </wire>
    <wire loc="171:SendingMoteAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xf6d04b50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xf6dfa948"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xf6dfa948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xf6df5478"/></to>
    </wire>
    <wire loc="174:SendingMoteAppC.nc">
      <from><interface-ref name="SendTimer" scoped="" ref="0xf6d1c4d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c4b120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c4b120"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf6e27e18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:SendingMoteAppC.nc">
      <from><interface-ref name="GapTimer" scoped="" ref="0xf6d17be8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c47010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c47010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf6e27e18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:SendingMoteAppC.nc">
      <from><interface-ref name="FlushTimer" scoped="" ref="0xf6d19880"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c4e330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c4e330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf6e27e18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:SendingMoteAppC.nc">
      <from><interface-ref name="SignalTimer" scoped="" ref="0xf6d13010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c45e08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c45e08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf6e27e18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:SendingMoteAppC.nc">
      <from><interface-ref name="NoiseFloorTimer" scoped="" ref="0xf6d10400"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c41c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c41c38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf6e27e18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:SendingMoteAppC.nc">
      <from><interface-ref name="SensorReadingTimer" scoped="" ref="0xf6d0e7b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6c3db10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6c3db10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf6e27e18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:SendingMoteAppC.nc">
      <from><interface-ref name="MultiPingResponseSend" scoped="" ref="0xf6d09b30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6bec360"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6bec360"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6872890"/></to>
    </wire>
    <wire loc="183:SendingMoteAppC.nc">
      <from><interface-ref name="RssiMsgSend" scoped="" ref="0xf6d0baf0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6c38280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6c38280"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf68a02c8"/></to>
    </wire>
    <wire loc="184:SendingMoteAppC.nc">
      <from><interface-ref name="ReportMsgSend" scoped="" ref="0xf6d0a338"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6be8448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6be8448"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf685c2e8"/></to>
    </wire>
    <wire loc="185:SendingMoteAppC.nc">
      <from><interface-ref name="TinyReportMsgSend" scoped="" ref="0xf6d0ab00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6be55c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6be55c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf684a880"/></to>
    </wire>
    <wire loc="186:SendingMoteAppC.nc">
      <from><interface-ref name="CommandMsgSend" scoped="" ref="0xf6d09340"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6be2568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6be2568"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf68332e8"/></to>
    </wire>
    <wire loc="189:SendingMoteAppC.nc">
      <from><interface-ref name="SimplePingReceive" scoped="" ref="0xf6d08b00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6bdda48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6bdda48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf7558af8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:SendingMoteAppC.nc">
      <from><interface-ref name="PingReceive" scoped="" ref="0xf6d08f10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6bd81f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6bd81f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf7558af8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:SendingMoteAppC.nc">
      <from><interface-ref name="ResponseReceive" scoped="" ref="0xf6d07368"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6bd68d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6bd68d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf7558af8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:SendingMoteAppC.nc">
      <from><interface-ref name="CommandReceive" scoped="" ref="0xf6d07798"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6bd3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xf6bd3010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf7558af8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:SendingMoteAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf6d067d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6be8ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6be8ae0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf685c980"/></to>
    </wire>
    <wire loc="196:SendingMoteAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6d06ee0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf6be7230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6be7230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf685b030"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf7537c48"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf7521540"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf755a670"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf7536550"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf7536550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf6d754e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf75641b0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf75355c8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xf75355c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xf6d74580"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf7551148"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf75345f0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf75345f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6d73518"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xf7541c68"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xf6f09de8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xf6f09de8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xf6efe780"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf75384f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf7527da0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf7527da0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf7517b88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf7558af8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf7536f10"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf7536f10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6d75ea8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7543308"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7533310"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7533310"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7517230"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7535938"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf7535938"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf6d748f0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf7557650"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6f067e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6f067e0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6efc178"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf7521540"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf6d90f18"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xf7527578"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xf6d725a8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xf7526260"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xf6d73f10"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xf75189b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xf6f0c4a8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf7517b88"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf6d908e0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7517230"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf6f0cd50"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf7522760"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf75121c0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf75121c0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf6d84858"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf752c790"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf75177c0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf75177c0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf6f09790"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0xf6d6d6f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf7519ee0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6d72df8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xf7511e88"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xf7511e88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xf6dc2b40"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6d705a0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xf7518620"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xf7518620"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xf6dc1320"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf6d6e700"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf6ff9968"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xf6d70938"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xf6f0c4a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xf6f0c4a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xf6f03dd8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6d6f1f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f092e0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f092e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6effc60"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xf6d6f670"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xf74b7a40"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xf6d6ee40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xf750b810"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xf750b810"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xf7507570"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6d6ddb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf705fa88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf6d90f18"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xf6d8e9c0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf75113d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6dc2090"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf6dc2090"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xf6dbde58"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xf6dc2b40"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xf6dbb9b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xf6d908e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xf6d8d600"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf7511ab8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6dc2770"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf6dc2770"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0xf6dbb5e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xf6f0cd50"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf6eff6e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf7519ee0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6dc39a0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf6dc39a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6dbd718"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xf6dc1320"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xf6dba160"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xf6d84858"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xf6d83cb0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf6f09790"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf6efe128"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xf6d8e9c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf750c720"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xf750c720"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xf750a7a0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6dc1af8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6ded300"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf6ded300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6dea938"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6deda70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6d84158"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf6d84158"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6d83010"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6d83010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6ddad98"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf6ddad98"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6d8fdf0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6d8fdf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf750cd28"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf750cd28"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf750ada8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6dc1748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6d90518"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf6d90518"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf6d8e5a0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6d8e5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6decd68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf6decd68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6dd63d8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6dd9688"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf750b458"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf750b458"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6f54bc8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xf6f54bc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xf6f50ae0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf7507d60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf74c2f00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf74c2f00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf74b0818"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xf7505010"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xf74bea40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xf74bea40"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xf74af010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xf74ff9f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xf6feb7c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xf74ff9f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xf6f541e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xf6f541e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xf6f50100"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xf6feb7c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xf6fd33b0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xf7504040"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0xf6febc50"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xf6febc50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6fd38a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xf7504800"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xf6fe8390"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xf6fe8390"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xf6fd2010"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xf74f2f10"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xf6f0c4a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xf74f8010"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f092e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xf7500ca8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xf6dfa948"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0xf74ec838"/></from>
      <to><interface-ref name="State" scoped="" ref="0xf6dfd608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0xf6dfd608"/></from>
      <to><interface-ref name="State" scoped="" ref="0xf7130100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf74f2298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf705fa88"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0xf74eb9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0xf74eb198"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0xf74ee928"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0xf74b48e0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0xf74afaf8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6dbe9a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6dd6b48"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6de7040"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6df95f0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6ecbde0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6f53d50"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6fd3010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf7452428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6978010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf712d128"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf74b0488"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0xf74a9b30"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xf74529f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0xf74529f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf7353560"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xf74a36e8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xf7204730"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xf7204730"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xf7433750"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xf74a7110"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xf7202580"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xf7202580"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xf74342f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xf74a7b18"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0xf72019f8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xf72019f8"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0xf74358e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xf74a0c50"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0xf71f8ae8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xf71f8ae8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xf71a1010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xf7496998"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf70342a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf70342a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf717a100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xf74978c0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0xf70338a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0xf70338a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xf7497cd8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0xf7032368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0xf7032368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xf7496578"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0xf70331f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0xf70331f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xf7496158"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0xf70326c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xf70326c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xf7498a88"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0xf702d6c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0xf702d6c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xf749f030"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0xf702c880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0xf702c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xf749f538"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0xf702ccb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0xf702ccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xf749fa58"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0xf702f7a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xf702f7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xf749d010"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xf702fbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xf702fbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xf749a300"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0xf7028448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0xf7028448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xf749d520"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0xf702d190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xf702d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xf749da18"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0xf702e030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0xf702e030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0xf7494a18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf701f9e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf701f9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf717a100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0xf7494168"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf700c0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf700c0a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf717a100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf749ec00"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf6ff9968"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0xf748fcc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0xf748f4e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xf73747a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xf7654ed8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xf7654ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xf75ceea8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf7374d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf744b868"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf744b868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf744ac58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xf735c240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf74469c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf7280630"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xf7446268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xf7372a88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xf7444490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf73726d8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xf7444088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf70456e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xf7444088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf74496f0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xf74496f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xf743f688"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf7449ac0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xf74469c8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xf743fab0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xf7436ea8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xf7436ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf73eb6b0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xf743c4b0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xf7449ac0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xf7418210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf739aee0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xf7428750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf73d44f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf73d44f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ae9de0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xf7422ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf73ca030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf73ca030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6aadc08"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xf741cea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf73c2890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf73c2890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a747f8"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xf74342f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf73ea988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf73ea988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b89a88"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xf741da98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf73c35d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf73c35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a773b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xf7433750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf73e5888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf73e5888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b5b938"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xf742dea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf73db4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf73db4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b1f9e8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xf7426670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf73d2170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf73d2170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ae3c08"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xf741fc08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf73c9c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf73c9c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6aa8a88"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xf7437010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf73ed968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf73ed968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b917f8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xf7431670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf73e35d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf73e35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b567f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xf742bce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf73d9170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf73d9170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b1a9e8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xf74244b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf73d1e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf73d1e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6adea88"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xf741ace8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf73c05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf73c05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a6f6c0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xf74162f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf7392dd8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xf74238e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf73ccd30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf73ccd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ab07f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf73eb6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b8c6c0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xf742f590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf73e1250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf73e1250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b506c0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xf7418e08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf73963e8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xf742ea08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf73dd228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf73dd228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b22538"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xf7427210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf73d4e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf73d4e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ae67f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xf7420750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf73ca988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf73ca988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6aab6c0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xf741b8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf73c1250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf73c1250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a72228"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xf7434ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf73e9330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf73e9330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b87538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xf7432210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf73e4250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf73e4250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b593b0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xf742c8e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf73dbe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf73dbe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b1d538"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xf74250a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf73d2ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf73d2ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ae16c0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xf741e670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf73c86b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf73c86b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6aa6538"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xf7437a08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf73ec330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf73ec330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b8f228"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xf74300a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf73e3f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf73e3f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b53228"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xf742a750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf73d9ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf73d9ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b18538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xf7419750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf73c0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf73c0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a6d0b0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xf7429c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf73d5b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf73d5b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6aea418"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xf74222f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf73cb6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf73cb6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6aae228"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xf741c4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf73c3f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf73c3f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a76d70"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xf7416ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf738e3b0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xf74358e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf73ea030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf73ea030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b8a0b0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xf742e010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf73e1ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf73e1ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b4e0b0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xf741d0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf73c4c28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf73c4c28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a7a938"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xf742d4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xf73ddb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xf73ddb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b20010"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xf7427c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf73d37d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf73d37d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ae4228"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xf741f210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf73c9330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf73c9330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6aa90b0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xf741a2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf73c1ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf73c1ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6a71c08"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xf743e548"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf73ed010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf73ed010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b96e18"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xf7432c08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xf73e4ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xf73e4ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b58d70"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xf742b2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xf73da7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xf73da7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b1b010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xf7425a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xf73d14f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xf73d14f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6adf0b0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xf7417830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf73948f0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xf7424ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xf73cc3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xf73cc3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6ab5de8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xf7429210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xf73d84f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xf73d84f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b16010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xf74364b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xf73ecc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xf73ecc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b8ec08"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xf7430b18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xf73e2890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xf73e2890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xf6b52c08"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf75cd720"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xf75ca3a0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xf7652bd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xf75bae88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xf7311010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf7452428"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf7206010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0xf7206010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf7207278"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xf7353560"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf6a06058"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xf6a06058"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf6a00848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xf69fc5f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf6a03e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xf6a03e30"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf69f8d00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0xf69fd360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf7251f18"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf7251f18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf723d490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xf69f5720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf733c928"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf733c928"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf7326b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xf69f2978"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xf732d2f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf7334840"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf72dce78"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xf732f6a8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xf72dbb88"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf732d2f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xf72d8a80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf732d2f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xf72d66a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf732d2f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xf72d3340"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0xf72d2e98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf731fe18"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf731fe18"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf7315af0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xf7319498"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xf7311470"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xf7322798"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xf73144f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf73285f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf731c790"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf7280a18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf733c928"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xf723c6f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf72528f8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf72528f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf724b030"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xf724a208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf733c928"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xf7203128"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xf742e010"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xf7203b18"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0xf741fc08"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xf7451c98"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xf7425a98"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xf7201010"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xf7426670"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xf71f83e8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xf71fa988"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xf71fb2a8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xf71dfd38"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0xf71f7030"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xf732f6a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0xf71e9350"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0xf71d9bb8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0xf71d9bb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xf71abb68"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0xf71a16c8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xf7451c98"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0xf71db010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xf71b6228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0xf71da9e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xf71af718"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0xf71d84f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xf71a9d60"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0xf71db890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xf71b43b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0xf71d9338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xf71ad8f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0xf71de6f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xf71d50f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0xf71da168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xf71b2538"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xf71d58b0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0xf71d4030"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xf71b69e0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0xf71d44a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xf71b4b68"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0xf71d4920"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xf71b2cf0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0xf71d4d98"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xf71afed0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0xf71d32b0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xf71ac0b8"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0xf71d3728"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xf71aa350"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0xf71d3ba0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xf71a85f0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0xf71d2030"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0xf719fed8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0xf7033548"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xf702c010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0xf702c448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0xf70266e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0xf70275c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0xf7032010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf7028cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0xf702e8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0xf702ae38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xf7034958"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xf717a850"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xf717a850"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xf7176690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xf7032d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0xf7030190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0xf7030568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf7027190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xf702e468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0xf70262b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0xf7027a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0xf70292b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0xf7028880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0xf702a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0xf7026b20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0xf7034e70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0xf702f368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xf702ecd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xf702db00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0xf70308c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0xf702f010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0xf7028010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xf7032a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf7029b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0xf7027e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xf70296e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0xf7033bf8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0xf702aa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0xf702a5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0xf7030c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0xf7025430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0xf7179100"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7173918"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0xf7179b48"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7172370"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0xf7177330"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7172b18"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf717a100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf7176ea0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf71712f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0xf716bef8"/></from>
      <to><interface-ref name="State" scoped="" ref="0xf7132e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0xf7132e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0xf7130100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xf7171730"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf7131be8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf7131be8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf7069570"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xf716d718"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xf7067330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0xf7067330"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xf711fd48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xf716ba28"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xf7067668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0xf7067668"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xf711b648"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf716f6b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf705fa88"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0xf7167520"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0xf7130100"/></from>
      <to><interface-ref name="State" scoped="" ref="0xf712d758"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xf711b648"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xf7115d10"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xf711fd48"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xf7115370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0xf71318b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf711f9c8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf711f9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf7115010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0xf7069d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf711bd98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0xf7066488"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xf7433750"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xf711b010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xf71156f8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xf711bd98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf7114488"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0xf7112158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf70a1d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf70a1d40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6976350"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xf71007b8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xf706d898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xf706d898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xf6976e98"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xf71034d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xf7116e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xf7116e40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xf70d01c8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xf7100c38"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xf75bd8a8"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xf70ed1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xf70cb898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xf75bd8a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xf70ce010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xf7433750"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xf70ce9e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xf7432210"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xf70cd4a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xf7432c08"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xf70cde88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xf7431670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xf706d490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xf6976a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xf69753a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xf706dd48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xf69757d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xf6978348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xf6975dc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf70456e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf705cdd0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xf7059e48"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xf70478e8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xf70478e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xf7437a08"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xf7058860"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xf7046308"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xf7046308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xf7437010"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xf70572e0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xf7046d10"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xf7046d10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xf743e548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xf7018880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0xf701ed38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xf701be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xf70176a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0xf7017ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0xf7011cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0xf7012b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0xf701d760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf70122b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0xf70196e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0xf7018010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0xf7015468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0xf7017f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xf701e170"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xf717a850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xf701c4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0xf701c840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0xf701cc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf70126e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xf701de10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xf7019b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xf70192b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0xf701e9e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0xf7011880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0xf7011010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0xf70158a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0xf7014e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0xf70167a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0xf7010190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0xf701e688"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0xf701ba18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xf7018448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0xf7016368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0xf7018db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0xf701d0b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xf7017270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0xf701b010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0xf701b6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0xf7014a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0xf70145c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xf701c190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf7014190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0xf7011448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xf7015cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0xf701d408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0xf7015030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0xf701dab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0xf7016bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0xf701b368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0xf7010a68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xf7006e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0xf700b368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xf70074b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xf7005cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0xf7003190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0xf6ffe448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0xf6fff2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0xf700bd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf7000a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0xf7007d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0xf70065c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0xf7002b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0xf70035c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xf700c758"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xf717a850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xf7009b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0xf7009ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0xf7008308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf7000e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xf70094e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xf7006190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xf70078f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0xf700b010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0xf6ffe010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0xf6fff6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0xf7001010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0xf70005c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0xf7003e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0xf6ffe880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0xf700cc70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0xf7007080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xf7006a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0xf7003a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0xf7005468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0xf700b6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xf70058a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0xf7008660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0xf7008d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0xf7000190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0xf7001cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xf7009840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf7001880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0xf6fffb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xf7001448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0xf700ba18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0xf70026e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0xf7009190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0xf70022b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0xf70089b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0xf6ffc190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0xf6fe5458"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0xf6fd2908"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0xf6fe58c0"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0xf6fd2d90"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0xf6fd1400"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xf74529f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xf6fcb9c0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xf7451c98"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xf6fca4b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xf7204730"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xf6fcaea8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0xf7201010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xf6fcb348"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0xf71f83e8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xf6fc9928"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6f6c2d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf6f6c2d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf717a100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xf6fc50f8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xf6f6c988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xf6f6c988"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xf717a850"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xf6fc4868"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xf6f6cea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0xf6f6cea0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xf6fc4c78"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0xf6f6bc48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0xf6f6bc48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xf6fc30d8"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0xf6f6a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0xf6f6a010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xf6fc3508"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0xf6f6ad70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xf6f6ad70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xf6fc4380"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xf6f668a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0xf6f668a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xf6fc56b8"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0xf6f5d430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0xf6f5d430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf6fc5e58"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf6f60cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf6f60cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xf6fc3948"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xf6f67bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xf6f67bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xf6fc2450"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xf6f65b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xf6f65b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xf6fc2970"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xf6f64010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xf6f64010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xf6fc2010"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0xf6f68c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0xf6f68c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xf6fc0820"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0xf6f5e2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0xf6f5e2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xf6fc2e38"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xf6f5f5c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0xf6f5f5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xf6fc0340"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xf6f5fa00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0xf6f5fa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xf6fbc5e8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xf6f54688"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xf6f54688"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xf6f505a0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xf6fd0de0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xf6f0c4a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6fcf678"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f092e0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6fcfce0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xf6f09de8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6fc6bf0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6f03010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6f03010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6efa8c0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6fbcb10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf705fa88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xf6f65190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0xf6f6b598"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xf6f677a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0xf6f64448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0xf6f5e6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0xf6f66030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0xf6f62e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0xf6f64880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0xf6f68190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0xf6f68568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf6f5f190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xf6f6a6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xf6f66468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0xf6f6b240"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0xf6f612b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0xf6f60880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0xf6f62190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0xf6f5eb20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0xf6f67368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xf6f66cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0xf6f64cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0xf6f656c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0xf6f6b8f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0xf6f688c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0xf6f67010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0xf6f60448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0xf6f60010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xf6f6aa18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf6f61b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0xf6f5fe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xf6f616e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0xf6f62a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0xf6f6a368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0xf6f625c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0xf6f530c8"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0xf6f4f010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xf6f44010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xf705fa88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xf6f4f3e8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xf7204730"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xf6f4fdf0"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0xf7203128"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xf6f4e848"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0xf7203b18"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xf6f4d388"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0xf71fb2a8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xf6f4da48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf6f0a7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xf6f0a7c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xf717a100"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xf6f4c238"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0xf6e10010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0xf6e10010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xf6f4cdf0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0xf6e1def0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xf6e1def0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xf6f4c9c0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0xf6e1c5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0xf6e1c5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xf6f4b250"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xf6f0c4a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f4ba90"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f092e0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6f490b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xf6f09de8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xf6f4bf28"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xf74b7a40"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xf6f48cf8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xf6e17010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xf6e17010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xf6f46278"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xf6e17448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xf6e17448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xf6f488b8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0xf6e1cce8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0xf6e1cce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xf6f45128"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0xf6e11b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0xf6e11b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xf6f46740"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xf6e12a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0xf6e12a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xf6f46c08"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xf6e12e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0xf6e12e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf6f45628"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf6e125c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf6e125c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xf6f45b10"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xf6e1e3b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0xf6e1e3b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0xf6f3d230"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6ed2d68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf7251f18"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0xf6ef6478"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6ed23d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xf6ef6ed0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6ebf258"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xf6ebf258"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xf6e300f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xf6ec1f18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6e5b600"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf6ecbde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6ebe8f8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf6ebe8f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6e7c340"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xf6e35968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf6e77720"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xf6e61a48"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xf6ebeec0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xf6ebeec0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf6e7c778"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xf6e30a88"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xf6eb9ae0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xf6eb9ae0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf6e7a208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0xf6e7a208"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xf690aa88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0xf6e7c340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf690db78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xf6e7c778"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xf690b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6909c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xf73285f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xf6906ec0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xf731fe18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0xf6905710"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xf7322798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0xf6902158"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xf7319498"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0xf6e5e4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xf6e32bc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xf6e2cbe8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf6e27e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xf6e27e18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xf6ec1f18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xf6e185c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0xf6e1ea60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xf6e1bb68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0xf6e17880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0xf6e1d4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf6e12190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0xf6e19448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0xf6e19cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0xf6e152b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0xf6e17cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xf6f0ae78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xf717a850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xf6e1c260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0xf6e1c990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xf6e1db98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xf6e19880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xf6e19010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0xf6e1e708"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0xf6e116e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0xf6e156e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0xf6e14cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0xf6e165c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0xf6e1b730"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xf6e18190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0xf6e16190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0xf6e18b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0xf6e1edb8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0xf6e1b3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0xf6e14880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0xf6e14448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf6e14010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0xf6e112b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xf7179b48"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xf6e15b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0xf6e1d190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0xf6e16e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0xf6e1d840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0xf6e16a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xf7177330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0xf6e1b080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0xf6e108e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xf7179100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xf6dfa088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xf6df9b10"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xf6dfeda8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xf6df95f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6de7430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6deda70"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0xf6de7b00"/></from>
      <to><interface-ref name="State" scoped="" ref="0xf6de9738"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0xf6de9738"/></from>
      <to><interface-ref name="State" scoped="" ref="0xf7130100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xf6de6350"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xf6dfa948"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6de67f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f092e0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0xf6dd9260"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0xf6dd6800"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6dd5010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf6dd9688"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6dd53d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f092e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xf6dba550"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xf6dc1af8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xf6dbacb8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xf6dc1748"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xf6db9060"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xf6f0c4a8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6db9880"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f092e0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xf6db9d58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xf6dbecd8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0xf6da73c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0xf6d8f5a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xf6d8c6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0xf6d8c6a8"/></from>
      <to><interface-ref name="State" scoped="" ref="0xf7130100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6d80510"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7517230"/></to>
    </wire>
    <wire loc="280:SendingMoteC.nc">
      <from><interface-ref name="sendIdentification" scoped="" ref="0xf6cf2858"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="273:SendingMoteC.nc">
      <from><interface-ref name="sendReport" scoped="" ref="0xf6cf5548"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="1266:SendingMoteC.nc">
      <from><interface-ref name="sendEchoReply" scoped="" ref="0xf6c85858"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="686:SendingMoteC.nc">
      <from><interface-ref name="sendCommandACK" scoped="" ref="0xf6cc2220"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:SendingMoteC.nc">
      <from><interface-ref name="sendReading" scoped="" ref="0xf6cef170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="272:SendingMoteC.nc">
      <from><interface-ref name="sendMultipleEcho" scoped="" ref="0xf6cf6b98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf68a02c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf689cd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6c38918"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf68a0960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf68a0960"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6bee010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf689f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf689f010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6beec08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf689fc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf689fc08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7543308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6899500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c21220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6899b98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xf6c21220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6bf7348"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xf6bf7ab8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf755a670"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6bf6230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xf6bf6e08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0xf6bf5510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0xf6bf5948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf6872890"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf68693b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6bec9f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6872f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6872f28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6beb150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf686f5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf686f5d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6bebd48"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf686e250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf686e250"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7543308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6869a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c21220"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6868150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf685c2e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf68579a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf685c980"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf685b030"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6be7e28"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf685bc28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf685bc28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7543308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6854080"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c21220"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6854718"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf684a880"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf68403b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6be5c58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf684af18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf684af18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6be4310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf68475c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf68475c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6be4f08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf6846250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6846250"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7543308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf6840a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c21220"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf683f150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0xf68332e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xf682fd98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6be2c00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf6833980"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6833980"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6be1310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf6832030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6832030"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6be1f08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xf6832c28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0xf6832c28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7543308"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xf682c500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xf6c21220"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf682cb98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6bddd60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6bda4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6bd8510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6bd8ba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6bd6bf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6bd5310"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0xf6bd3328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xf7551148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0xf6bd39c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="ActiveMessageC" loc="48:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.8 $ $Date: 2009/09/16 00:51:51 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.8 $ $Date: 2009/10/28 16:18:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0xf75d18d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.22 $ $Date: 2009/10/28 21:09:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xf6eb6758"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="32(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SendingMoteC" loc="57:SendingMoteC.nc">
      <module/>
    </component>
    <component qname="SendingMoteAppC.FlushTimer" loc="36(SendingMoteAppC.FlushTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.SendTimer" loc="36(SendingMoteAppC.SendTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.GapTimer" loc="36(SendingMoteAppC.GapTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.SignalTimer" loc="36(SendingMoteAppC.SignalTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.NoiseFloorTimer" loc="36(SendingMoteAppC.NoiseFloorTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.SensorReadingTimer" loc="36(SendingMoteAppC.SensorReadingTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.RssiMsgSender" loc="39(SendingMoteAppC.RssiMsgSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.RssiMsgSender.SenderC" loc="39(SendingMoteAppC.RssiMsgSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.MultiPingResponseSender" loc="39(SendingMoteAppC.MultiPingResponseSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.MultiPingResponseSender.SenderC" loc="39(SendingMoteAppC.MultiPingResponseSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.ReportMsgSender" loc="39(SendingMoteAppC.ReportMsgSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.ReportMsgSender.SenderC" loc="39(SendingMoteAppC.ReportMsgSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.TinyReportMsgSender" loc="39(SendingMoteAppC.TinyReportMsgSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.TinyReportMsgSender.SenderC" loc="39(SendingMoteAppC.TinyReportMsgSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.CommandMsgSender" loc="39(SendingMoteAppC.CommandMsgSender):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.CommandMsgSender.SenderC" loc="39(SendingMoteAppC.CommandMsgSender.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP" loc="35(SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingMoteAppC.PingMsgReader" loc="35(SendingMoteAppC.PingMsgReader):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.MultiPingMsgReader" loc="35(SendingMoteAppC.MultiPingMsgReader):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.ResponseMsgReader" loc="35(SendingMoteAppC.ResponseMsgReader):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingMoteAppC.CommandMsgReader" loc="35(SendingMoteAppC.CommandMsgReader):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:14">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xf7414b08" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xf7414d20" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xf7411010" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xf740bf08" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xf7408148" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xf7408370" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xf7408560" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xf73bdf28" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xf73ba160" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xf73ba388" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xf73ba578" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xf7281dd8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf7281dd8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xf727d010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xf7283b38" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xf7283b38"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xf7273010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf7273010"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xf72731d0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xf724c6f0" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xf724c6f0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xf724cb38" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf724cb38"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xf724fb30" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xf724fb30"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xf723b010" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xf723b010"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xf723b278" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xf723b278"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xf723b6e8" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xf723b6e8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xf723b950" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xf723bdd8" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xf723bdd8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xf72566f8" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xf72566f8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xf7256b58" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xf7256b58"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xf7256dc0" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xf7256dc0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xf7228258" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xf7228258"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xf72284c0" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0xf71c2010" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0xf71c2238" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0xf71c2460" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xf71c2650" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xf70a5c38" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xf709ea88" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf6ed0378" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf6ed0378"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xf6eb6758" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xf6eb6758"/></type-var>
        </typedef>
        <constant name="divider" ref="0xf6eb6918" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xf6eafa08" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xf6eafa08"/></type-var>
        </typedef>
        <constant name="divider" ref="0xf6eafbc8" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf6e76248" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf6e76248"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf6e5d830" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf6e5d830"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xf6e5da10" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xf6c3a9c8" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xf6c34568" loc="39:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xf6c2d030" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xf6c206c8" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xf6bdf2d0" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="SplitControl" ref="0xf7562d30" loc="50:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf7562d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf7562f08"/>
        <function-ref name="stopDone" scoped="" ref="0xf7566010"/>
        <function-ref name="start" scoped="" ref="0xf75660f0"/>
        <function-ref name="stop" scoped="" ref="0xf75661d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf755a670" loc="52:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf755a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf755a848"/>
        <function-ref name="getPayload" scoped="" ref="0xf755a928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf755aa08"/>
        <function-ref name="cancel" scoped="" ref="0xf755aae8"/>
        <function-ref name="sendDone" scoped="" ref="0xf755abc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf75641b0" loc="54:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf75641b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7564388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf7551148" loc="56:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf7551148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf7551320"/>
        <function-ref name="payloadLength" scoped="" ref="0xf7551400"/>
        <function-ref name="getPayload" scoped="" ref="0xf75514e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf75515c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf75516a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xf7541c68" loc="59:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xf7541c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf75597a0"/>
        <function-ref name="clear" scoped="" ref="0xf7559b50"/>
        <function-ref name="isValid" scoped="" ref="0xf75593f0"/>
        <function-ref name="set" scoped="" ref="0xf7559f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf75384f0" loc="61:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf75384f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf75386c8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf75387a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf7538888"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf7538968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf7558af8" loc="53:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf7558af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7558cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf7543308" loc="58:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7543308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf75434e0"/>
        <function-ref name="noAck" scoped="" ref="0xf75435c0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf75436a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf7548140" loc="57:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf7548140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf7548318"/>
        <function-ref name="source" scoped="" ref="0xf75483f8"/>
        <function-ref name="address" scoped="" ref="0xf75484d8"/>
        <function-ref name="destination" scoped="" ref="0xf75485b8"/>
        <function-ref name="setSource" scoped="" ref="0xf7548698"/>
        <function-ref name="setDestination" scoped="" ref="0xf7548778"/>
        <function-ref name="type" scoped="" ref="0xf7548858"/>
        <function-ref name="setType" scoped="" ref="0xf7548938"/>
        <function-ref name="isForMe" scoped="" ref="0xf7548a18"/>
        <function-ref name="setGroup" scoped="" ref="0xf7548af8"/>
        <function-ref name="localGroup" scoped="" ref="0xf7548bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf7557650" loc="60:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf7557650"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf753e170"/>
        <function-ref name="clear" scoped="" ref="0xf753e520"/>
        <function-ref name="isValid" scoped="" ref="0xf7557da0"/>
        <function-ref name="set" scoped="" ref="0xf753e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf7537c48" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf7537c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf7537e20"/>
        <function-ref name="stopDone" scoped="" ref="0xf7537f00"/>
        <function-ref name="start" scoped="" ref="0xf7536010"/>
        <function-ref name="stop" scoped="" ref="0xf75360f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xf7527578" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xf7527578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xf7527750"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xf7527830"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xf7527910"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xf75279f0"/>
        <function-ref name="setCca" scoped="" ref="0xf7527ad0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xf7527bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf7526260" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf7526260"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf75264b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf75345f0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf75345f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf75347c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf75348a8"/>
        <function-ref name="getPayload" scoped="" ref="0xf7534988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7534a68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf7534b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf7536550" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf7536550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7536728"/>
        <function-ref name="getPayload" scoped="" ref="0xf7536808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf75368e8"/>
        <function-ref name="cancel" scoped="" ref="0xf75369c8"/>
        <function-ref name="sendDone" scoped="" ref="0xf7536aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf75355c8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf75355c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf75357a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xf752ea90" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf752ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf752ec68"/>
        <function-ref name="setNetwork" scoped="" ref="0xf752ed48"/>
        <function-ref name="getRssi" scoped="" ref="0xf752ee28"/>
        <function-ref name="getNetwork" scoped="" ref="0xf752ef08"/>
        <function-ref name="getPower" scoped="" ref="0xf7533010"/>
        <function-ref name="getLqi" scoped="" ref="0xf75330f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf7527da0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf7527da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf7532010"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf75320f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf75321d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf75322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf7536f10" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf7536f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7535108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf7533310" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7533310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf75334e8"/>
        <function-ref name="noAck" scoped="" ref="0xf75335c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xf75336a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf7522760" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf7522760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf7522938"/>
        <function-ref name="setRetries" scoped="" ref="0xf7522a18"/>
        <function-ref name="getRetries" scoped="" ref="0xf7522af8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf7522bd8"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf7522cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf7535938" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf7535938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf7535b10"/>
        <function-ref name="source" scoped="" ref="0xf7535bf0"/>
        <function-ref name="address" scoped="" ref="0xf7535cd0"/>
        <function-ref name="destination" scoped="" ref="0xf7535db0"/>
        <function-ref name="setSource" scoped="" ref="0xf7535e90"/>
        <function-ref name="setDestination" scoped="" ref="0xf7534010"/>
        <function-ref name="type" scoped="" ref="0xf75340f0"/>
        <function-ref name="setType" scoped="" ref="0xf75341d0"/>
        <function-ref name="isForMe" scoped="" ref="0xf75342b0"/>
        <function-ref name="setGroup" scoped="" ref="0xf7534390"/>
        <function-ref name="localGroup" scoped="" ref="0xf7534470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xf752c790" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf752c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xf752c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf7521540" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf7521540"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf7521718"/>
        <function-ref name="stopDone" scoped="" ref="0xf75217f8"/>
        <function-ref name="start" scoped="" ref="0xf75218d8"/>
        <function-ref name="stop" scoped="" ref="0xf75219b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xf75189b8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf75189b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf7518b90"/>
        <function-ref name="setNetwork" scoped="" ref="0xf7518c70"/>
        <function-ref name="getRssi" scoped="" ref="0xf7518d50"/>
        <function-ref name="getNetwork" scoped="" ref="0xf7518e30"/>
        <function-ref name="getPower" scoped="" ref="0xf7518f10"/>
        <function-ref name="getLqi" scoped="" ref="0xf7517010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf75113d8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf75113d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf75115b0"/>
        <function-ref name="getPayload" scoped="" ref="0xf7511690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7511770"/>
        <function-ref name="cancel" scoped="" ref="0xf7511850"/>
        <function-ref name="sendDone" scoped="" ref="0xf7511930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xf7511e88" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xf7511e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7518070"/>
        <function-ref name="getPayload" scoped="" ref="0xf7518150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf7518230"/>
        <function-ref name="cancel" scoped="" ref="0xf7518310"/>
        <function-ref name="sendDone" scoped="" ref="0xf75183f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf7517b88" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf7517b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf7517d60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf7517e40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf7517f20"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf7512018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf7511ab8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf7511ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf7511c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xf7517230" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf7517230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf7517408"/>
        <function-ref name="noAck" scoped="" ref="0xf75174e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xf75175c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf7519ee0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf7519ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf751d0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf751d1c0"/>
        <function-ref name="request" scoped="" ref="0xf751d2a0"/>
        <function-ref name="granted" scoped="" ref="0xf751d380"/>
        <function-ref name="isOwner" scoped="" ref="0xf751d460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xf7518620" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xf7518620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf75187f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf75121c0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf75121c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf7512398"/>
        <function-ref name="setRetries" scoped="" ref="0xf7512478"/>
        <function-ref name="getRetries" scoped="" ref="0xf7512558"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf7512638"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf7512718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xf75177c0" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf75177c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xf7517998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf750c720" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf750c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf750c8f8"/>
        <function-ref name="stopDone" scoped="" ref="0xf750c9d8"/>
        <function-ref name="start" scoped="" ref="0xf750cab8"/>
        <function-ref name="stop" scoped="" ref="0xf750cb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xf750b810" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xf750b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xf750b9e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xf750bac8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xf750bba8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xf750bc88"/>
        <function-ref name="setCca" scoped="" ref="0xf750bd68"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xf750be48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf750cd28" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf750cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf750cf00"/>
        <function-ref name="getPayload" scoped="" ref="0xf750b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf750b0f0"/>
        <function-ref name="cancel" scoped="" ref="0xf750b1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xf750b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf750b458" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf750b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf750b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf750a7a0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf750a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf750a978"/>
        <function-ref name="stopDone" scoped="" ref="0xf750aa58"/>
        <function-ref name="start" scoped="" ref="0xf750ab38"/>
        <function-ref name="stop" scoped="" ref="0xf750ac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xf7507570" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xf7507570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xf7507748"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xf7507828"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xf7507908"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xf75079e8"/>
        <function-ref name="setCca" scoped="" ref="0xf7507ac8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xf7507ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xf7504800" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0xf7504800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xf75049d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xf7504ab8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xf7504b98"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xf7504c78"/>
        <function-ref name="setCca" scoped="" ref="0xf7504d58"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xf7504e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xf74f2f10" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf74f2f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf74f9108"/>
        <function-ref name="setNetwork" scoped="" ref="0xf74f91e8"/>
        <function-ref name="getRssi" scoped="" ref="0xf74f92c8"/>
        <function-ref name="getNetwork" scoped="" ref="0xf74f93a8"/>
        <function-ref name="getPower" scoped="" ref="0xf74f9488"/>
        <function-ref name="getLqi" scoped="" ref="0xf74f9568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0xf7504040" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0xf7504040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7504218"/>
        <function-ref name="cancel" scoped="" ref="0xf75042f8"/>
        <function-ref name="modify" scoped="" ref="0xf75043d8"/>
        <function-ref name="sendDone" scoped="" ref="0xf75044b8"/>
        <function-ref name="resend" scoped="" ref="0xf7504598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf750ada8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf750ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7507010"/>
        <function-ref name="getPayload" scoped="" ref="0xf75070f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf75071d0"/>
        <function-ref name="cancel" scoped="" ref="0xf75072b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf7507390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xf7500ca8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf7500ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf7500e80"/>
        <function-ref name="rand32" scoped="" ref="0xf74fa010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xf74ff9f0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xf74ff9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf74ffbc8"/>
        <function-ref name="stop" scoped="" ref="0xf74ffca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xf74f8010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xf74f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0xf74f81e8"/>
        <function-ref name="getMetadata" scoped="" ref="0xf74f82c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0xf7505010" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xf7505010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xf75051e8"/>
        <function-ref name="rfOff" scoped="" ref="0xf75052c8"/>
        <function-ref name="rxOn" scoped="" ref="0xf75053a8"/>
        <function-ref name="startVReg" scoped="" ref="0xf7505488"/>
        <function-ref name="stopVReg" scoped="" ref="0xf7505568"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xf7505648"/>
        <function-ref name="stopOscillator" scoped="" ref="0xf7505728"/>
        <function-ref name="startVRegDone" scoped="" ref="0xf7505808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf74f2298" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf74f2298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf74f2470"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf74f2550"/>
        <function-ref name="led1On" scoped="" ref="0xf74f2630"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf74f2710"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf74f27f0"/>
        <function-ref name="get" scoped="" ref="0xf74f28d0"/>
        <function-ref name="led1Off" scoped="" ref="0xf74f29b0"/>
        <function-ref name="led2Off" scoped="" ref="0xf74f2d30"/>
        <function-ref name="set" scoped="" ref="0xf74f2a90"/>
        <function-ref name="led0On" scoped="" ref="0xf74f2b70"/>
        <function-ref name="led2On" scoped="" ref="0xf74f2c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xf7507d60" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf7507d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7506010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf75060f0"/>
        <function-ref name="request" scoped="" ref="0xf75061d0"/>
        <function-ref name="granted" scoped="" ref="0xf75062b0"/>
        <function-ref name="isOwner" scoped="" ref="0xf7506390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0xf74ec838" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0xf74ec838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf74eca90"/>
        <function-ref name="toIdle" scoped="" ref="0xf74ecb70"/>
        <function-ref name="isState" scoped="" ref="0xf74ecc50"/>
        <function-ref name="isIdle" scoped="" ref="0xf74ecd30"/>
        <function-ref name="requestState" scoped="" ref="0xf74ece10"/>
        <function-ref name="forceState" scoped="" ref="0xf74ecef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0xf74eb9a8" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0xf74eb9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf74ebb80"/>
        <function-ref name="runTask" scoped="" ref="0xf74ebc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0xf74eb198" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0xf74eb198"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf74eb370"/>
        <function-ref name="runTask" scoped="" ref="0xf74eb450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0xf74ee928" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0xf74ee928"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf74eeb00"/>
        <function-ref name="runTask" scoped="" ref="0xf74eebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xf74b7a40" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xf74b7a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xf74b7c18"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xf74b7cf8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xf74b7dd8"/>
        <function-ref name="syncDone" scoped="" ref="0xf74b7eb8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xf74be010"/>
        <function-ref name="setShortAddr" scoped="" ref="0xf74be0f0"/>
        <function-ref name="setChannel" scoped="" ref="0xf74be1d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xf74be2b0"/>
        <function-ref name="setPanAddr" scoped="" ref="0xf74be390"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xf74be470"/>
        <function-ref name="getShortAddr" scoped="" ref="0xf74be550"/>
        <function-ref name="sync" scoped="" ref="0xf74be630"/>
        <function-ref name="getChannel" scoped="" ref="0xf74be710"/>
        <function-ref name="getPanAddr" scoped="" ref="0xf74be870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xf74b48e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0xf74b48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf74b4f08"/>
        <function-ref name="readDone" scoped="" ref="0xf74b6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xf74bea40" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xf74bea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xf74bec18"/>
        <function-ref name="rfOff" scoped="" ref="0xf74becf8"/>
        <function-ref name="rxOn" scoped="" ref="0xf74bedd8"/>
        <function-ref name="startVReg" scoped="" ref="0xf74beeb8"/>
        <function-ref name="stopVReg" scoped="" ref="0xf74bd010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xf74bd0f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0xf74bd1d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0xf74bd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf74c2f00" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf74c2f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf74bf0f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf74bf1d0"/>
        <function-ref name="request" scoped="" ref="0xf74bf2b0"/>
        <function-ref name="granted" scoped="" ref="0xf74bf390"/>
        <function-ref name="isOwner" scoped="" ref="0xf74bf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xf74b1010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xf74b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xf74b11e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xf74b12c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xf74b13a8"/>
        <function-ref name="syncDone" scoped="" ref="0xf74b1488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xf74b1568"/>
        <function-ref name="setShortAddr" scoped="" ref="0xf74b1648"/>
        <function-ref name="setChannel" scoped="" ref="0xf74b1728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xf74b1808"/>
        <function-ref name="setPanAddr" scoped="" ref="0xf74b18e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xf74b19c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0xf74b1aa8"/>
        <function-ref name="sync" scoped="" ref="0xf74b1b88"/>
        <function-ref name="getChannel" scoped="" ref="0xf74b1c68"/>
        <function-ref name="getPanAddr" scoped="" ref="0xf74b1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0xf749d520" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xf749d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf749d6f8"/>
        <function-ref name="write" scoped="" ref="0xf749d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0xf74a9b30" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0xf74a9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf74a8068"/>
        <function-ref name="fired" scoped="" ref="0xf74ad820"/>
        <function-ref name="startAt" scoped="" ref="0xf74add10"/>
        <function-ref name="isRunning" scoped="" ref="0xf74ada98"/>
        <function-ref name="getAlarm" scoped="" ref="0xf74a82e0"/>
        <function-ref name="start" scoped="" ref="0xf74ad308"/>
        <function-ref name="stop" scoped="" ref="0xf74ad5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0xf749fa58" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xf749fa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf749fc30"/>
        <function-ref name="write" scoped="" ref="0xf749fd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xf74a7110" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xf74a7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a72e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74a73c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74a74a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a7588"/>
        <function-ref name="get" scoped="" ref="0xf74a7668"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a7748"/>
        <function-ref name="set" scoped="" ref="0xf74a7828"/>
        <function-ref name="clr" scoped="" ref="0xf74a7908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xf74afaf8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0xf74afaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf74ae1e0"/>
        <function-ref name="readDone" scoped="" ref="0xf74ae438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0xf748fcc8" loc="118:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0xf748fcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf748fea0"/>
        <function-ref name="runTask" scoped="" ref="0xf748e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0xf749da18" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xf749da18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf749dbf0"/>
        <function-ref name="write" scoped="" ref="0xf749dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0xf749f030" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xf749f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf749f208"/>
        <function-ref name="write" scoped="" ref="0xf749f2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xf749ec00" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf749ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xf749edd8"/>
        <function-ref name="changed" scoped="" ref="0xf749eeb8"/>
        <function-ref name="amGroup" scoped="" ref="0xf74a1010"/>
        <function-ref name="setAddress" scoped="" ref="0xf74a10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xf74a36e8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xf74a36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a38c0"/>
        <function-ref name="isInput" scoped="" ref="0xf74a39a0"/>
        <function-ref name="toggle" scoped="" ref="0xf74a3a80"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a3b60"/>
        <function-ref name="get" scoped="" ref="0xf74a3c40"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a3d20"/>
        <function-ref name="set" scoped="" ref="0xf74a3e00"/>
        <function-ref name="clr" scoped="" ref="0xf74a3ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0xf7496158" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xf7496158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7496330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0xf74a7b18" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0xf74a7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74a7cf0"/>
        <function-ref name="isInput" scoped="" ref="0xf74a7dd0"/>
        <function-ref name="toggle" scoped="" ref="0xf74a7eb0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74a6010"/>
        <function-ref name="get" scoped="" ref="0xf74a60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74a61d0"/>
        <function-ref name="set" scoped="" ref="0xf74a62b0"/>
        <function-ref name="clr" scoped="" ref="0xf74a6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf74b0488" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf74b0488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74b0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xf749d010" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xf749d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf749d1e8"/>
        <function-ref name="write" scoped="" ref="0xf749d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0xf7496578" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xf7496578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7496750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xf7496998" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xf7496998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7496b70"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7496c50"/>
        <function-ref name="request" scoped="" ref="0xf7496d30"/>
        <function-ref name="granted" scoped="" ref="0xf7496e10"/>
        <function-ref name="isOwner" scoped="" ref="0xf7496ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0xf7494a18" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0xf7494a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7494bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7494cd0"/>
        <function-ref name="request" scoped="" ref="0xf7494db0"/>
        <function-ref name="granted" scoped="" ref="0xf7494e90"/>
        <function-ref name="isOwner" scoped="" ref="0xf7493010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xf74af010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xf74af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xf74af1e8"/>
        <function-ref name="rfOff" scoped="" ref="0xf74af2c8"/>
        <function-ref name="rxOn" scoped="" ref="0xf74af3a8"/>
        <function-ref name="startVReg" scoped="" ref="0xf74af488"/>
        <function-ref name="stopVReg" scoped="" ref="0xf74af568"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xf74af648"/>
        <function-ref name="stopOscillator" scoped="" ref="0xf74af728"/>
        <function-ref name="startVRegDone" scoped="" ref="0xf74af808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0xf749f538" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xf749f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf749f710"/>
        <function-ref name="write" scoped="" ref="0xf749f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0xf7498a88" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xf7498a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7498ce0"/>
        <function-ref name="write" scoped="" ref="0xf7498dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0xf74978c0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xf74978c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7497a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf74931a0" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf74931a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf7493378"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf7493458"/>
        <function-ref name="led1On" scoped="" ref="0xf7493538"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf7493618"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf74936f8"/>
        <function-ref name="get" scoped="" ref="0xf74937d8"/>
        <function-ref name="led1Off" scoped="" ref="0xf74938b8"/>
        <function-ref name="led2Off" scoped="" ref="0xf7493c38"/>
        <function-ref name="set" scoped="" ref="0xf7493998"/>
        <function-ref name="led0On" scoped="" ref="0xf7493a78"/>
        <function-ref name="led2On" scoped="" ref="0xf7493b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0xf748f4e8" loc="117:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0xf748f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf748f6c0"/>
        <function-ref name="runTask" scoped="" ref="0xf748f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf74b0818" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf74b0818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf74b09f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf74b0ad0"/>
        <function-ref name="request" scoped="" ref="0xf74b0bb0"/>
        <function-ref name="granted" scoped="" ref="0xf74b0c90"/>
        <function-ref name="isOwner" scoped="" ref="0xf74b0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0xf749a300" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xf749a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf749a4d8"/>
        <function-ref name="write" scoped="" ref="0xf749a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0xf74a0c50" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0xf74a0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf74a0e28"/>
        <function-ref name="disable" scoped="" ref="0xf74a0f08"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xf74a2010"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xf74a20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0xf7494168" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0xf7494168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7494440"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7494520"/>
        <function-ref name="request" scoped="" ref="0xf7494600"/>
        <function-ref name="granted" scoped="" ref="0xf74946e0"/>
        <function-ref name="isOwner" scoped="" ref="0xf74947c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0xf7497cd8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xf7497cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7497eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xf744d590" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf744d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf744d768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xf744d188" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf744d188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf744d360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xf74469c8" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xf74469c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7446ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf744b868" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf744b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf744ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xf7446268" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xf7446268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xf7446440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xf7446520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xf7446600"/>
        <function-ref name="actualMicro" scoped="" ref="0xf74466e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xf74467c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xf7444088" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xf7444088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7444260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf744ac58" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf744ac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf744ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xf7444490" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xf7444490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7444668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xf7449ac0" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xf7449ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7449c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf74496f0" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf74496f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf74498c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xf743c4b0" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xf743c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf743c688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xf743fab0" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xf743fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf743fc88"/>
        <function-ref name="isInput" scoped="" ref="0xf743fd68"/>
        <function-ref name="toggle" scoped="" ref="0xf743fe48"/>
        <function-ref name="isOutput" scoped="" ref="0xf743ff28"/>
        <function-ref name="get" scoped="" ref="0xf743c018"/>
        <function-ref name="makeOutput" scoped="" ref="0xf743c0f8"/>
        <function-ref name="set" scoped="" ref="0xf743c1d8"/>
        <function-ref name="clr" scoped="" ref="0xf743c2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xf743f688" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf743f688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf743f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xf7418210" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xf7418210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74185e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74186c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74187a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7418888"/>
        <function-ref name="get" scoped="" ref="0xf7418968"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7418a48"/>
        <function-ref name="set" scoped="" ref="0xf7418b28"/>
        <function-ref name="clr" scoped="" ref="0xf7418c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xf7428750" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xf7428750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7428928"/>
        <function-ref name="isInput" scoped="" ref="0xf7428a08"/>
        <function-ref name="toggle" scoped="" ref="0xf7428ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7428bc8"/>
        <function-ref name="get" scoped="" ref="0xf7428ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7428d88"/>
        <function-ref name="set" scoped="" ref="0xf7428e68"/>
        <function-ref name="clr" scoped="" ref="0xf7427010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xf7422ce8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xf7422ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7422ec0"/>
        <function-ref name="isInput" scoped="" ref="0xf7420010"/>
        <function-ref name="toggle" scoped="" ref="0xf74200f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74201d0"/>
        <function-ref name="get" scoped="" ref="0xf74202b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7420390"/>
        <function-ref name="set" scoped="" ref="0xf7420470"/>
        <function-ref name="clr" scoped="" ref="0xf7420550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xf741cea8" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xf741cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741b0c0"/>
        <function-ref name="isInput" scoped="" ref="0xf741b1a0"/>
        <function-ref name="toggle" scoped="" ref="0xf741b280"/>
        <function-ref name="isOutput" scoped="" ref="0xf741b360"/>
        <function-ref name="get" scoped="" ref="0xf741b440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741b520"/>
        <function-ref name="set" scoped="" ref="0xf741b600"/>
        <function-ref name="clr" scoped="" ref="0xf741b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xf74342f0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xf74342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74344c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74345a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7434688"/>
        <function-ref name="isOutput" scoped="" ref="0xf7434768"/>
        <function-ref name="get" scoped="" ref="0xf7434848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7434928"/>
        <function-ref name="set" scoped="" ref="0xf7434a08"/>
        <function-ref name="clr" scoped="" ref="0xf7434ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xf741da98" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xf741da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741dc70"/>
        <function-ref name="isInput" scoped="" ref="0xf741dd50"/>
        <function-ref name="toggle" scoped="" ref="0xf741de30"/>
        <function-ref name="isOutput" scoped="" ref="0xf741df10"/>
        <function-ref name="get" scoped="" ref="0xf741c010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741c0f0"/>
        <function-ref name="set" scoped="" ref="0xf741c1d0"/>
        <function-ref name="clr" scoped="" ref="0xf741c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xf7433750" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xf7433750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7433928"/>
        <function-ref name="isInput" scoped="" ref="0xf7433a08"/>
        <function-ref name="toggle" scoped="" ref="0xf7433ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7433bc8"/>
        <function-ref name="get" scoped="" ref="0xf7433ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7433d88"/>
        <function-ref name="set" scoped="" ref="0xf7433e68"/>
        <function-ref name="clr" scoped="" ref="0xf7432010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xf742dea8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xf742dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf742c0c0"/>
        <function-ref name="isInput" scoped="" ref="0xf742c1a0"/>
        <function-ref name="toggle" scoped="" ref="0xf742c280"/>
        <function-ref name="isOutput" scoped="" ref="0xf742c360"/>
        <function-ref name="get" scoped="" ref="0xf742c440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742c520"/>
        <function-ref name="set" scoped="" ref="0xf742c600"/>
        <function-ref name="clr" scoped="" ref="0xf742c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xf7426670" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xf7426670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7426848"/>
        <function-ref name="isInput" scoped="" ref="0xf7426928"/>
        <function-ref name="toggle" scoped="" ref="0xf7426a08"/>
        <function-ref name="isOutput" scoped="" ref="0xf7426ae8"/>
        <function-ref name="get" scoped="" ref="0xf7426bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7426ca8"/>
        <function-ref name="set" scoped="" ref="0xf7426d88"/>
        <function-ref name="clr" scoped="" ref="0xf7426e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xf741fc08" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xf741fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741fde0"/>
        <function-ref name="isInput" scoped="" ref="0xf741fec0"/>
        <function-ref name="toggle" scoped="" ref="0xf741e010"/>
        <function-ref name="isOutput" scoped="" ref="0xf741e0f0"/>
        <function-ref name="get" scoped="" ref="0xf741e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741e2b0"/>
        <function-ref name="set" scoped="" ref="0xf741e390"/>
        <function-ref name="clr" scoped="" ref="0xf741e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xf7437010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xf7437010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74371e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74372c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74373a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7437488"/>
        <function-ref name="get" scoped="" ref="0xf7437568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7437648"/>
        <function-ref name="set" scoped="" ref="0xf7437728"/>
        <function-ref name="clr" scoped="" ref="0xf7437808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xf7431670" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xf7431670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7431848"/>
        <function-ref name="isInput" scoped="" ref="0xf7431928"/>
        <function-ref name="toggle" scoped="" ref="0xf7431a08"/>
        <function-ref name="isOutput" scoped="" ref="0xf7431ae8"/>
        <function-ref name="get" scoped="" ref="0xf7431bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7431ca8"/>
        <function-ref name="set" scoped="" ref="0xf7431d88"/>
        <function-ref name="clr" scoped="" ref="0xf7431e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xf742bce8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xf742bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf742bec0"/>
        <function-ref name="isInput" scoped="" ref="0xf742a010"/>
        <function-ref name="toggle" scoped="" ref="0xf742a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf742a1d0"/>
        <function-ref name="get" scoped="" ref="0xf742a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742a390"/>
        <function-ref name="set" scoped="" ref="0xf742a470"/>
        <function-ref name="clr" scoped="" ref="0xf742a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xf74244b0" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xf74244b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7424688"/>
        <function-ref name="isInput" scoped="" ref="0xf7424768"/>
        <function-ref name="toggle" scoped="" ref="0xf7424848"/>
        <function-ref name="isOutput" scoped="" ref="0xf7424928"/>
        <function-ref name="get" scoped="" ref="0xf7424a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7424ae8"/>
        <function-ref name="set" scoped="" ref="0xf7424bc8"/>
        <function-ref name="clr" scoped="" ref="0xf7424ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xf741ace8" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xf741ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741aec0"/>
        <function-ref name="isInput" scoped="" ref="0xf7419010"/>
        <function-ref name="toggle" scoped="" ref="0xf74190f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74191d0"/>
        <function-ref name="get" scoped="" ref="0xf74192b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7419390"/>
        <function-ref name="set" scoped="" ref="0xf7419470"/>
        <function-ref name="clr" scoped="" ref="0xf7419550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xf74162f0" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xf74162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74164c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74165a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7416688"/>
        <function-ref name="isOutput" scoped="" ref="0xf7416768"/>
        <function-ref name="get" scoped="" ref="0xf7416848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7416928"/>
        <function-ref name="set" scoped="" ref="0xf7416a08"/>
        <function-ref name="clr" scoped="" ref="0xf7416ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xf74238e0" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xf74238e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7423ab8"/>
        <function-ref name="isInput" scoped="" ref="0xf7423b98"/>
        <function-ref name="toggle" scoped="" ref="0xf7423c78"/>
        <function-ref name="isOutput" scoped="" ref="0xf7423d58"/>
        <function-ref name="get" scoped="" ref="0xf7423e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7423f18"/>
        <function-ref name="set" scoped="" ref="0xf7422010"/>
        <function-ref name="clr" scoped="" ref="0xf74220f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xf7436ea8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xf7436ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74350c0"/>
        <function-ref name="isInput" scoped="" ref="0xf74351a0"/>
        <function-ref name="toggle" scoped="" ref="0xf7435280"/>
        <function-ref name="isOutput" scoped="" ref="0xf7435360"/>
        <function-ref name="get" scoped="" ref="0xf7435440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7435520"/>
        <function-ref name="set" scoped="" ref="0xf7435600"/>
        <function-ref name="clr" scoped="" ref="0xf74356e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xf742f590" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xf742f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf742f768"/>
        <function-ref name="isInput" scoped="" ref="0xf742f848"/>
        <function-ref name="toggle" scoped="" ref="0xf742f928"/>
        <function-ref name="isOutput" scoped="" ref="0xf742fa08"/>
        <function-ref name="get" scoped="" ref="0xf742fae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742fbc8"/>
        <function-ref name="set" scoped="" ref="0xf742fca8"/>
        <function-ref name="clr" scoped="" ref="0xf742fd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xf7418e08" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xf7418e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7417010"/>
        <function-ref name="isInput" scoped="" ref="0xf74170f0"/>
        <function-ref name="toggle" scoped="" ref="0xf74171d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74172b0"/>
        <function-ref name="get" scoped="" ref="0xf7417390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7417470"/>
        <function-ref name="set" scoped="" ref="0xf7417550"/>
        <function-ref name="clr" scoped="" ref="0xf7417630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xf742ea08" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xf742ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf742ebe0"/>
        <function-ref name="isInput" scoped="" ref="0xf742ecc0"/>
        <function-ref name="toggle" scoped="" ref="0xf742eda0"/>
        <function-ref name="isOutput" scoped="" ref="0xf742ee80"/>
        <function-ref name="get" scoped="" ref="0xf742d010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742d0f0"/>
        <function-ref name="set" scoped="" ref="0xf742d1d0"/>
        <function-ref name="clr" scoped="" ref="0xf742d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xf7427210" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xf7427210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74273e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74274c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74275a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7427688"/>
        <function-ref name="get" scoped="" ref="0xf7427768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7427848"/>
        <function-ref name="set" scoped="" ref="0xf7427928"/>
        <function-ref name="clr" scoped="" ref="0xf7427a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xf7420750" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xf7420750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7420928"/>
        <function-ref name="isInput" scoped="" ref="0xf7420a08"/>
        <function-ref name="toggle" scoped="" ref="0xf7420ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7420bc8"/>
        <function-ref name="get" scoped="" ref="0xf7420ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7420d88"/>
        <function-ref name="set" scoped="" ref="0xf7420e68"/>
        <function-ref name="clr" scoped="" ref="0xf741f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xf741b8e0" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xf741b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741bab8"/>
        <function-ref name="isInput" scoped="" ref="0xf741bb98"/>
        <function-ref name="toggle" scoped="" ref="0xf741bc78"/>
        <function-ref name="isOutput" scoped="" ref="0xf741bd58"/>
        <function-ref name="get" scoped="" ref="0xf741be38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741bf18"/>
        <function-ref name="set" scoped="" ref="0xf741a010"/>
        <function-ref name="clr" scoped="" ref="0xf741a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xf7434ce8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xf7434ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7434ec0"/>
        <function-ref name="isInput" scoped="" ref="0xf7433010"/>
        <function-ref name="toggle" scoped="" ref="0xf74330f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74331d0"/>
        <function-ref name="get" scoped="" ref="0xf74332b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7433390"/>
        <function-ref name="set" scoped="" ref="0xf7433470"/>
        <function-ref name="clr" scoped="" ref="0xf7433550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xf7432210" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xf7432210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74323e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74324c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74325a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7432688"/>
        <function-ref name="get" scoped="" ref="0xf7432768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7432848"/>
        <function-ref name="set" scoped="" ref="0xf7432928"/>
        <function-ref name="clr" scoped="" ref="0xf7432a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xf742c8e0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xf742c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf742cab8"/>
        <function-ref name="isInput" scoped="" ref="0xf742cb98"/>
        <function-ref name="toggle" scoped="" ref="0xf742cc78"/>
        <function-ref name="isOutput" scoped="" ref="0xf742cd58"/>
        <function-ref name="get" scoped="" ref="0xf742ce38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742cf18"/>
        <function-ref name="set" scoped="" ref="0xf742b010"/>
        <function-ref name="clr" scoped="" ref="0xf742b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xf74250a0" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xf74250a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7425278"/>
        <function-ref name="isInput" scoped="" ref="0xf7425358"/>
        <function-ref name="toggle" scoped="" ref="0xf7425438"/>
        <function-ref name="isOutput" scoped="" ref="0xf7425518"/>
        <function-ref name="get" scoped="" ref="0xf74255f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74256d8"/>
        <function-ref name="set" scoped="" ref="0xf74257b8"/>
        <function-ref name="clr" scoped="" ref="0xf7425898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xf741e670" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xf741e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741e848"/>
        <function-ref name="isInput" scoped="" ref="0xf741e928"/>
        <function-ref name="toggle" scoped="" ref="0xf741ea08"/>
        <function-ref name="isOutput" scoped="" ref="0xf741eae8"/>
        <function-ref name="get" scoped="" ref="0xf741ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741eca8"/>
        <function-ref name="set" scoped="" ref="0xf741ed88"/>
        <function-ref name="clr" scoped="" ref="0xf741ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xf7437a08" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xf7437a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7437be0"/>
        <function-ref name="isInput" scoped="" ref="0xf7437cc0"/>
        <function-ref name="toggle" scoped="" ref="0xf7437da0"/>
        <function-ref name="isOutput" scoped="" ref="0xf7437e80"/>
        <function-ref name="get" scoped="" ref="0xf7436010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74360f0"/>
        <function-ref name="set" scoped="" ref="0xf74361d0"/>
        <function-ref name="clr" scoped="" ref="0xf74362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xf74300a0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xf74300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74302f8"/>
        <function-ref name="isInput" scoped="" ref="0xf74303d8"/>
        <function-ref name="toggle" scoped="" ref="0xf74304b8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7430598"/>
        <function-ref name="get" scoped="" ref="0xf7430678"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7430758"/>
        <function-ref name="set" scoped="" ref="0xf7430838"/>
        <function-ref name="clr" scoped="" ref="0xf7430918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xf742a750" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xf742a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf742a928"/>
        <function-ref name="isInput" scoped="" ref="0xf742aa08"/>
        <function-ref name="toggle" scoped="" ref="0xf742aae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf742abc8"/>
        <function-ref name="get" scoped="" ref="0xf742aca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742ad88"/>
        <function-ref name="set" scoped="" ref="0xf742ae68"/>
        <function-ref name="clr" scoped="" ref="0xf7429010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xf7419750" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xf7419750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7419928"/>
        <function-ref name="isInput" scoped="" ref="0xf7419a08"/>
        <function-ref name="toggle" scoped="" ref="0xf7419ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7419bc8"/>
        <function-ref name="get" scoped="" ref="0xf7419ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7419d88"/>
        <function-ref name="set" scoped="" ref="0xf7419e68"/>
        <function-ref name="clr" scoped="" ref="0xf7418010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xf7429c08" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xf7429c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7429ee0"/>
        <function-ref name="isInput" scoped="" ref="0xf7428010"/>
        <function-ref name="toggle" scoped="" ref="0xf74280f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74281d0"/>
        <function-ref name="get" scoped="" ref="0xf74282b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7428390"/>
        <function-ref name="set" scoped="" ref="0xf7428470"/>
        <function-ref name="clr" scoped="" ref="0xf7428550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xf74222f0" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xf74222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74224c8"/>
        <function-ref name="isInput" scoped="" ref="0xf74225a8"/>
        <function-ref name="toggle" scoped="" ref="0xf7422688"/>
        <function-ref name="isOutput" scoped="" ref="0xf7422768"/>
        <function-ref name="get" scoped="" ref="0xf7422848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7422928"/>
        <function-ref name="set" scoped="" ref="0xf7422a08"/>
        <function-ref name="clr" scoped="" ref="0xf7422ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xf741c4b0" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xf741c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741c688"/>
        <function-ref name="isInput" scoped="" ref="0xf741c768"/>
        <function-ref name="toggle" scoped="" ref="0xf741c848"/>
        <function-ref name="isOutput" scoped="" ref="0xf741c928"/>
        <function-ref name="get" scoped="" ref="0xf741ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741cae8"/>
        <function-ref name="set" scoped="" ref="0xf741cbc8"/>
        <function-ref name="clr" scoped="" ref="0xf741cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xf7416ce8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xf7416ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7416ec0"/>
        <function-ref name="isInput" scoped="" ref="0xf7415010"/>
        <function-ref name="toggle" scoped="" ref="0xf74150f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf74151d0"/>
        <function-ref name="get" scoped="" ref="0xf74152b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7415390"/>
        <function-ref name="set" scoped="" ref="0xf7415470"/>
        <function-ref name="clr" scoped="" ref="0xf7415550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xf74358e0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xf74358e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7435ab8"/>
        <function-ref name="isInput" scoped="" ref="0xf7435b98"/>
        <function-ref name="toggle" scoped="" ref="0xf7435c78"/>
        <function-ref name="isOutput" scoped="" ref="0xf7435d58"/>
        <function-ref name="get" scoped="" ref="0xf7435e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7435f18"/>
        <function-ref name="set" scoped="" ref="0xf7434010"/>
        <function-ref name="clr" scoped="" ref="0xf74340f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xf742e010" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xf742e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf742e1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf742e2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf742e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf742e488"/>
        <function-ref name="get" scoped="" ref="0xf742e568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742e648"/>
        <function-ref name="set" scoped="" ref="0xf742e728"/>
        <function-ref name="clr" scoped="" ref="0xf742e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xf741d0a0" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xf741d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741d278"/>
        <function-ref name="isInput" scoped="" ref="0xf741d358"/>
        <function-ref name="toggle" scoped="" ref="0xf741d438"/>
        <function-ref name="isOutput" scoped="" ref="0xf741d518"/>
        <function-ref name="get" scoped="" ref="0xf741d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741d6d8"/>
        <function-ref name="set" scoped="" ref="0xf741d7b8"/>
        <function-ref name="clr" scoped="" ref="0xf741d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xf742d4b0" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xf742d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf742d688"/>
        <function-ref name="isInput" scoped="" ref="0xf742d768"/>
        <function-ref name="toggle" scoped="" ref="0xf742d848"/>
        <function-ref name="isOutput" scoped="" ref="0xf742d928"/>
        <function-ref name="get" scoped="" ref="0xf742da08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742dae8"/>
        <function-ref name="set" scoped="" ref="0xf742dbc8"/>
        <function-ref name="clr" scoped="" ref="0xf742dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xf7427c08" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xf7427c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7427de0"/>
        <function-ref name="isInput" scoped="" ref="0xf7427ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf7426010"/>
        <function-ref name="isOutput" scoped="" ref="0xf74260f0"/>
        <function-ref name="get" scoped="" ref="0xf74261d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74262b0"/>
        <function-ref name="set" scoped="" ref="0xf7426390"/>
        <function-ref name="clr" scoped="" ref="0xf7426470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xf741f210" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xf741f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741f3e8"/>
        <function-ref name="isInput" scoped="" ref="0xf741f4c8"/>
        <function-ref name="toggle" scoped="" ref="0xf741f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf741f688"/>
        <function-ref name="get" scoped="" ref="0xf741f768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741f848"/>
        <function-ref name="set" scoped="" ref="0xf741f928"/>
        <function-ref name="clr" scoped="" ref="0xf741fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xf741a2f0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xf741a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf741a4c8"/>
        <function-ref name="isInput" scoped="" ref="0xf741a5a8"/>
        <function-ref name="toggle" scoped="" ref="0xf741a688"/>
        <function-ref name="isOutput" scoped="" ref="0xf741a768"/>
        <function-ref name="get" scoped="" ref="0xf741a848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf741a928"/>
        <function-ref name="set" scoped="" ref="0xf741aa08"/>
        <function-ref name="clr" scoped="" ref="0xf741aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xf743e548" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xf743e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf743e720"/>
        <function-ref name="isInput" scoped="" ref="0xf743e800"/>
        <function-ref name="toggle" scoped="" ref="0xf743e8e0"/>
        <function-ref name="isOutput" scoped="" ref="0xf743e9c0"/>
        <function-ref name="get" scoped="" ref="0xf743eaa0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf743eb80"/>
        <function-ref name="set" scoped="" ref="0xf743ec60"/>
        <function-ref name="clr" scoped="" ref="0xf743ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xf7432c08" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xf7432c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7432de0"/>
        <function-ref name="isInput" scoped="" ref="0xf7432ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf7431010"/>
        <function-ref name="isOutput" scoped="" ref="0xf74310f0"/>
        <function-ref name="get" scoped="" ref="0xf74311d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74312b0"/>
        <function-ref name="set" scoped="" ref="0xf7431390"/>
        <function-ref name="clr" scoped="" ref="0xf7431470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xf742b2f0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xf742b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf742b4c8"/>
        <function-ref name="isInput" scoped="" ref="0xf742b5a8"/>
        <function-ref name="toggle" scoped="" ref="0xf742b688"/>
        <function-ref name="isOutput" scoped="" ref="0xf742b768"/>
        <function-ref name="get" scoped="" ref="0xf742b848"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742b928"/>
        <function-ref name="set" scoped="" ref="0xf742ba08"/>
        <function-ref name="clr" scoped="" ref="0xf742bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xf7425a98" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xf7425a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7425c70"/>
        <function-ref name="isInput" scoped="" ref="0xf7425d50"/>
        <function-ref name="toggle" scoped="" ref="0xf7425e30"/>
        <function-ref name="isOutput" scoped="" ref="0xf7425f10"/>
        <function-ref name="get" scoped="" ref="0xf7424010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf74240f0"/>
        <function-ref name="set" scoped="" ref="0xf74241d0"/>
        <function-ref name="clr" scoped="" ref="0xf74242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xf7417830" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xf7417830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7417a08"/>
        <function-ref name="isInput" scoped="" ref="0xf7417ae8"/>
        <function-ref name="toggle" scoped="" ref="0xf7417bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7417ca8"/>
        <function-ref name="get" scoped="" ref="0xf7417d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7417e68"/>
        <function-ref name="set" scoped="" ref="0xf7416010"/>
        <function-ref name="clr" scoped="" ref="0xf74160f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xf7424ea8" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xf7424ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74230c0"/>
        <function-ref name="isInput" scoped="" ref="0xf74231a0"/>
        <function-ref name="toggle" scoped="" ref="0xf7423280"/>
        <function-ref name="isOutput" scoped="" ref="0xf7423360"/>
        <function-ref name="get" scoped="" ref="0xf7423440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7423520"/>
        <function-ref name="set" scoped="" ref="0xf7423600"/>
        <function-ref name="clr" scoped="" ref="0xf74236e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xf7429210" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xf7429210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf74293e8"/>
        <function-ref name="isInput" scoped="" ref="0xf74294c8"/>
        <function-ref name="toggle" scoped="" ref="0xf74295a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7429688"/>
        <function-ref name="get" scoped="" ref="0xf7429768"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7429848"/>
        <function-ref name="set" scoped="" ref="0xf7429928"/>
        <function-ref name="clr" scoped="" ref="0xf7429a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xf74364b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xf74364b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7436688"/>
        <function-ref name="isInput" scoped="" ref="0xf7436768"/>
        <function-ref name="toggle" scoped="" ref="0xf7436848"/>
        <function-ref name="isOutput" scoped="" ref="0xf7436928"/>
        <function-ref name="get" scoped="" ref="0xf7436a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7436ae8"/>
        <function-ref name="set" scoped="" ref="0xf7436bc8"/>
        <function-ref name="clr" scoped="" ref="0xf7436ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xf7430b18" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xf7430b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7430cf0"/>
        <function-ref name="isInput" scoped="" ref="0xf7430dd0"/>
        <function-ref name="toggle" scoped="" ref="0xf7430eb0"/>
        <function-ref name="isOutput" scoped="" ref="0xf742f010"/>
        <function-ref name="get" scoped="" ref="0xf742f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf742f1d0"/>
        <function-ref name="set" scoped="" ref="0xf742f2b0"/>
        <function-ref name="clr" scoped="" ref="0xf742f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf73ec330" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf73ec330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73ec508"/>
        <function-ref name="isInput" scoped="" ref="0xf73ec5e8"/>
        <function-ref name="toggle" scoped="" ref="0xf73ec6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73ec7a8"/>
        <function-ref name="get" scoped="" ref="0xf73ec888"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73ec968"/>
        <function-ref name="set" scoped="" ref="0xf73eca48"/>
        <function-ref name="clr" scoped="" ref="0xf73ecb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf73ea030" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf73ea030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73ea208"/>
        <function-ref name="isInput" scoped="" ref="0xf73ea2e8"/>
        <function-ref name="toggle" scoped="" ref="0xf73ea3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73ea4a8"/>
        <function-ref name="get" scoped="" ref="0xf73ea588"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73ea668"/>
        <function-ref name="set" scoped="" ref="0xf73ea748"/>
        <function-ref name="clr" scoped="" ref="0xf73ea828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf73ed010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf73ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73ed1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf73ed2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf73ed3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73ed488"/>
        <function-ref name="get" scoped="" ref="0xf73ed568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73ed648"/>
        <function-ref name="set" scoped="" ref="0xf73ed728"/>
        <function-ref name="clr" scoped="" ref="0xf73ed808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf73ecc88" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf73ecc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73ece60"/>
        <function-ref name="isInput" scoped="" ref="0xf73eb010"/>
        <function-ref name="toggle" scoped="" ref="0xf73eb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73eb1d0"/>
        <function-ref name="get" scoped="" ref="0xf73eb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73eb390"/>
        <function-ref name="set" scoped="" ref="0xf73eb470"/>
        <function-ref name="clr" scoped="" ref="0xf73eb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf73ea988" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf73ea988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73eab60"/>
        <function-ref name="isInput" scoped="" ref="0xf73eac40"/>
        <function-ref name="toggle" scoped="" ref="0xf73ead20"/>
        <function-ref name="isOutput" scoped="" ref="0xf73eae00"/>
        <function-ref name="get" scoped="" ref="0xf73eaee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e9010"/>
        <function-ref name="set" scoped="" ref="0xf73e90f0"/>
        <function-ref name="clr" scoped="" ref="0xf73e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf73ed968" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf73ed968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73edb40"/>
        <function-ref name="isInput" scoped="" ref="0xf73edc20"/>
        <function-ref name="toggle" scoped="" ref="0xf73edd00"/>
        <function-ref name="isOutput" scoped="" ref="0xf73edde0"/>
        <function-ref name="get" scoped="" ref="0xf73edec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73ec010"/>
        <function-ref name="set" scoped="" ref="0xf73ec0f0"/>
        <function-ref name="clr" scoped="" ref="0xf73ec1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf73eb6b0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf73eb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73eb888"/>
        <function-ref name="isInput" scoped="" ref="0xf73eb968"/>
        <function-ref name="toggle" scoped="" ref="0xf73eba48"/>
        <function-ref name="isOutput" scoped="" ref="0xf73ebb28"/>
        <function-ref name="get" scoped="" ref="0xf73ebc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73ebce8"/>
        <function-ref name="set" scoped="" ref="0xf73ebdc8"/>
        <function-ref name="clr" scoped="" ref="0xf73ebea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf73e9330" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf73e9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73e9508"/>
        <function-ref name="isInput" scoped="" ref="0xf73e95e8"/>
        <function-ref name="toggle" scoped="" ref="0xf73e96c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73e97a8"/>
        <function-ref name="get" scoped="" ref="0xf73e9888"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e9968"/>
        <function-ref name="set" scoped="" ref="0xf73e9a48"/>
        <function-ref name="clr" scoped="" ref="0xf73e9b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b96e18" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b96e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b92010"/>
        <function-ref name="isInput" scoped="" ref="0xf6b920f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b921d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b922b0"/>
        <function-ref name="get" scoped="" ref="0xf6b92390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b92470"/>
        <function-ref name="set" scoped="" ref="0xf6b92550"/>
        <function-ref name="clr" scoped="" ref="0xf6b92630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b917f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b917f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b919d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b91ab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b91b90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b91c70"/>
        <function-ref name="get" scoped="" ref="0xf6b91d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b91e30"/>
        <function-ref name="set" scoped="" ref="0xf6b91f10"/>
        <function-ref name="clr" scoped="" ref="0xf6b90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b8f228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b8f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b8f400"/>
        <function-ref name="isInput" scoped="" ref="0xf6b8f4e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b8f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b8f6a0"/>
        <function-ref name="get" scoped="" ref="0xf6b8f780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b8f860"/>
        <function-ref name="set" scoped="" ref="0xf6b8f940"/>
        <function-ref name="clr" scoped="" ref="0xf6b8fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b8ec08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b8ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b8ede0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b8eec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b8d010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b8d0f0"/>
        <function-ref name="get" scoped="" ref="0xf6b8d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b8d2b0"/>
        <function-ref name="set" scoped="" ref="0xf6b8d390"/>
        <function-ref name="clr" scoped="" ref="0xf6b8d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b8c6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b8c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b8c898"/>
        <function-ref name="isInput" scoped="" ref="0xf6b8c978"/>
        <function-ref name="toggle" scoped="" ref="0xf6b8ca58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b8cb38"/>
        <function-ref name="get" scoped="" ref="0xf6b8cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b8ccf8"/>
        <function-ref name="set" scoped="" ref="0xf6b8cdd8"/>
        <function-ref name="clr" scoped="" ref="0xf6b8ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b8a0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b8a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b8a288"/>
        <function-ref name="isInput" scoped="" ref="0xf6b8a368"/>
        <function-ref name="toggle" scoped="" ref="0xf6b8a448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b8a528"/>
        <function-ref name="get" scoped="" ref="0xf6b8a608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b8a6e8"/>
        <function-ref name="set" scoped="" ref="0xf6b8a7c8"/>
        <function-ref name="clr" scoped="" ref="0xf6b8a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b89a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b89a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b89c60"/>
        <function-ref name="isInput" scoped="" ref="0xf6b89d40"/>
        <function-ref name="toggle" scoped="" ref="0xf6b89e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b89f00"/>
        <function-ref name="get" scoped="" ref="0xf6b88010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b880f0"/>
        <function-ref name="set" scoped="" ref="0xf6b881d0"/>
        <function-ref name="clr" scoped="" ref="0xf6b882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b87538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b87538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b87710"/>
        <function-ref name="isInput" scoped="" ref="0xf6b877f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b878d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b879b0"/>
        <function-ref name="get" scoped="" ref="0xf6b87a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b87b70"/>
        <function-ref name="set" scoped="" ref="0xf6b87c50"/>
        <function-ref name="clr" scoped="" ref="0xf6b87d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf73e4ba8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf73e4ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73e4d80"/>
        <function-ref name="isInput" scoped="" ref="0xf73e4e60"/>
        <function-ref name="toggle" scoped="" ref="0xf73e3010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73e30f0"/>
        <function-ref name="get" scoped="" ref="0xf73e31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e32b0"/>
        <function-ref name="set" scoped="" ref="0xf73e3390"/>
        <function-ref name="clr" scoped="" ref="0xf73e3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf73e2890" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf73e2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73e2a68"/>
        <function-ref name="isInput" scoped="" ref="0xf73e2b48"/>
        <function-ref name="toggle" scoped="" ref="0xf73e2c28"/>
        <function-ref name="isOutput" scoped="" ref="0xf73e2d08"/>
        <function-ref name="get" scoped="" ref="0xf73e2de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e2ec8"/>
        <function-ref name="set" scoped="" ref="0xf73e1010"/>
        <function-ref name="clr" scoped="" ref="0xf73e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf73e5888" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf73e5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73e5a60"/>
        <function-ref name="isInput" scoped="" ref="0xf73e5b40"/>
        <function-ref name="toggle" scoped="" ref="0xf73e5c20"/>
        <function-ref name="isOutput" scoped="" ref="0xf73e5d00"/>
        <function-ref name="get" scoped="" ref="0xf73e5de0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e5ec0"/>
        <function-ref name="set" scoped="" ref="0xf73e4010"/>
        <function-ref name="clr" scoped="" ref="0xf73e40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf73e35d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf73e35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73e37a8"/>
        <function-ref name="isInput" scoped="" ref="0xf73e3888"/>
        <function-ref name="toggle" scoped="" ref="0xf73e3968"/>
        <function-ref name="isOutput" scoped="" ref="0xf73e3a48"/>
        <function-ref name="get" scoped="" ref="0xf73e3b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e3c08"/>
        <function-ref name="set" scoped="" ref="0xf73e3ce8"/>
        <function-ref name="clr" scoped="" ref="0xf73e3dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf73e1250" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf73e1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73e1428"/>
        <function-ref name="isInput" scoped="" ref="0xf73e1508"/>
        <function-ref name="toggle" scoped="" ref="0xf73e15e8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73e16c8"/>
        <function-ref name="get" scoped="" ref="0xf73e17a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e1888"/>
        <function-ref name="set" scoped="" ref="0xf73e1968"/>
        <function-ref name="clr" scoped="" ref="0xf73e1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf73e4250" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf73e4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73e4428"/>
        <function-ref name="isInput" scoped="" ref="0xf73e4508"/>
        <function-ref name="toggle" scoped="" ref="0xf73e45e8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73e46c8"/>
        <function-ref name="get" scoped="" ref="0xf73e47a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e4888"/>
        <function-ref name="set" scoped="" ref="0xf73e4968"/>
        <function-ref name="clr" scoped="" ref="0xf73e4a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf73e3f28" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf73e3f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73e2110"/>
        <function-ref name="isInput" scoped="" ref="0xf73e21f0"/>
        <function-ref name="toggle" scoped="" ref="0xf73e22d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73e23b0"/>
        <function-ref name="get" scoped="" ref="0xf73e2490"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e2570"/>
        <function-ref name="set" scoped="" ref="0xf73e2650"/>
        <function-ref name="clr" scoped="" ref="0xf73e2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf73e1ba8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf73e1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73e1d80"/>
        <function-ref name="isInput" scoped="" ref="0xf73e1e60"/>
        <function-ref name="toggle" scoped="" ref="0xf73e0010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73e00f0"/>
        <function-ref name="get" scoped="" ref="0xf73e01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73e02b0"/>
        <function-ref name="set" scoped="" ref="0xf73e0390"/>
        <function-ref name="clr" scoped="" ref="0xf73e0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b5b938" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b5b938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b5bb10"/>
        <function-ref name="isInput" scoped="" ref="0xf6b5bbf0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b5bcd0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b5bdb0"/>
        <function-ref name="get" scoped="" ref="0xf6b5be90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b5a010"/>
        <function-ref name="set" scoped="" ref="0xf6b5a0f0"/>
        <function-ref name="clr" scoped="" ref="0xf6b5a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b593b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b593b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b59588"/>
        <function-ref name="isInput" scoped="" ref="0xf6b59668"/>
        <function-ref name="toggle" scoped="" ref="0xf6b59748"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b59828"/>
        <function-ref name="get" scoped="" ref="0xf6b59908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b599e8"/>
        <function-ref name="set" scoped="" ref="0xf6b59ac8"/>
        <function-ref name="clr" scoped="" ref="0xf6b59ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b58d70" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b58d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b57010"/>
        <function-ref name="isInput" scoped="" ref="0xf6b570f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b571d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b572b0"/>
        <function-ref name="get" scoped="" ref="0xf6b57390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b57470"/>
        <function-ref name="set" scoped="" ref="0xf6b57550"/>
        <function-ref name="clr" scoped="" ref="0xf6b57630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b567f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b567f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b569d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b56ab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b56b90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b56c70"/>
        <function-ref name="get" scoped="" ref="0xf6b56d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b56e30"/>
        <function-ref name="set" scoped="" ref="0xf6b56f10"/>
        <function-ref name="clr" scoped="" ref="0xf6b54010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b53228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b53228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b53400"/>
        <function-ref name="isInput" scoped="" ref="0xf6b534e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b535c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b536a0"/>
        <function-ref name="get" scoped="" ref="0xf6b53780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b53860"/>
        <function-ref name="set" scoped="" ref="0xf6b53940"/>
        <function-ref name="clr" scoped="" ref="0xf6b53a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b52c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b52c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b52de0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b52ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b51010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b510f0"/>
        <function-ref name="get" scoped="" ref="0xf6b511d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b512b0"/>
        <function-ref name="set" scoped="" ref="0xf6b51390"/>
        <function-ref name="clr" scoped="" ref="0xf6b51470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b506c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b506c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b50898"/>
        <function-ref name="isInput" scoped="" ref="0xf6b50978"/>
        <function-ref name="toggle" scoped="" ref="0xf6b50a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b50b38"/>
        <function-ref name="get" scoped="" ref="0xf6b50c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b50cf8"/>
        <function-ref name="set" scoped="" ref="0xf6b50dd8"/>
        <function-ref name="clr" scoped="" ref="0xf6b50eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b4e0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b4e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b4e288"/>
        <function-ref name="isInput" scoped="" ref="0xf6b4e368"/>
        <function-ref name="toggle" scoped="" ref="0xf6b4e448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b4e528"/>
        <function-ref name="get" scoped="" ref="0xf6b4e608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b4e6e8"/>
        <function-ref name="set" scoped="" ref="0xf6b4e7c8"/>
        <function-ref name="clr" scoped="" ref="0xf6b4e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf73db4f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf73db4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73db6c8"/>
        <function-ref name="isInput" scoped="" ref="0xf73db7a8"/>
        <function-ref name="toggle" scoped="" ref="0xf73db888"/>
        <function-ref name="isOutput" scoped="" ref="0xf73db968"/>
        <function-ref name="get" scoped="" ref="0xf73dba48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73dbb28"/>
        <function-ref name="set" scoped="" ref="0xf73dbc08"/>
        <function-ref name="clr" scoped="" ref="0xf73dbce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf73d9170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf73d9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d9348"/>
        <function-ref name="isInput" scoped="" ref="0xf73d9428"/>
        <function-ref name="toggle" scoped="" ref="0xf73d9508"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d95e8"/>
        <function-ref name="get" scoped="" ref="0xf73d96c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d97a8"/>
        <function-ref name="set" scoped="" ref="0xf73d9888"/>
        <function-ref name="clr" scoped="" ref="0xf73d9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf73dd228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf73dd228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73dd400"/>
        <function-ref name="isInput" scoped="" ref="0xf73dd4e0"/>
        <function-ref name="toggle" scoped="" ref="0xf73dd5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73dd6a0"/>
        <function-ref name="get" scoped="" ref="0xf73dd780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73dd860"/>
        <function-ref name="set" scoped="" ref="0xf73dd940"/>
        <function-ref name="clr" scoped="" ref="0xf73dda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf73dbe48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf73dbe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73da050"/>
        <function-ref name="isInput" scoped="" ref="0xf73da130"/>
        <function-ref name="toggle" scoped="" ref="0xf73da210"/>
        <function-ref name="isOutput" scoped="" ref="0xf73da2f0"/>
        <function-ref name="get" scoped="" ref="0xf73da3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73da4b0"/>
        <function-ref name="set" scoped="" ref="0xf73da590"/>
        <function-ref name="clr" scoped="" ref="0xf73da670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf73d9ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf73d9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d9ca0"/>
        <function-ref name="isInput" scoped="" ref="0xf73d9d80"/>
        <function-ref name="toggle" scoped="" ref="0xf73d9e60"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d8010"/>
        <function-ref name="get" scoped="" ref="0xf73d80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d81d0"/>
        <function-ref name="set" scoped="" ref="0xf73d82b0"/>
        <function-ref name="clr" scoped="" ref="0xf73d8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf73ddb80" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf73ddb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73ddd58"/>
        <function-ref name="isInput" scoped="" ref="0xf73dde38"/>
        <function-ref name="toggle" scoped="" ref="0xf73ddf18"/>
        <function-ref name="isOutput" scoped="" ref="0xf73db010"/>
        <function-ref name="get" scoped="" ref="0xf73db0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73db1d0"/>
        <function-ref name="set" scoped="" ref="0xf73db2b0"/>
        <function-ref name="clr" scoped="" ref="0xf73db390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf73da7d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf73da7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73da9a8"/>
        <function-ref name="isInput" scoped="" ref="0xf73daa88"/>
        <function-ref name="toggle" scoped="" ref="0xf73dab68"/>
        <function-ref name="isOutput" scoped="" ref="0xf73dac48"/>
        <function-ref name="get" scoped="" ref="0xf73dad28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73dae08"/>
        <function-ref name="set" scoped="" ref="0xf73daee8"/>
        <function-ref name="clr" scoped="" ref="0xf73d9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf73d84f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf73d84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d86c8"/>
        <function-ref name="isInput" scoped="" ref="0xf73d87a8"/>
        <function-ref name="toggle" scoped="" ref="0xf73d8888"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d8968"/>
        <function-ref name="get" scoped="" ref="0xf73d8a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d8b28"/>
        <function-ref name="set" scoped="" ref="0xf73d8c08"/>
        <function-ref name="clr" scoped="" ref="0xf73d8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b22538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b22538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b22710"/>
        <function-ref name="isInput" scoped="" ref="0xf6b227f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b228d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b229b0"/>
        <function-ref name="get" scoped="" ref="0xf6b22a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b22b70"/>
        <function-ref name="set" scoped="" ref="0xf6b22c50"/>
        <function-ref name="clr" scoped="" ref="0xf6b22d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b20010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b201e8"/>
        <function-ref name="isInput" scoped="" ref="0xf6b202c8"/>
        <function-ref name="toggle" scoped="" ref="0xf6b203a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b20488"/>
        <function-ref name="get" scoped="" ref="0xf6b20568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b20648"/>
        <function-ref name="set" scoped="" ref="0xf6b20728"/>
        <function-ref name="clr" scoped="" ref="0xf6b20808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b1f9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b1f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b1fbc0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b1fca0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b1fd80"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b1fe60"/>
        <function-ref name="get" scoped="" ref="0xf6b1e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b1e0f0"/>
        <function-ref name="set" scoped="" ref="0xf6b1e1d0"/>
        <function-ref name="clr" scoped="" ref="0xf6b1e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b1d538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b1d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b1d710"/>
        <function-ref name="isInput" scoped="" ref="0xf6b1d7f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b1d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b1d9b0"/>
        <function-ref name="get" scoped="" ref="0xf6b1da90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b1db70"/>
        <function-ref name="set" scoped="" ref="0xf6b1dc50"/>
        <function-ref name="clr" scoped="" ref="0xf6b1dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b1b010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b1b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf6b1b2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf6b1b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b1b488"/>
        <function-ref name="get" scoped="" ref="0xf6b1b568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b1b648"/>
        <function-ref name="set" scoped="" ref="0xf6b1b728"/>
        <function-ref name="clr" scoped="" ref="0xf6b1b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b1a9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b1a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b1abc0"/>
        <function-ref name="isInput" scoped="" ref="0xf6b1aca0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b1ad80"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b1ae60"/>
        <function-ref name="get" scoped="" ref="0xf6b19010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b190f0"/>
        <function-ref name="set" scoped="" ref="0xf6b191d0"/>
        <function-ref name="clr" scoped="" ref="0xf6b192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b18538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b18538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b18710"/>
        <function-ref name="isInput" scoped="" ref="0xf6b187f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6b188d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b189b0"/>
        <function-ref name="get" scoped="" ref="0xf6b18a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b18b70"/>
        <function-ref name="set" scoped="" ref="0xf6b18c50"/>
        <function-ref name="clr" scoped="" ref="0xf6b18d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6b16010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6b16010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6b161e8"/>
        <function-ref name="isInput" scoped="" ref="0xf6b162c8"/>
        <function-ref name="toggle" scoped="" ref="0xf6b163a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6b16488"/>
        <function-ref name="get" scoped="" ref="0xf6b16568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6b16648"/>
        <function-ref name="set" scoped="" ref="0xf6b16728"/>
        <function-ref name="clr" scoped="" ref="0xf6b16808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf73d4e48" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf73d4e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d3050"/>
        <function-ref name="isInput" scoped="" ref="0xf73d3130"/>
        <function-ref name="toggle" scoped="" ref="0xf73d3210"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d32f0"/>
        <function-ref name="get" scoped="" ref="0xf73d33d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d34b0"/>
        <function-ref name="set" scoped="" ref="0xf73d3590"/>
        <function-ref name="clr" scoped="" ref="0xf73d3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf73d2ac8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf73d2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d2ca0"/>
        <function-ref name="isInput" scoped="" ref="0xf73d2d80"/>
        <function-ref name="toggle" scoped="" ref="0xf73d2e60"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d1010"/>
        <function-ref name="get" scoped="" ref="0xf73d10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d11d0"/>
        <function-ref name="set" scoped="" ref="0xf73d12b0"/>
        <function-ref name="clr" scoped="" ref="0xf73d1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf73d5b00" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf73d5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d5cd8"/>
        <function-ref name="isInput" scoped="" ref="0xf73d5db8"/>
        <function-ref name="toggle" scoped="" ref="0xf73d5e98"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d4010"/>
        <function-ref name="get" scoped="" ref="0xf73d40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d41d0"/>
        <function-ref name="set" scoped="" ref="0xf73d42b0"/>
        <function-ref name="clr" scoped="" ref="0xf73d4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf73d37d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf73d37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d39a8"/>
        <function-ref name="isInput" scoped="" ref="0xf73d3a88"/>
        <function-ref name="toggle" scoped="" ref="0xf73d3b68"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d3c48"/>
        <function-ref name="get" scoped="" ref="0xf73d3d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d3e08"/>
        <function-ref name="set" scoped="" ref="0xf73d3ee8"/>
        <function-ref name="clr" scoped="" ref="0xf73d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf73d14f0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf73d14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d16c8"/>
        <function-ref name="isInput" scoped="" ref="0xf73d17a8"/>
        <function-ref name="toggle" scoped="" ref="0xf73d1888"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d1968"/>
        <function-ref name="get" scoped="" ref="0xf73d1a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d1b28"/>
        <function-ref name="set" scoped="" ref="0xf73d1c08"/>
        <function-ref name="clr" scoped="" ref="0xf73d1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf73d44f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf73d44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d46c8"/>
        <function-ref name="isInput" scoped="" ref="0xf73d47a8"/>
        <function-ref name="toggle" scoped="" ref="0xf73d4888"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d4968"/>
        <function-ref name="get" scoped="" ref="0xf73d4a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d4b28"/>
        <function-ref name="set" scoped="" ref="0xf73d4c08"/>
        <function-ref name="clr" scoped="" ref="0xf73d4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf73d2170" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf73d2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73d2348"/>
        <function-ref name="isInput" scoped="" ref="0xf73d2428"/>
        <function-ref name="toggle" scoped="" ref="0xf73d2508"/>
        <function-ref name="isOutput" scoped="" ref="0xf73d25e8"/>
        <function-ref name="get" scoped="" ref="0xf73d26c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73d27a8"/>
        <function-ref name="set" scoped="" ref="0xf73d2888"/>
        <function-ref name="clr" scoped="" ref="0xf73d2968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf73d1e48" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf73d1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73cf050"/>
        <function-ref name="isInput" scoped="" ref="0xf73cf130"/>
        <function-ref name="toggle" scoped="" ref="0xf73cf210"/>
        <function-ref name="isOutput" scoped="" ref="0xf73cf2f0"/>
        <function-ref name="get" scoped="" ref="0xf73cf3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73cf4b0"/>
        <function-ref name="set" scoped="" ref="0xf73cf590"/>
        <function-ref name="clr" scoped="" ref="0xf73cf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6aea418" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6aea418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6aea5f0"/>
        <function-ref name="isInput" scoped="" ref="0xf6aea6d0"/>
        <function-ref name="toggle" scoped="" ref="0xf6aea7b0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6aea890"/>
        <function-ref name="get" scoped="" ref="0xf6aea970"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6aeaa50"/>
        <function-ref name="set" scoped="" ref="0xf6aeab30"/>
        <function-ref name="clr" scoped="" ref="0xf6aeac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ae9de0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ae9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ae7010"/>
        <function-ref name="isInput" scoped="" ref="0xf6ae70f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ae71d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ae72b0"/>
        <function-ref name="get" scoped="" ref="0xf6ae7390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ae7470"/>
        <function-ref name="set" scoped="" ref="0xf6ae7550"/>
        <function-ref name="clr" scoped="" ref="0xf6ae7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ae67f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ae67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ae69d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6ae6ab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ae6b90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ae6c70"/>
        <function-ref name="get" scoped="" ref="0xf6ae6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ae6e30"/>
        <function-ref name="set" scoped="" ref="0xf6ae6f10"/>
        <function-ref name="clr" scoped="" ref="0xf6ae5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ae4228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ae4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ae4400"/>
        <function-ref name="isInput" scoped="" ref="0xf6ae44e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ae45c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ae46a0"/>
        <function-ref name="get" scoped="" ref="0xf6ae4780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ae4860"/>
        <function-ref name="set" scoped="" ref="0xf6ae4940"/>
        <function-ref name="clr" scoped="" ref="0xf6ae4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ae3c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ae3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ae3de0"/>
        <function-ref name="isInput" scoped="" ref="0xf6ae3ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ae2010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ae20f0"/>
        <function-ref name="get" scoped="" ref="0xf6ae21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ae22b0"/>
        <function-ref name="set" scoped="" ref="0xf6ae2390"/>
        <function-ref name="clr" scoped="" ref="0xf6ae2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ae16c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ae16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ae1898"/>
        <function-ref name="isInput" scoped="" ref="0xf6ae1978"/>
        <function-ref name="toggle" scoped="" ref="0xf6ae1a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ae1b38"/>
        <function-ref name="get" scoped="" ref="0xf6ae1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ae1cf8"/>
        <function-ref name="set" scoped="" ref="0xf6ae1dd8"/>
        <function-ref name="clr" scoped="" ref="0xf6ae1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6adf0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6adf0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6adf288"/>
        <function-ref name="isInput" scoped="" ref="0xf6adf368"/>
        <function-ref name="toggle" scoped="" ref="0xf6adf448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6adf528"/>
        <function-ref name="get" scoped="" ref="0xf6adf608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6adf6e8"/>
        <function-ref name="set" scoped="" ref="0xf6adf7c8"/>
        <function-ref name="clr" scoped="" ref="0xf6adf8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6adea88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6adea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6adec60"/>
        <function-ref name="isInput" scoped="" ref="0xf6aded40"/>
        <function-ref name="toggle" scoped="" ref="0xf6adee20"/>
        <function-ref name="isOutput" scoped="" ref="0xf6adef00"/>
        <function-ref name="get" scoped="" ref="0xf6add010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6add0f0"/>
        <function-ref name="set" scoped="" ref="0xf6add1d0"/>
        <function-ref name="clr" scoped="" ref="0xf6add2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf73cb6b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf73cb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73cb888"/>
        <function-ref name="isInput" scoped="" ref="0xf73cb968"/>
        <function-ref name="toggle" scoped="" ref="0xf73cba48"/>
        <function-ref name="isOutput" scoped="" ref="0xf73cbb28"/>
        <function-ref name="get" scoped="" ref="0xf73cbc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73cbce8"/>
        <function-ref name="set" scoped="" ref="0xf73cbdc8"/>
        <function-ref name="clr" scoped="" ref="0xf73cbea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf73c9330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf73c9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c9508"/>
        <function-ref name="isInput" scoped="" ref="0xf73c95e8"/>
        <function-ref name="toggle" scoped="" ref="0xf73c96c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c97a8"/>
        <function-ref name="get" scoped="" ref="0xf73c9888"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c9968"/>
        <function-ref name="set" scoped="" ref="0xf73c9a48"/>
        <function-ref name="clr" scoped="" ref="0xf73c9b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf73cc3d8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf73cc3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73cc5b0"/>
        <function-ref name="isInput" scoped="" ref="0xf73cc690"/>
        <function-ref name="toggle" scoped="" ref="0xf73cc770"/>
        <function-ref name="isOutput" scoped="" ref="0xf73cc850"/>
        <function-ref name="get" scoped="" ref="0xf73cc930"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73cca10"/>
        <function-ref name="set" scoped="" ref="0xf73ccaf0"/>
        <function-ref name="clr" scoped="" ref="0xf73ccbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf73ca030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf73ca030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73ca208"/>
        <function-ref name="isInput" scoped="" ref="0xf73ca2e8"/>
        <function-ref name="toggle" scoped="" ref="0xf73ca3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73ca4a8"/>
        <function-ref name="get" scoped="" ref="0xf73ca588"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73ca668"/>
        <function-ref name="set" scoped="" ref="0xf73ca748"/>
        <function-ref name="clr" scoped="" ref="0xf73ca828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf73c9c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf73c9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c9e60"/>
        <function-ref name="isInput" scoped="" ref="0xf73c8010"/>
        <function-ref name="toggle" scoped="" ref="0xf73c80f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c81d0"/>
        <function-ref name="get" scoped="" ref="0xf73c82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c8390"/>
        <function-ref name="set" scoped="" ref="0xf73c8470"/>
        <function-ref name="clr" scoped="" ref="0xf73c8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf73ccd30" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf73ccd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73ccf08"/>
        <function-ref name="isInput" scoped="" ref="0xf73cb010"/>
        <function-ref name="toggle" scoped="" ref="0xf73cb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73cb1d0"/>
        <function-ref name="get" scoped="" ref="0xf73cb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73cb390"/>
        <function-ref name="set" scoped="" ref="0xf73cb470"/>
        <function-ref name="clr" scoped="" ref="0xf73cb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf73ca988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf73ca988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73cab60"/>
        <function-ref name="isInput" scoped="" ref="0xf73cac40"/>
        <function-ref name="toggle" scoped="" ref="0xf73cad20"/>
        <function-ref name="isOutput" scoped="" ref="0xf73cae00"/>
        <function-ref name="get" scoped="" ref="0xf73caee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c9010"/>
        <function-ref name="set" scoped="" ref="0xf73c90f0"/>
        <function-ref name="clr" scoped="" ref="0xf73c91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf73c86b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf73c86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c8888"/>
        <function-ref name="isInput" scoped="" ref="0xf73c8968"/>
        <function-ref name="toggle" scoped="" ref="0xf73c8a48"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c8b28"/>
        <function-ref name="get" scoped="" ref="0xf73c8c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c8ce8"/>
        <function-ref name="set" scoped="" ref="0xf73c8dc8"/>
        <function-ref name="clr" scoped="" ref="0xf73c8ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ab5de8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ab5de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ab1010"/>
        <function-ref name="isInput" scoped="" ref="0xf6ab10f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ab11d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ab12b0"/>
        <function-ref name="get" scoped="" ref="0xf6ab1390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ab1470"/>
        <function-ref name="set" scoped="" ref="0xf6ab1550"/>
        <function-ref name="clr" scoped="" ref="0xf6ab1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6ab07f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6ab07f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6ab09d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6ab0ab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6ab0b90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6ab0c70"/>
        <function-ref name="get" scoped="" ref="0xf6ab0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6ab0e30"/>
        <function-ref name="set" scoped="" ref="0xf6ab0f10"/>
        <function-ref name="clr" scoped="" ref="0xf6aaf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6aae228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6aae228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6aae400"/>
        <function-ref name="isInput" scoped="" ref="0xf6aae4e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6aae5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6aae6a0"/>
        <function-ref name="get" scoped="" ref="0xf6aae780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6aae860"/>
        <function-ref name="set" scoped="" ref="0xf6aae940"/>
        <function-ref name="clr" scoped="" ref="0xf6aaea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6aadc08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6aadc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6aadde0"/>
        <function-ref name="isInput" scoped="" ref="0xf6aadec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6aac010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6aac0f0"/>
        <function-ref name="get" scoped="" ref="0xf6aac1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6aac2b0"/>
        <function-ref name="set" scoped="" ref="0xf6aac390"/>
        <function-ref name="clr" scoped="" ref="0xf6aac470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6aab6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6aab6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6aab898"/>
        <function-ref name="isInput" scoped="" ref="0xf6aab978"/>
        <function-ref name="toggle" scoped="" ref="0xf6aaba58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6aabb38"/>
        <function-ref name="get" scoped="" ref="0xf6aabc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6aabcf8"/>
        <function-ref name="set" scoped="" ref="0xf6aabdd8"/>
        <function-ref name="clr" scoped="" ref="0xf6aabeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6aa90b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6aa90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6aa9288"/>
        <function-ref name="isInput" scoped="" ref="0xf6aa9368"/>
        <function-ref name="toggle" scoped="" ref="0xf6aa9448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6aa9528"/>
        <function-ref name="get" scoped="" ref="0xf6aa9608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6aa96e8"/>
        <function-ref name="set" scoped="" ref="0xf6aa97c8"/>
        <function-ref name="clr" scoped="" ref="0xf6aa98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6aa8a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6aa8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6aa8c60"/>
        <function-ref name="isInput" scoped="" ref="0xf6aa8d40"/>
        <function-ref name="toggle" scoped="" ref="0xf6aa8e20"/>
        <function-ref name="isOutput" scoped="" ref="0xf6aa8f00"/>
        <function-ref name="get" scoped="" ref="0xf6aa7010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6aa70f0"/>
        <function-ref name="set" scoped="" ref="0xf6aa71d0"/>
        <function-ref name="clr" scoped="" ref="0xf6aa72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6aa6538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6aa6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6aa6710"/>
        <function-ref name="isInput" scoped="" ref="0xf6aa67f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6aa68d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6aa69b0"/>
        <function-ref name="get" scoped="" ref="0xf6aa6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6aa6b70"/>
        <function-ref name="set" scoped="" ref="0xf6aa6c50"/>
        <function-ref name="clr" scoped="" ref="0xf6aa6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xf73c3f28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xf73c3f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c2110"/>
        <function-ref name="isInput" scoped="" ref="0xf73c21f0"/>
        <function-ref name="toggle" scoped="" ref="0xf73c22d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c23b0"/>
        <function-ref name="get" scoped="" ref="0xf73c2490"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c2570"/>
        <function-ref name="set" scoped="" ref="0xf73c2650"/>
        <function-ref name="clr" scoped="" ref="0xf73c2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xf73c1ba8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xf73c1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c1d80"/>
        <function-ref name="isInput" scoped="" ref="0xf73c1e60"/>
        <function-ref name="toggle" scoped="" ref="0xf73c0010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c00f0"/>
        <function-ref name="get" scoped="" ref="0xf73c01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c02b0"/>
        <function-ref name="set" scoped="" ref="0xf73c0390"/>
        <function-ref name="clr" scoped="" ref="0xf73c0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xf73c4c28" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xf73c4c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c4e00"/>
        <function-ref name="isInput" scoped="" ref="0xf73c4ee0"/>
        <function-ref name="toggle" scoped="" ref="0xf73c3010"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c30f0"/>
        <function-ref name="get" scoped="" ref="0xf73c31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c32b0"/>
        <function-ref name="set" scoped="" ref="0xf73c3390"/>
        <function-ref name="clr" scoped="" ref="0xf73c3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xf73c2890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xf73c2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c2a68"/>
        <function-ref name="isInput" scoped="" ref="0xf73c2b48"/>
        <function-ref name="toggle" scoped="" ref="0xf73c2c28"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c2d08"/>
        <function-ref name="get" scoped="" ref="0xf73c2de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c2ec8"/>
        <function-ref name="set" scoped="" ref="0xf73c1010"/>
        <function-ref name="clr" scoped="" ref="0xf73c10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xf73c05d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xf73c05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c07a8"/>
        <function-ref name="isInput" scoped="" ref="0xf73c0888"/>
        <function-ref name="toggle" scoped="" ref="0xf73c0968"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c0a48"/>
        <function-ref name="get" scoped="" ref="0xf73c0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c0c08"/>
        <function-ref name="set" scoped="" ref="0xf73c0ce8"/>
        <function-ref name="clr" scoped="" ref="0xf73c0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xf73c35d0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xf73c35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c37a8"/>
        <function-ref name="isInput" scoped="" ref="0xf73c3888"/>
        <function-ref name="toggle" scoped="" ref="0xf73c3968"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c3a48"/>
        <function-ref name="get" scoped="" ref="0xf73c3b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c3c08"/>
        <function-ref name="set" scoped="" ref="0xf73c3ce8"/>
        <function-ref name="clr" scoped="" ref="0xf73c3dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xf73c1250" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xf73c1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73c1428"/>
        <function-ref name="isInput" scoped="" ref="0xf73c1508"/>
        <function-ref name="toggle" scoped="" ref="0xf73c15e8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73c16c8"/>
        <function-ref name="get" scoped="" ref="0xf73c17a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73c1888"/>
        <function-ref name="set" scoped="" ref="0xf73c1968"/>
        <function-ref name="clr" scoped="" ref="0xf73c1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xf73c0f28" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xf73c0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73bf110"/>
        <function-ref name="isInput" scoped="" ref="0xf73bf1f0"/>
        <function-ref name="toggle" scoped="" ref="0xf73bf2d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73bf3b0"/>
        <function-ref name="get" scoped="" ref="0xf73bf490"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73bf570"/>
        <function-ref name="set" scoped="" ref="0xf73bf650"/>
        <function-ref name="clr" scoped="" ref="0xf73bf730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a7a938" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a7a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a7ab10"/>
        <function-ref name="isInput" scoped="" ref="0xf6a7abf0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a7acd0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a7adb0"/>
        <function-ref name="get" scoped="" ref="0xf6a7ae90"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a78010"/>
        <function-ref name="set" scoped="" ref="0xf6a780f0"/>
        <function-ref name="clr" scoped="" ref="0xf6a781d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a773b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a773b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a77588"/>
        <function-ref name="isInput" scoped="" ref="0xf6a77668"/>
        <function-ref name="toggle" scoped="" ref="0xf6a77748"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a77828"/>
        <function-ref name="get" scoped="" ref="0xf6a77908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a779e8"/>
        <function-ref name="set" scoped="" ref="0xf6a77ac8"/>
        <function-ref name="clr" scoped="" ref="0xf6a77ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a76d70" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a76d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a75010"/>
        <function-ref name="isInput" scoped="" ref="0xf6a750f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a751d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a752b0"/>
        <function-ref name="get" scoped="" ref="0xf6a75390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a75470"/>
        <function-ref name="set" scoped="" ref="0xf6a75550"/>
        <function-ref name="clr" scoped="" ref="0xf6a75630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a747f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a747f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a749d0"/>
        <function-ref name="isInput" scoped="" ref="0xf6a74ab0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a74b90"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a74c70"/>
        <function-ref name="get" scoped="" ref="0xf6a74d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a74e30"/>
        <function-ref name="set" scoped="" ref="0xf6a74f10"/>
        <function-ref name="clr" scoped="" ref="0xf6a73010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a72228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a72228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a72400"/>
        <function-ref name="isInput" scoped="" ref="0xf6a724e0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a725c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a726a0"/>
        <function-ref name="get" scoped="" ref="0xf6a72780"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a72860"/>
        <function-ref name="set" scoped="" ref="0xf6a72940"/>
        <function-ref name="clr" scoped="" ref="0xf6a72a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a71c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a71c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a71de0"/>
        <function-ref name="isInput" scoped="" ref="0xf6a71ec0"/>
        <function-ref name="toggle" scoped="" ref="0xf6a70010"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a700f0"/>
        <function-ref name="get" scoped="" ref="0xf6a701d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a702b0"/>
        <function-ref name="set" scoped="" ref="0xf6a70390"/>
        <function-ref name="clr" scoped="" ref="0xf6a70470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a6f6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a6f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a6f898"/>
        <function-ref name="isInput" scoped="" ref="0xf6a6f978"/>
        <function-ref name="toggle" scoped="" ref="0xf6a6fa58"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a6fb38"/>
        <function-ref name="get" scoped="" ref="0xf6a6fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a6fcf8"/>
        <function-ref name="set" scoped="" ref="0xf6a6fdd8"/>
        <function-ref name="clr" scoped="" ref="0xf6a6feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf6a6d0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf6a6d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6a6d288"/>
        <function-ref name="isInput" scoped="" ref="0xf6a6d368"/>
        <function-ref name="toggle" scoped="" ref="0xf6a6d448"/>
        <function-ref name="isOutput" scoped="" ref="0xf6a6d528"/>
        <function-ref name="get" scoped="" ref="0xf6a6d608"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6a6d6e8"/>
        <function-ref name="set" scoped="" ref="0xf6a6d7c8"/>
        <function-ref name="clr" scoped="" ref="0xf6a6d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf73bce60" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf73bce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73bb050"/>
        <function-ref name="isInput" scoped="" ref="0xf73bb130"/>
        <function-ref name="toggle" scoped="" ref="0xf73bb210"/>
        <function-ref name="isOutput" scoped="" ref="0xf73bb2f0"/>
        <function-ref name="get" scoped="" ref="0xf73bb3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73bb4b0"/>
        <function-ref name="set" scoped="" ref="0xf73bb590"/>
        <function-ref name="clr" scoped="" ref="0xf73bb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf73ac458" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf73ac458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73ac630"/>
        <function-ref name="isInput" scoped="" ref="0xf73ac710"/>
        <function-ref name="toggle" scoped="" ref="0xf73ac7f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73ac8d0"/>
        <function-ref name="get" scoped="" ref="0xf73ac9b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73aca90"/>
        <function-ref name="set" scoped="" ref="0xf73acb70"/>
        <function-ref name="clr" scoped="" ref="0xf73acc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf73aaa30" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf73aaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73aac08"/>
        <function-ref name="isInput" scoped="" ref="0xf73aace8"/>
        <function-ref name="toggle" scoped="" ref="0xf73aadc8"/>
        <function-ref name="isOutput" scoped="" ref="0xf73aaea8"/>
        <function-ref name="get" scoped="" ref="0xf73a9010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73a90f0"/>
        <function-ref name="set" scoped="" ref="0xf73a91d0"/>
        <function-ref name="clr" scoped="" ref="0xf73a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf73a7090" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf73a7090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73a7268"/>
        <function-ref name="isInput" scoped="" ref="0xf73a7348"/>
        <function-ref name="toggle" scoped="" ref="0xf73a7428"/>
        <function-ref name="isOutput" scoped="" ref="0xf73a7508"/>
        <function-ref name="get" scoped="" ref="0xf73a75e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73a76c8"/>
        <function-ref name="set" scoped="" ref="0xf73a77a8"/>
        <function-ref name="clr" scoped="" ref="0xf73a7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf73a46c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf73a46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73a4898"/>
        <function-ref name="isInput" scoped="" ref="0xf73a4978"/>
        <function-ref name="toggle" scoped="" ref="0xf73a4a58"/>
        <function-ref name="isOutput" scoped="" ref="0xf73a4b38"/>
        <function-ref name="get" scoped="" ref="0xf73a4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73a4cf8"/>
        <function-ref name="set" scoped="" ref="0xf73a4dd8"/>
        <function-ref name="clr" scoped="" ref="0xf73a4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf73a2cb8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf73a2cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73a2e90"/>
        <function-ref name="isInput" scoped="" ref="0xf73a1010"/>
        <function-ref name="toggle" scoped="" ref="0xf73a10f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73a11d0"/>
        <function-ref name="get" scoped="" ref="0xf73a12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf73a1390"/>
        <function-ref name="set" scoped="" ref="0xf73a1470"/>
        <function-ref name="clr" scoped="" ref="0xf73a1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf739f3b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf739f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf739f588"/>
        <function-ref name="isInput" scoped="" ref="0xf739f668"/>
        <function-ref name="toggle" scoped="" ref="0xf739f748"/>
        <function-ref name="isOutput" scoped="" ref="0xf739f828"/>
        <function-ref name="get" scoped="" ref="0xf739f908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf739f9e8"/>
        <function-ref name="set" scoped="" ref="0xf739fac8"/>
        <function-ref name="clr" scoped="" ref="0xf739fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf739c978" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf739c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf739cb50"/>
        <function-ref name="isInput" scoped="" ref="0xf739cc30"/>
        <function-ref name="toggle" scoped="" ref="0xf739cd10"/>
        <function-ref name="isOutput" scoped="" ref="0xf739cdf0"/>
        <function-ref name="get" scoped="" ref="0xf739ced0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf739b010"/>
        <function-ref name="set" scoped="" ref="0xf739b0f0"/>
        <function-ref name="clr" scoped="" ref="0xf739b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf739aee0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf739aee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73990e0"/>
        <function-ref name="isInput" scoped="" ref="0xf73991c0"/>
        <function-ref name="toggle" scoped="" ref="0xf73992a0"/>
        <function-ref name="isOutput" scoped="" ref="0xf7399380"/>
        <function-ref name="get" scoped="" ref="0xf7399460"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7399540"/>
        <function-ref name="set" scoped="" ref="0xf7399620"/>
        <function-ref name="clr" scoped="" ref="0xf7399700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf73963e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf73963e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf73965c0"/>
        <function-ref name="isInput" scoped="" ref="0xf73966a0"/>
        <function-ref name="toggle" scoped="" ref="0xf7396780"/>
        <function-ref name="isOutput" scoped="" ref="0xf7396860"/>
        <function-ref name="get" scoped="" ref="0xf7396940"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7396a20"/>
        <function-ref name="set" scoped="" ref="0xf7396b00"/>
        <function-ref name="clr" scoped="" ref="0xf7396be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf73948f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf73948f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7394ac8"/>
        <function-ref name="isInput" scoped="" ref="0xf7394ba8"/>
        <function-ref name="toggle" scoped="" ref="0xf7394c88"/>
        <function-ref name="isOutput" scoped="" ref="0xf7394d68"/>
        <function-ref name="get" scoped="" ref="0xf7394e48"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7394f28"/>
        <function-ref name="set" scoped="" ref="0xf7393018"/>
        <function-ref name="clr" scoped="" ref="0xf73930f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf7392dd8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf7392dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7391010"/>
        <function-ref name="isInput" scoped="" ref="0xf73910f0"/>
        <function-ref name="toggle" scoped="" ref="0xf73911d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf73912b0"/>
        <function-ref name="get" scoped="" ref="0xf7391390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7391470"/>
        <function-ref name="set" scoped="" ref="0xf7391550"/>
        <function-ref name="clr" scoped="" ref="0xf7391630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xf738e3b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xf738e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf738e588"/>
        <function-ref name="isInput" scoped="" ref="0xf738e668"/>
        <function-ref name="toggle" scoped="" ref="0xf738e748"/>
        <function-ref name="isOutput" scoped="" ref="0xf738e828"/>
        <function-ref name="get" scoped="" ref="0xf738e908"/>
        <function-ref name="makeOutput" scoped="" ref="0xf738e9e8"/>
        <function-ref name="set" scoped="" ref="0xf738eac8"/>
        <function-ref name="clr" scoped="" ref="0xf738eba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf73726d8" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf73726d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xf76577d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xf76577d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf73728b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xf7372a88" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xf7372a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xf7372c60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xf7372d40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xf7372e20"/>
        <function-ref name="actualMicro" scoped="" ref="0xf7372f00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xf7371010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xf735c240" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xf735c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf735c418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xf7374408" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf7374408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf73745e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xf7374d68" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xf7374d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf735c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xf73747a0" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xf73747a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7374978"/>
        <function-ref name="taskLoop" scoped="" ref="0xf7374a58"/>
        <function-ref name="runNextTask" scoped="" ref="0xf7374b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xf764e600" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xf764e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf764e7d8"/>
        <function-ref name="runTask" scoped="" ref="0xf764e8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xf7654ed8" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xf7654ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf76560c0"/>
        <function-ref name="taskLoop" scoped="" ref="0xf76561a0"/>
        <function-ref name="runNextTask" scoped="" ref="0xf7656280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xf75cd720" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xf75cd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf75cd8f8"/>
        <function-ref name="runTask" scoped="" ref="0xf75cd9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xf75ca3a0" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xf75ca3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xf75ca578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xf75ceea8" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xf75ceea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf75cd0c0"/>
        <function-ref name="taskLoop" scoped="" ref="0xf75cd1a0"/>
        <function-ref name="runNextTask" scoped="" ref="0xf75cd280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xf75bae88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xf75bae88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xf75bc070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xf7652bd8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xf7652bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xf7652db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xf75bd8a8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xf75bd8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf75bda80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf7452428" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf7452428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7452600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0xf74529f0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0xf74529f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf7354010"/>
        <function-ref name="fired" scoped="" ref="0xf7356718"/>
        <function-ref name="startAt" scoped="" ref="0xf7356c08"/>
        <function-ref name="isRunning" scoped="" ref="0xf7356990"/>
        <function-ref name="getAlarm" scoped="" ref="0xf7354288"/>
        <function-ref name="start" scoped="" ref="0xf7356200"/>
        <function-ref name="stop" scoped="" ref="0xf73564a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf7353560" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf7353560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf7352ab8"/>
        <function-ref name="fired" scoped="" ref="0xf7352288"/>
        <function-ref name="startAt" scoped="" ref="0xf7352778"/>
        <function-ref name="isRunning" scoped="" ref="0xf7352500"/>
        <function-ref name="getAlarm" scoped="" ref="0xf7352d30"/>
        <function-ref name="start" scoped="" ref="0xf7353cb0"/>
        <function-ref name="stop" scoped="" ref="0xf7352010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf7206010" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf7206010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf72061e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf6a06058" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6a06058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6a055c8"/>
        <function-ref name="fired" scoped="" ref="0xf6a06cc0"/>
        <function-ref name="startAt" scoped="" ref="0xf6a05288"/>
        <function-ref name="isRunning" scoped="" ref="0xf6a05010"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6a05840"/>
        <function-ref name="start" scoped="" ref="0xf6a067a8"/>
        <function-ref name="stop" scoped="" ref="0xf6a06a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf6a03e30" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6a03e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6a01350"/>
        <function-ref name="fired" scoped="" ref="0xf6a02aa8"/>
        <function-ref name="startAt" scoped="" ref="0xf6a01010"/>
        <function-ref name="isRunning" scoped="" ref="0xf6a02d20"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6a015c8"/>
        <function-ref name="start" scoped="" ref="0xf6a02590"/>
        <function-ref name="stop" scoped="" ref="0xf6a02830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf7334840" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf7334840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf7334a18"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0xf7334af8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf7334bd8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0xf7334cb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf7334d98"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf7334e78"/>
        <function-ref name="getCtrlClock" scoped="" ref="0xf733b010"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0xf733b0f0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0xf733b1d0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0xf733b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xf732f6a8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf732f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf732e288"/>
        <function-ref name="test" scoped="" ref="0xf733acb8"/>
        <function-ref name="get" scoped="" ref="0xf732fcf0"/>
        <function-ref name="captured" scoped="" ref="0xf733a2b0"/>
        <function-ref name="reset" scoped="" ref="0xf733a550"/>
        <function-ref name="isOn" scoped="" ref="0xf732e010"/>
        <function-ref name="set" scoped="" ref="0xf733a010"/>
        <function-ref name="start" scoped="" ref="0xf733a7c8"/>
        <function-ref name="stop" scoped="" ref="0xf733aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf732d2f0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf732d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf7329840"/>
        <function-ref name="fired" scoped="" ref="0xf732de50"/>
        <function-ref name="get" scoped="" ref="0xf732d938"/>
        <function-ref name="reset" scoped="" ref="0xf73290d8"/>
        <function-ref name="isOn" scoped="" ref="0xf7329ab8"/>
        <function-ref name="set" scoped="" ref="0xf732dbb0"/>
        <function-ref name="start" scoped="" ref="0xf7329350"/>
        <function-ref name="stop" scoped="" ref="0xf73295c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf733c928" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf733c928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf7341418"/>
        <function-ref name="test" scoped="" ref="0xf7342f08"/>
        <function-ref name="get" scoped="" ref="0xf7342010"/>
        <function-ref name="setScale" scoped="" ref="0xf7341690"/>
        <function-ref name="getScale" scoped="" ref="0xf7341930"/>
        <function-ref name="reset" scoped="" ref="0xf73427a0"/>
        <function-ref name="overflow" scoped="" ref="0xf7342528"/>
        <function-ref name="isOn" scoped="" ref="0xf73411a0"/>
        <function-ref name="set" scoped="" ref="0xf7342288"/>
        <function-ref name="start" scoped="" ref="0xf7342a18"/>
        <function-ref name="stop" scoped="" ref="0xf7342c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf731fe18" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf731fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xf7322010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf73220f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf73221d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf73222b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf7322390"/>
        <function-ref name="setControl" scoped="" ref="0xf7322470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xf7319498" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xf7319498"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xf7319670"/>
        <function-ref name="compareBusy" scoped="" ref="0xf7319750"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xf7319830"/>
        <function-ref name="countBusy" scoped="" ref="0xf7319910"/>
        <function-ref name="getAssr" scoped="" ref="0xf73199f0"/>
        <function-ref name="setAssr" scoped="" ref="0xf7319ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf7322798" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf7322798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf731ece8"/>
        <function-ref name="fired" scoped="" ref="0xf731e308"/>
        <function-ref name="get" scoped="" ref="0xf7322de0"/>
        <function-ref name="reset" scoped="" ref="0xf731e580"/>
        <function-ref name="isOn" scoped="" ref="0xf731d010"/>
        <function-ref name="set" scoped="" ref="0xf731e068"/>
        <function-ref name="start" scoped="" ref="0xf731e7f8"/>
        <function-ref name="stop" scoped="" ref="0xf731ea70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf73285f0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf73285f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf7323068"/>
        <function-ref name="test" scoped="" ref="0xf7325b50"/>
        <function-ref name="get" scoped="" ref="0xf7328c38"/>
        <function-ref name="setScale" scoped="" ref="0xf73232e0"/>
        <function-ref name="getScale" scoped="" ref="0xf7323580"/>
        <function-ref name="reset" scoped="" ref="0xf73253e8"/>
        <function-ref name="overflow" scoped="" ref="0xf7325170"/>
        <function-ref name="isOn" scoped="" ref="0xf7325dc8"/>
        <function-ref name="set" scoped="" ref="0xf7328eb0"/>
        <function-ref name="start" scoped="" ref="0xf7325660"/>
        <function-ref name="stop" scoped="" ref="0xf73258d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf7315af0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf7315af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xf7315cc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf7315da8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf7315e88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf7314010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf73140f0"/>
        <function-ref name="setControl" scoped="" ref="0xf73141d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xf7311010" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xf7311010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xf73111e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xf7311470" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xf7311470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xf7311648"/>
        <function-ref name="compareBusy" scoped="" ref="0xf7311728"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xf7311808"/>
        <function-ref name="countBusy" scoped="" ref="0xf73118e8"/>
        <function-ref name="getAssr" scoped="" ref="0xf73119c8"/>
        <function-ref name="setAssr" scoped="" ref="0xf7311aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xf73144f8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf73144f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf7313a48"/>
        <function-ref name="fired" scoped="" ref="0xf7313068"/>
        <function-ref name="get" scoped="" ref="0xf7314b40"/>
        <function-ref name="reset" scoped="" ref="0xf73132e0"/>
        <function-ref name="isOn" scoped="" ref="0xf7313cc0"/>
        <function-ref name="set" scoped="" ref="0xf7314db8"/>
        <function-ref name="start" scoped="" ref="0xf7313558"/>
        <function-ref name="stop" scoped="" ref="0xf73137d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf731c790" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf731c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf7315288"/>
        <function-ref name="test" scoped="" ref="0xf7316ce8"/>
        <function-ref name="get" scoped="" ref="0xf731cdd8"/>
        <function-ref name="setScale" scoped="" ref="0xf7315500"/>
        <function-ref name="getScale" scoped="" ref="0xf73157a0"/>
        <function-ref name="reset" scoped="" ref="0xf7316580"/>
        <function-ref name="overflow" scoped="" ref="0xf7316308"/>
        <function-ref name="isOn" scoped="" ref="0xf7315010"/>
        <function-ref name="set" scoped="" ref="0xf7316068"/>
        <function-ref name="start" scoped="" ref="0xf73167f8"/>
        <function-ref name="stop" scoped="" ref="0xf7316a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xf72dce78" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf72dce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf72db070"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0xf72db150"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf72db230"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0xf72db310"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf72db3f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf72db4d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0xf72db5b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0xf72db690"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0xf72db770"/>
        <function-ref name="setCtrlClock" scoped="" ref="0xf72db850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0xf72d2e98" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0xf72d2e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xf72d00c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf72d01a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf72d0280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf72d0360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf72d0440"/>
        <function-ref name="setControl" scoped="" ref="0xf72d0520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xf72d8a80" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xf72d8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf72d6010"/>
        <function-ref name="fired" scoped="" ref="0xf72d7610"/>
        <function-ref name="get" scoped="" ref="0xf72d70f8"/>
        <function-ref name="reset" scoped="" ref="0xf72d7888"/>
        <function-ref name="isOn" scoped="" ref="0xf72d6288"/>
        <function-ref name="set" scoped="" ref="0xf72d7370"/>
        <function-ref name="start" scoped="" ref="0xf72d7b00"/>
        <function-ref name="stop" scoped="" ref="0xf72d7d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xf72dbb88" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf72dbb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf72d8640"/>
        <function-ref name="test" scoped="" ref="0xf72d8150"/>
        <function-ref name="get" scoped="" ref="0xf72da200"/>
        <function-ref name="captured" scoped="" ref="0xf72da718"/>
        <function-ref name="reset" scoped="" ref="0xf72da9b8"/>
        <function-ref name="isOn" scoped="" ref="0xf72d83c8"/>
        <function-ref name="set" scoped="" ref="0xf72da478"/>
        <function-ref name="start" scoped="" ref="0xf72dac30"/>
        <function-ref name="stop" scoped="" ref="0xf72daea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xf72d66a0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xf72d66a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf72d4c90"/>
        <function-ref name="fired" scoped="" ref="0xf72d42b0"/>
        <function-ref name="get" scoped="" ref="0xf72d6ce8"/>
        <function-ref name="reset" scoped="" ref="0xf72d4528"/>
        <function-ref name="isOn" scoped="" ref="0xf72d4f08"/>
        <function-ref name="set" scoped="" ref="0xf72d4010"/>
        <function-ref name="start" scoped="" ref="0xf72d47a0"/>
        <function-ref name="stop" scoped="" ref="0xf72d4a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xf72d3340" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xf72d3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf72d2898"/>
        <function-ref name="fired" scoped="" ref="0xf72d3ea0"/>
        <function-ref name="get" scoped="" ref="0xf72d3988"/>
        <function-ref name="reset" scoped="" ref="0xf72d2130"/>
        <function-ref name="isOn" scoped="" ref="0xf72d2b10"/>
        <function-ref name="set" scoped="" ref="0xf72d3c00"/>
        <function-ref name="start" scoped="" ref="0xf72d23a8"/>
        <function-ref name="stop" scoped="" ref="0xf72d2620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf7326b68" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf7326b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf72dc600"/>
        <function-ref name="test" scoped="" ref="0xf72dc110"/>
        <function-ref name="get" scoped="" ref="0xf72dd200"/>
        <function-ref name="setScale" scoped="" ref="0xf72dc878"/>
        <function-ref name="getScale" scoped="" ref="0xf72dcb18"/>
        <function-ref name="reset" scoped="" ref="0xf72dd990"/>
        <function-ref name="overflow" scoped="" ref="0xf72dd718"/>
        <function-ref name="isOn" scoped="" ref="0xf72dc388"/>
        <function-ref name="set" scoped="" ref="0xf72dd478"/>
        <function-ref name="start" scoped="" ref="0xf72ddc08"/>
        <function-ref name="stop" scoped="" ref="0xf72dde80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf7280630" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf7280630"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xf76575d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xf76575d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7280808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf7280a18" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf7280a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf7277500"/>
        <function-ref name="test" scoped="" ref="0xf7277010"/>
        <function-ref name="get" scoped="" ref="0xf727f088"/>
        <function-ref name="setScale" scoped="" ref="0xf7277778"/>
        <function-ref name="getScale" scoped="" ref="0xf7277a18"/>
        <function-ref name="reset" scoped="" ref="0xf727f818"/>
        <function-ref name="overflow" scoped="" ref="0xf727f5a0"/>
        <function-ref name="isOn" scoped="" ref="0xf7277288"/>
        <function-ref name="set" scoped="" ref="0xf727f300"/>
        <function-ref name="start" scoped="" ref="0xf727fa90"/>
        <function-ref name="stop" scoped="" ref="0xf727fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf69f8d00" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf69f8d00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xf76573d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xf76573d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf69f51e8"/>
        <function-ref name="fired" scoped="" ref="0xf69f6990"/>
        <function-ref name="startAt" scoped="" ref="0xf69f6e80"/>
        <function-ref name="isRunning" scoped="" ref="0xf69f6c08"/>
        <function-ref name="getAlarm" scoped="" ref="0xf69f5460"/>
        <function-ref name="start" scoped="" ref="0xf69f6478"/>
        <function-ref name="stop" scoped="" ref="0xf69f6718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xf69f2978" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xf69f2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf69f1f08"/>
        <function-ref name="fired" scoped="" ref="0xf69f1528"/>
        <function-ref name="get" scoped="" ref="0xf69f1010"/>
        <function-ref name="reset" scoped="" ref="0xf69f17a0"/>
        <function-ref name="isOn" scoped="" ref="0xf69f01a0"/>
        <function-ref name="set" scoped="" ref="0xf69f1288"/>
        <function-ref name="start" scoped="" ref="0xf69f1a18"/>
        <function-ref name="stop" scoped="" ref="0xf69f1c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xf69f5720" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xf69f5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf69f21a0"/>
        <function-ref name="test" scoped="" ref="0xf69f4c90"/>
        <function-ref name="get" scoped="" ref="0xf69f5d68"/>
        <function-ref name="setScale" scoped="" ref="0xf69f2418"/>
        <function-ref name="getScale" scoped="" ref="0xf69f26b8"/>
        <function-ref name="reset" scoped="" ref="0xf69f4528"/>
        <function-ref name="overflow" scoped="" ref="0xf69f42b0"/>
        <function-ref name="isOn" scoped="" ref="0xf69f4f08"/>
        <function-ref name="set" scoped="" ref="0xf69f4010"/>
        <function-ref name="start" scoped="" ref="0xf69f47a0"/>
        <function-ref name="stop" scoped="" ref="0xf69f4a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf7251f18" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf7251f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf7253680"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf7253b70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf72538f8"/>
        <function-ref name="overflow" scoped="" ref="0xf7253de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf72528f8" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf72528f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf724e068"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf724e558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf724e2e0"/>
        <function-ref name="overflow" scoped="" ref="0xf724e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf724b030" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf724b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf724b780"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf724bc70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf724b9f8"/>
        <function-ref name="overflow" scoped="" ref="0xf724bee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf724a208" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf724a208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf723fc68"/>
        <function-ref name="test" scoped="" ref="0xf723f778"/>
        <function-ref name="get" scoped="" ref="0xf724a850"/>
        <function-ref name="setScale" scoped="" ref="0xf723fee0"/>
        <function-ref name="getScale" scoped="" ref="0xf723e1c0"/>
        <function-ref name="reset" scoped="" ref="0xf723f010"/>
        <function-ref name="overflow" scoped="" ref="0xf724ad68"/>
        <function-ref name="isOn" scoped="" ref="0xf723f9f0"/>
        <function-ref name="set" scoped="" ref="0xf724aac8"/>
        <function-ref name="start" scoped="" ref="0xf723f288"/>
        <function-ref name="stop" scoped="" ref="0xf723f500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xf723c6f8" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xf723c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf723ce48"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf722b350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf722b0d8"/>
        <function-ref name="overflow" scoped="" ref="0xf722b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf723d490" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf723d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf723dbe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf723c110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf723de58"/>
        <function-ref name="overflow" scoped="" ref="0xf723c388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf6a00848" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6a00848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf69ffd58"/>
        <function-ref name="fired" scoped="" ref="0xf69ff528"/>
        <function-ref name="startAt" scoped="" ref="0xf69ffa18"/>
        <function-ref name="isRunning" scoped="" ref="0xf69ff7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0xf69fd010"/>
        <function-ref name="start" scoped="" ref="0xf69ff010"/>
        <function-ref name="stop" scoped="" ref="0xf69ff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xf69fc5f8" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0xf69fc5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="TOne" ref="0xf75d13d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf69fbab8"/>
        <function-ref name="fired" scoped="" ref="0xf69fb288"/>
        <function-ref name="startAt" scoped="" ref="0xf69fb778"/>
        <function-ref name="isRunning" scoped="" ref="0xf69fb500"/>
        <function-ref name="getAlarm" scoped="" ref="0xf69fbd30"/>
        <function-ref name="start" scoped="" ref="0xf69fcd48"/>
        <function-ref name="stop" scoped="" ref="0xf69fb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xf69fd360" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf69fd360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf69fdab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf69fc010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf69fdd28"/>
        <function-ref name="overflow" scoped="" ref="0xf69fc288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf7207278" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf7207278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7207450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0xf7203128" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0xf7203128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7203300"/>
        <function-ref name="isInput" scoped="" ref="0xf72033e0"/>
        <function-ref name="toggle" scoped="" ref="0xf72034c0"/>
        <function-ref name="isOutput" scoped="" ref="0xf72035a0"/>
        <function-ref name="get" scoped="" ref="0xf7203680"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7203760"/>
        <function-ref name="set" scoped="" ref="0xf7203840"/>
        <function-ref name="clr" scoped="" ref="0xf7203920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0xf7203b18" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0xf7203b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7203cf0"/>
        <function-ref name="isInput" scoped="" ref="0xf7203dd0"/>
        <function-ref name="toggle" scoped="" ref="0xf7203eb0"/>
        <function-ref name="isOutput" scoped="" ref="0xf7202010"/>
        <function-ref name="get" scoped="" ref="0xf72020f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72021d0"/>
        <function-ref name="set" scoped="" ref="0xf72022b0"/>
        <function-ref name="clr" scoped="" ref="0xf7202390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xf7202580" loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xf7202580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7202758"/>
        <function-ref name="isInput" scoped="" ref="0xf7202838"/>
        <function-ref name="toggle" scoped="" ref="0xf7202918"/>
        <function-ref name="isOutput" scoped="" ref="0xf72029f8"/>
        <function-ref name="get" scoped="" ref="0xf7202ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7202bb8"/>
        <function-ref name="set" scoped="" ref="0xf7202c98"/>
        <function-ref name="clr" scoped="" ref="0xf7202d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0xf7204730" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xf7204730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7204908"/>
        <function-ref name="isInput" scoped="" ref="0xf72049e8"/>
        <function-ref name="toggle" scoped="" ref="0xf7204ac8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7204ba8"/>
        <function-ref name="get" scoped="" ref="0xf7204c88"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7204d68"/>
        <function-ref name="set" scoped="" ref="0xf7204e48"/>
        <function-ref name="clr" scoped="" ref="0xf7204f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0xf72019f8" loc="72:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0xf72019f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7201bd0"/>
        <function-ref name="isInput" scoped="" ref="0xf7201cb0"/>
        <function-ref name="toggle" scoped="" ref="0xf7201d90"/>
        <function-ref name="isOutput" scoped="" ref="0xf7201e70"/>
        <function-ref name="get" scoped="" ref="0xf7200010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf72000f0"/>
        <function-ref name="set" scoped="" ref="0xf72001d0"/>
        <function-ref name="clr" scoped="" ref="0xf72002b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xf7451c98" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xf7451c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7451e70"/>
        <function-ref name="isInput" scoped="" ref="0xf7204010"/>
        <function-ref name="toggle" scoped="" ref="0xf72040f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf72041d0"/>
        <function-ref name="get" scoped="" ref="0xf72042b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7204390"/>
        <function-ref name="set" scoped="" ref="0xf7204470"/>
        <function-ref name="clr" scoped="" ref="0xf7204550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0xf7201010" loc="71:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0xf7201010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf72011e8"/>
        <function-ref name="isInput" scoped="" ref="0xf72012c8"/>
        <function-ref name="toggle" scoped="" ref="0xf72013a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7201488"/>
        <function-ref name="get" scoped="" ref="0xf7201568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7201648"/>
        <function-ref name="set" scoped="" ref="0xf7201728"/>
        <function-ref name="clr" scoped="" ref="0xf7201808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0xf71f83e8" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0xf71f83e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xf71f85c0"/>
        <function-ref name="disable" scoped="" ref="0xf71f86a0"/>
        <function-ref name="captured" scoped="" ref="0xf71f8780"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xf71f8860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0xf71f8ae8" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0xf71f8ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71f8cc0"/>
        <function-ref name="disable" scoped="" ref="0xf71f8da0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xf71f8e80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xf71fb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0xf71fb2a8" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0xf71fb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71fb480"/>
        <function-ref name="disable" scoped="" ref="0xf71fb560"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xf71fb640"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xf71fb720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xf71fa988" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xf71fa988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xf71fab60"/>
        <function-ref name="disable" scoped="" ref="0xf71fac40"/>
        <function-ref name="captured" scoped="" ref="0xf71fad20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xf71fae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0xf71f7030" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0xf71f7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xf71edab8"/>
        <function-ref name="test" scoped="" ref="0xf71ed5c8"/>
        <function-ref name="get" scoped="" ref="0xf71f7678"/>
        <function-ref name="captured" scoped="" ref="0xf71f7b90"/>
        <function-ref name="reset" scoped="" ref="0xf71f7e30"/>
        <function-ref name="isOn" scoped="" ref="0xf71ed840"/>
        <function-ref name="set" scoped="" ref="0xf71f78f0"/>
        <function-ref name="start" scoped="" ref="0xf71ed0d8"/>
        <function-ref name="stop" scoped="" ref="0xf71ed350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0xf71e9350" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0xf71e9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71e9528"/>
        <function-ref name="fired" scoped="" ref="0xf71e9608"/>
        <function-ref name="disable" scoped="" ref="0xf71e96e8"/>
        <function-ref name="edge" scoped="" ref="0xf71e97c8"/>
        <function-ref name="enable" scoped="" ref="0xf71e98a8"/>
        <function-ref name="getValue" scoped="" ref="0xf71e9988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xf71dfd38" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0xf71dfd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71dff10"/>
        <function-ref name="disable" scoped="" ref="0xf71e9010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xf71e90f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xf71e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0xf71d9bb8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0xf71d9bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71d9d90"/>
        <function-ref name="fired" scoped="" ref="0xf71d9e70"/>
        <function-ref name="disable" scoped="" ref="0xf71d8010"/>
        <function-ref name="edge" scoped="" ref="0xf71d80f0"/>
        <function-ref name="enable" scoped="" ref="0xf71d81d0"/>
        <function-ref name="getValue" scoped="" ref="0xf71d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0xf71db010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0xf71db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71db1e8"/>
        <function-ref name="fired" scoped="" ref="0xf71db2c8"/>
        <function-ref name="disable" scoped="" ref="0xf71db3a8"/>
        <function-ref name="edge" scoped="" ref="0xf71db488"/>
        <function-ref name="enable" scoped="" ref="0xf71db568"/>
        <function-ref name="getValue" scoped="" ref="0xf71db648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0xf71da9e8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0xf71da9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71dabc0"/>
        <function-ref name="fired" scoped="" ref="0xf71daca0"/>
        <function-ref name="disable" scoped="" ref="0xf71dad80"/>
        <function-ref name="edge" scoped="" ref="0xf71dae60"/>
        <function-ref name="enable" scoped="" ref="0xf71d9010"/>
        <function-ref name="getValue" scoped="" ref="0xf71d90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0xf71d84f8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0xf71d84f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71d86d0"/>
        <function-ref name="fired" scoped="" ref="0xf71d87b0"/>
        <function-ref name="disable" scoped="" ref="0xf71d8890"/>
        <function-ref name="edge" scoped="" ref="0xf71d8970"/>
        <function-ref name="enable" scoped="" ref="0xf71d8a50"/>
        <function-ref name="getValue" scoped="" ref="0xf71d8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0xf71db890" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0xf71db890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71dba68"/>
        <function-ref name="fired" scoped="" ref="0xf71dbb48"/>
        <function-ref name="disable" scoped="" ref="0xf71dbc28"/>
        <function-ref name="edge" scoped="" ref="0xf71dbd08"/>
        <function-ref name="enable" scoped="" ref="0xf71dbde8"/>
        <function-ref name="getValue" scoped="" ref="0xf71dbec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0xf71d9338" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0xf71d9338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71d9510"/>
        <function-ref name="fired" scoped="" ref="0xf71d95f0"/>
        <function-ref name="disable" scoped="" ref="0xf71d96d0"/>
        <function-ref name="edge" scoped="" ref="0xf71d97b0"/>
        <function-ref name="enable" scoped="" ref="0xf71d9890"/>
        <function-ref name="getValue" scoped="" ref="0xf71d9970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0xf71de6f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0xf71de6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71de8c8"/>
        <function-ref name="fired" scoped="" ref="0xf71de9a8"/>
        <function-ref name="disable" scoped="" ref="0xf71dea88"/>
        <function-ref name="edge" scoped="" ref="0xf71deb68"/>
        <function-ref name="enable" scoped="" ref="0xf71dec48"/>
        <function-ref name="getValue" scoped="" ref="0xf71ded28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0xf71da168" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0xf71da168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71da340"/>
        <function-ref name="fired" scoped="" ref="0xf71da420"/>
        <function-ref name="disable" scoped="" ref="0xf71da500"/>
        <function-ref name="edge" scoped="" ref="0xf71da5e0"/>
        <function-ref name="enable" scoped="" ref="0xf71da6c0"/>
        <function-ref name="getValue" scoped="" ref="0xf71da7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0xf71d3ba0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0xf71d3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71d3d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0xf71d44a8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0xf71d44a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71d4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0xf71d32b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0xf71d32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71d3488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0xf71d2030" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0xf71d2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71d2208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0xf71d4920" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0xf71d4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71d4af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0xf71d3728" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0xf71d3728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71d3900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0xf71d4030" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0xf71d4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71d4208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0xf71d4d98" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0xf71d4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71d3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xf71d50f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xf71d50f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71d52d0"/>
        <function-ref name="fired" scoped="" ref="0xf71d53b0"/>
        <function-ref name="disable" scoped="" ref="0xf71d5490"/>
        <function-ref name="edge" scoped="" ref="0xf71d5570"/>
        <function-ref name="enable" scoped="" ref="0xf71d5650"/>
        <function-ref name="getValue" scoped="" ref="0xf71d5730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xf71d58b0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xf71d58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71d5a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xf71b6228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xf71b6228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71b6400"/>
        <function-ref name="fired" scoped="" ref="0xf71b64e0"/>
        <function-ref name="disable" scoped="" ref="0xf71b65c0"/>
        <function-ref name="edge" scoped="" ref="0xf71b66a0"/>
        <function-ref name="enable" scoped="" ref="0xf71b6780"/>
        <function-ref name="getValue" scoped="" ref="0xf71b6860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xf71b69e0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xf71b69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71b6bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xf71b43b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xf71b43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71b4588"/>
        <function-ref name="fired" scoped="" ref="0xf71b4668"/>
        <function-ref name="disable" scoped="" ref="0xf71b4748"/>
        <function-ref name="edge" scoped="" ref="0xf71b4828"/>
        <function-ref name="enable" scoped="" ref="0xf71b4908"/>
        <function-ref name="getValue" scoped="" ref="0xf71b49e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xf71b4b68" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xf71b4b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71b4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xf71b2538" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xf71b2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71b2710"/>
        <function-ref name="fired" scoped="" ref="0xf71b27f0"/>
        <function-ref name="disable" scoped="" ref="0xf71b28d0"/>
        <function-ref name="edge" scoped="" ref="0xf71b29b0"/>
        <function-ref name="enable" scoped="" ref="0xf71b2a90"/>
        <function-ref name="getValue" scoped="" ref="0xf71b2b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xf71b2cf0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xf71b2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71b2ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xf71af718" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xf71af718"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71af8f0"/>
        <function-ref name="fired" scoped="" ref="0xf71af9d0"/>
        <function-ref name="disable" scoped="" ref="0xf71afab0"/>
        <function-ref name="edge" scoped="" ref="0xf71afb90"/>
        <function-ref name="enable" scoped="" ref="0xf71afc70"/>
        <function-ref name="getValue" scoped="" ref="0xf71afd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xf71afed0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xf71afed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71ae0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xf71ad8f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xf71ad8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71adac8"/>
        <function-ref name="fired" scoped="" ref="0xf71adba8"/>
        <function-ref name="disable" scoped="" ref="0xf71adc88"/>
        <function-ref name="edge" scoped="" ref="0xf71add68"/>
        <function-ref name="enable" scoped="" ref="0xf71ade48"/>
        <function-ref name="getValue" scoped="" ref="0xf71adf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xf71ac0b8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xf71ac0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71ac290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xf71abb68" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xf71abb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71abd40"/>
        <function-ref name="fired" scoped="" ref="0xf71abe20"/>
        <function-ref name="disable" scoped="" ref="0xf71abf00"/>
        <function-ref name="edge" scoped="" ref="0xf71aa010"/>
        <function-ref name="enable" scoped="" ref="0xf71aa0f0"/>
        <function-ref name="getValue" scoped="" ref="0xf71aa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xf71aa350" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xf71aa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71aa528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xf71a9d60" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xf71a9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf71a8010"/>
        <function-ref name="fired" scoped="" ref="0xf71a80f0"/>
        <function-ref name="disable" scoped="" ref="0xf71a81d0"/>
        <function-ref name="edge" scoped="" ref="0xf71a82b0"/>
        <function-ref name="enable" scoped="" ref="0xf71a8390"/>
        <function-ref name="getValue" scoped="" ref="0xf71a8470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xf71a85f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xf71a85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71a87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0xf71a16c8" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0xf71a16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf71a18a0"/>
        <function-ref name="isInput" scoped="" ref="0xf71a1980"/>
        <function-ref name="toggle" scoped="" ref="0xf71a1a60"/>
        <function-ref name="isOutput" scoped="" ref="0xf71a1b40"/>
        <function-ref name="get" scoped="" ref="0xf71a1c20"/>
        <function-ref name="makeOutput" scoped="" ref="0xf71a1d00"/>
        <function-ref name="set" scoped="" ref="0xf71a1de0"/>
        <function-ref name="clr" scoped="" ref="0xf71a1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xf71a1010" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xf71a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf71a11e8"/>
        <function-ref name="disable" scoped="" ref="0xf71a12c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xf71a13a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xf71a1488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0xf719fed8" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0xf719fed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf719e0c0"/>
        <function-ref name="runTask" scoped="" ref="0xf719e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xf702d190" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xf702d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702d468"/>
        <function-ref name="write" scoped="" ref="0xf702d548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xf7033548" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xf7033548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7033720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xf702f7a0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xf702f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702f978"/>
        <function-ref name="write" scoped="" ref="0xf702fa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xf702c010" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xf702c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702c1e8"/>
        <function-ref name="write" scoped="" ref="0xf702c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xf702c448" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xf702c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702c620"/>
        <function-ref name="write" scoped="" ref="0xf702c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xf70266e8" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xf70266e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70268c0"/>
        <function-ref name="write" scoped="" ref="0xf70269a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xf70275c8" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xf70275c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70277a0"/>
        <function-ref name="write" scoped="" ref="0xf7027880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xf7032010" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xf7032010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf70321e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xf7028cb8" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf7028cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7028e90"/>
        <function-ref name="write" scoped="" ref="0xf7027010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xf702e030" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xf702e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702e208"/>
        <function-ref name="write" scoped="" ref="0xf702e2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xf702e8a0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xf702e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702ea78"/>
        <function-ref name="write" scoped="" ref="0xf702eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xf702ae38" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xf702ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7029050"/>
        <function-ref name="write" scoped="" ref="0xf7029130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xf702c880" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xf702c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702ca58"/>
        <function-ref name="write" scoped="" ref="0xf702cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xf7034958" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xf7034958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xf7034b30"/>
        <function-ref name="abortRelease" scoped="" ref="0xf7034c10"/>
        <function-ref name="attemptRelease" scoped="" ref="0xf7034cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xf7032d70" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xf7032d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7030010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xf7030190" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xf7030190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf70303e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xf7030568" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xf7030568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7030740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xf7027190" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf7027190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7027368"/>
        <function-ref name="write" scoped="" ref="0xf7027448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xf70326c0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xf70326c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7032898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xf702e468" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xf702e468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702e640"/>
        <function-ref name="write" scoped="" ref="0xf702e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xf702fbd8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xf702fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702fdb0"/>
        <function-ref name="write" scoped="" ref="0xf702fe90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xf70331f0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xf70331f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf70333c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xf70262b0" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xf70262b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7026488"/>
        <function-ref name="write" scoped="" ref="0xf7026568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xf7027a00" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xf7027a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7027bd8"/>
        <function-ref name="write" scoped="" ref="0xf7027cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xf70292b0" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xf70292b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7029488"/>
        <function-ref name="write" scoped="" ref="0xf7029568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xf7028880" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xf7028880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7028a58"/>
        <function-ref name="write" scoped="" ref="0xf7028b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xf702a190" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xf702a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702a368"/>
        <function-ref name="write" scoped="" ref="0xf702a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xf7026b20" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xf7026b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf7026ef8"/>
        <function-ref name="writeDone" scoped="" ref="0xf7025010"/>
        <function-ref name="write" scoped="" ref="0xf70250f0"/>
        <function-ref name="beginRead" scoped="" ref="0xf70251d0"/>
        <function-ref name="readDone" scoped="" ref="0xf70252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xf7034e70" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xf7034e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7033070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xf702f368" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xf702f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702f540"/>
        <function-ref name="write" scoped="" ref="0xf702f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xf702ecd8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xf702ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702eeb0"/>
        <function-ref name="write" scoped="" ref="0xf702d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xf702ccb8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xf702ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702ce90"/>
        <function-ref name="write" scoped="" ref="0xf702a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xf702d6c8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xf702d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702d8a0"/>
        <function-ref name="write" scoped="" ref="0xf702d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xf70338a0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xf70338a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7033a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xf702db00" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xf702db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702dcd8"/>
        <function-ref name="write" scoped="" ref="0xf702ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf70342a0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf70342a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7034478"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7034558"/>
        <function-ref name="request" scoped="" ref="0xf7034638"/>
        <function-ref name="granted" scoped="" ref="0xf7034718"/>
        <function-ref name="isOwner" scoped="" ref="0xf70347f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xf70308c0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xf70308c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7030a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xf702f010" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xf702f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf702f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xf7028448" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xf7028448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7028620"/>
        <function-ref name="write" scoped="" ref="0xf7028700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xf7028010" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xf7028010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70281e8"/>
        <function-ref name="write" scoped="" ref="0xf70282c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xf7032a18" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xf7032a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7032bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xf7029b20" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf7029b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7029cf8"/>
        <function-ref name="write" scoped="" ref="0xf7029dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xf7027e38" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xf7027e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7026050"/>
        <function-ref name="write" scoped="" ref="0xf7026130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xf70296e8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xf70296e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70298c0"/>
        <function-ref name="write" scoped="" ref="0xf70299a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xf7033bf8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xf7033bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7033dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xf702aa00" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xf702aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702abd8"/>
        <function-ref name="write" scoped="" ref="0xf702acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xf7032368" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xf7032368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7032540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xf702a5c8" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xf702a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf702a7a0"/>
        <function-ref name="write" scoped="" ref="0xf702a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xf7030c18" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xf7030c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7030df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xf7025430" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xf7025430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf7025608"/>
        <function-ref name="writeDone" scoped="" ref="0xf70256e8"/>
        <function-ref name="write" scoped="" ref="0xf70257c8"/>
        <function-ref name="beginRead" scoped="" ref="0xf70258a8"/>
        <function-ref name="readDone" scoped="" ref="0xf7025988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xf7179100" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0xf7179100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf71792d8"/>
        <function-ref name="writeDone" scoped="" ref="0xf71793b8"/>
        <function-ref name="write" scoped="" ref="0xf7179498"/>
        <function-ref name="beginRead" scoped="" ref="0xf7179578"/>
        <function-ref name="readDone" scoped="" ref="0xf7179658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xf717a850" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xf717a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xf717aa28"/>
        <function-ref name="abortRelease" scoped="" ref="0xf717ab08"/>
        <function-ref name="attemptRelease" scoped="" ref="0xf717abe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xf7179b48" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0xf7179b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7179d20"/>
        <function-ref name="write" scoped="" ref="0xf7179e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xf7177330" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0xf7177330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7177508"/>
        <function-ref name="write" scoped="" ref="0xf71775e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf717a100" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf717a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf717a2d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf717a3b8"/>
        <function-ref name="request" scoped="" ref="0xf717a498"/>
        <function-ref name="granted" scoped="" ref="0xf717a578"/>
        <function-ref name="isOwner" scoped="" ref="0xf717a658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xf7177b08" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0xf7177b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7177ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0xf716ba28" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xf716ba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf716bc00"/>
        <function-ref name="sendDone" scoped="" ref="0xf716bce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xf7173918" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0xf7173918"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf7173af0"/>
        <function-ref name="writeDone" scoped="" ref="0xf7173bd0"/>
        <function-ref name="write" scoped="" ref="0xf7173cb0"/>
        <function-ref name="beginRead" scoped="" ref="0xf7173d90"/>
        <function-ref name="readDone" scoped="" ref="0xf7173e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xf7176690" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xf7176690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xf7176868"/>
        <function-ref name="abortRelease" scoped="" ref="0xf7176948"/>
        <function-ref name="attemptRelease" scoped="" ref="0xf7176a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0xf716d718" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xf716d718"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xf716d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0xf716bef8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0xf716bef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf716f0e0"/>
        <function-ref name="toIdle" scoped="" ref="0xf716f1c0"/>
        <function-ref name="isState" scoped="" ref="0xf716f2a0"/>
        <function-ref name="isIdle" scoped="" ref="0xf716f380"/>
        <function-ref name="requestState" scoped="" ref="0xf716f460"/>
        <function-ref name="forceState" scoped="" ref="0xf716f540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xf7171730" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xf7171730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7171908"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf71719e8"/>
        <function-ref name="request" scoped="" ref="0xf7171ac8"/>
        <function-ref name="granted" scoped="" ref="0xf7171ba8"/>
        <function-ref name="isOwner" scoped="" ref="0xf7171c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xf7172370" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0xf7172370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7172548"/>
        <function-ref name="write" scoped="" ref="0xf7172628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xf7172b18" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0xf7172b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7172cf0"/>
        <function-ref name="write" scoped="" ref="0xf7172dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf716f6b0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf716f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf716f888"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf716f968"/>
        <function-ref name="led1On" scoped="" ref="0xf716fa48"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf716fb28"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf716fc08"/>
        <function-ref name="get" scoped="" ref="0xf716fce8"/>
        <function-ref name="led1Off" scoped="" ref="0xf716fdc8"/>
        <function-ref name="led2Off" scoped="" ref="0xf716e1d0"/>
        <function-ref name="set" scoped="" ref="0xf716fea8"/>
        <function-ref name="led0On" scoped="" ref="0xf716e010"/>
        <function-ref name="led2On" scoped="" ref="0xf716e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf7176ea0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf7176ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf71730c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf71731a0"/>
        <function-ref name="request" scoped="" ref="0xf7173280"/>
        <function-ref name="granted" scoped="" ref="0xf7173360"/>
        <function-ref name="isOwner" scoped="" ref="0xf7173440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0xf7167520" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0xf7167520"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf71676f8"/>
        <function-ref name="runTask" scoped="" ref="0xf71677d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xf71712f0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0xf71712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf71714c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xf7132e40" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xf7132e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf7135050"/>
        <function-ref name="toIdle" scoped="" ref="0xf7135130"/>
        <function-ref name="isState" scoped="" ref="0xf7135210"/>
        <function-ref name="isIdle" scoped="" ref="0xf71352f0"/>
        <function-ref name="requestState" scoped="" ref="0xf71353d0"/>
        <function-ref name="forceState" scoped="" ref="0xf71354b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xf7130100" loc="66:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xf7130100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf71302d8"/>
        <function-ref name="toIdle" scoped="" ref="0xf71303b8"/>
        <function-ref name="isState" scoped="" ref="0xf7130498"/>
        <function-ref name="isIdle" scoped="" ref="0xf7130578"/>
        <function-ref name="requestState" scoped="" ref="0xf7130658"/>
        <function-ref name="forceState" scoped="" ref="0xf7130738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf712d128" loc="66:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf712d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf712d300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xf712d758" loc="67:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xf712d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf712d930"/>
        <function-ref name="toIdle" scoped="" ref="0xf712da10"/>
        <function-ref name="isState" scoped="" ref="0xf712daf0"/>
        <function-ref name="isIdle" scoped="" ref="0xf712dbd0"/>
        <function-ref name="requestState" scoped="" ref="0xf712dcb0"/>
        <function-ref name="forceState" scoped="" ref="0xf712dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xf7067668" loc="43:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xf7067668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7067840"/>
        <function-ref name="sendDone" scoped="" ref="0xf7067920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xf7067330" loc="42:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xf7067330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xf7067508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf71318b0" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf71318b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7131a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf7131be8" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf7131be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7131dc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7131ea0"/>
        <function-ref name="request" scoped="" ref="0xf7067010"/>
        <function-ref name="granted" scoped="" ref="0xf70670f0"/>
        <function-ref name="isOwner" scoped="" ref="0xf70671d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xf711b648" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xf711b648"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf711b820"/>
        <function-ref name="sendDone" scoped="" ref="0xf711b900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xf711fd48" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xf711fd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xf711ff20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf711f9c8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf711f9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf711fba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xf711b010" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf711b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf711b1e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf711b2c8"/>
        <function-ref name="splitRead" scoped="" ref="0xf711b3a8"/>
        <function-ref name="write" scoped="" ref="0xf711b488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf711bd98" loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf711bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf711a010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf711a0f0"/>
        <function-ref name="request" scoped="" ref="0xf711a1d0"/>
        <function-ref name="granted" scoped="" ref="0xf711a2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xf711a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xf70ed1e0" loc="241:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xf70ed1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf70ed3b8"/>
        <function-ref name="runTask" scoped="" ref="0xf70ed498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xf7115d10" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xf7115d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf7115ee8"/>
        <function-ref name="sendDone" scoped="" ref="0xf7114010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0xf7112158" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0xf7112158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7112330"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7112410"/>
        <function-ref name="request" scoped="" ref="0xf71124f0"/>
        <function-ref name="granted" scoped="" ref="0xf71125d0"/>
        <function-ref name="isOwner" scoped="" ref="0xf71126b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xf7115370" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xf7115370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xf7115548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf7115010" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf7115010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf71151e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xf71034d0" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xf71034d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xf71036a8"/>
        <function-ref name="sleep" scoped="" ref="0xf7113b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xf7103868"/>
        <function-ref name="dataReady" scoped="" ref="0xf7113bf0"/>
        <function-ref name="initMaster" scoped="" ref="0xf7103a28"/>
        <function-ref name="setMasterBit" scoped="" ref="0xf7103b08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xf7103be8"/>
        <function-ref name="read" scoped="" ref="0xf7103cc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xf7103da8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xf7103e88"/>
        <function-ref name="setClock" scoped="" ref="0xf7113010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xf71130f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xf71131d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xf7113330"/>
        <function-ref name="setDataOrder" scoped="" ref="0xf7113410"/>
        <function-ref name="write" scoped="" ref="0xf71134f0"/>
        <function-ref name="enableSpi" scoped="" ref="0xf71135d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xf71136b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xf7113790"/>
        <function-ref name="getClock" scoped="" ref="0xf7113870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xf7113950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xf7103788"/>
        <function-ref name="setClockPhase" scoped="" ref="0xf7103948"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xf7113a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xf71156f8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xf71156f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xf71158d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xf71159b0"/>
        <function-ref name="splitRead" scoped="" ref="0xf7115a90"/>
        <function-ref name="write" scoped="" ref="0xf7115b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf7114488" loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf7114488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7114660"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7114740"/>
        <function-ref name="request" scoped="" ref="0xf7114820"/>
        <function-ref name="granted" scoped="" ref="0xf7114900"/>
        <function-ref name="isOwner" scoped="" ref="0xf71149e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xf71007b8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf71007b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf7100990"/>
        <function-ref name="userId" scoped="" ref="0xf7100a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xf7100c38" loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xf7100c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf7100e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xf7116e40" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xf7116e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xf70d4050"/>
        <function-ref name="sleep" scoped="" ref="0xf70d3470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xf70d4210"/>
        <function-ref name="dataReady" scoped="" ref="0xf70d3550"/>
        <function-ref name="initMaster" scoped="" ref="0xf70d43d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xf70d44b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xf70d4590"/>
        <function-ref name="read" scoped="" ref="0xf70d4670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xf70d4750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xf70d4830"/>
        <function-ref name="setClock" scoped="" ref="0xf70d4910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xf70d49f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xf70d4ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xf70d4c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xf70d4d10"/>
        <function-ref name="write" scoped="" ref="0xf70d4df0"/>
        <function-ref name="enableSpi" scoped="" ref="0xf70d4ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xf70d3010"/>
        <function-ref name="getClockPhase" scoped="" ref="0xf70d30f0"/>
        <function-ref name="getClock" scoped="" ref="0xf70d31d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xf70d32b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xf70d4130"/>
        <function-ref name="setClockPhase" scoped="" ref="0xf70d42f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xf70d3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xf70cde88" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xf70cde88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf70cb070"/>
        <function-ref name="isInput" scoped="" ref="0xf70cb150"/>
        <function-ref name="toggle" scoped="" ref="0xf70cb230"/>
        <function-ref name="isOutput" scoped="" ref="0xf70cb310"/>
        <function-ref name="get" scoped="" ref="0xf70cb3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf70cb4d0"/>
        <function-ref name="set" scoped="" ref="0xf70cb5b0"/>
        <function-ref name="clr" scoped="" ref="0xf70cb690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xf70ce9e8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xf70ce9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf70cebc0"/>
        <function-ref name="isInput" scoped="" ref="0xf70ceca0"/>
        <function-ref name="toggle" scoped="" ref="0xf70ced80"/>
        <function-ref name="isOutput" scoped="" ref="0xf70cee60"/>
        <function-ref name="get" scoped="" ref="0xf70cd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf70cd0f0"/>
        <function-ref name="set" scoped="" ref="0xf70cd1d0"/>
        <function-ref name="clr" scoped="" ref="0xf70cd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xf70ce010" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xf70ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf70ce1e8"/>
        <function-ref name="isInput" scoped="" ref="0xf70ce2c8"/>
        <function-ref name="toggle" scoped="" ref="0xf70ce3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xf70ce488"/>
        <function-ref name="get" scoped="" ref="0xf70ce568"/>
        <function-ref name="makeOutput" scoped="" ref="0xf70ce648"/>
        <function-ref name="set" scoped="" ref="0xf70ce728"/>
        <function-ref name="clr" scoped="" ref="0xf70ce808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xf70ccac0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xf70ccac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf70ccc98"/>
        <function-ref name="stop" scoped="" ref="0xf70ccd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xf70cb898" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xf70cb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xf70cba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xf70d01c8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xf70d01c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xf70d03a0"/>
        <function-ref name="sleep" scoped="" ref="0xf70cf7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xf70d0560"/>
        <function-ref name="dataReady" scoped="" ref="0xf70cf8d0"/>
        <function-ref name="initMaster" scoped="" ref="0xf70d0720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xf70d0800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xf70d08e0"/>
        <function-ref name="read" scoped="" ref="0xf70d09c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xf70d0aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xf70d0b80"/>
        <function-ref name="setClock" scoped="" ref="0xf70d0c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xf70d0d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xf70d0e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xf70cf010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xf70cf0f0"/>
        <function-ref name="write" scoped="" ref="0xf70cf1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xf70cf2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xf70cf390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xf70cf470"/>
        <function-ref name="getClock" scoped="" ref="0xf70cf550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xf70cf630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xf70d0480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xf70d0640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xf70cf710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xf70cd4a0" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xf70cd4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf70cd678"/>
        <function-ref name="isInput" scoped="" ref="0xf70cd758"/>
        <function-ref name="toggle" scoped="" ref="0xf70cd838"/>
        <function-ref name="isOutput" scoped="" ref="0xf70cd918"/>
        <function-ref name="get" scoped="" ref="0xf70cd9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf70cdad8"/>
        <function-ref name="set" scoped="" ref="0xf70cdbb8"/>
        <function-ref name="clr" scoped="" ref="0xf70cdc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf706d490" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf706d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf706d678"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf706d758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf706dd48" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf706dd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf706c010"/>
        <function-ref name="configure" scoped="" ref="0xf706c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf70a1d40" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf70a1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf70a1f28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf706d018"/>
        <function-ref name="request" scoped="" ref="0xf706d0f8"/>
        <function-ref name="granted" scoped="" ref="0xf706d1d8"/>
        <function-ref name="isOwner" scoped="" ref="0xf706d2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf706d898" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf706d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf706da70"/>
        <function-ref name="userId" scoped="" ref="0xf706db50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6978010" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6978010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf69781e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xf6978348" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xf6978348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf6978520"/>
        <function-ref name="isEmpty" scoped="" ref="0xf6978600"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf69786e0"/>
        <function-ref name="dequeue" scoped="" ref="0xf69787c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xf6976a90" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xf6976a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xf6976c78"/>
        <function-ref name="immediateRequested" scoped="" ref="0xf6976d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xf69753a8" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xf69753a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xf6975590"/>
        <function-ref name="configure" scoped="" ref="0xf6975670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xf69757d0" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xf69757d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf69759a8"/>
        <function-ref name="isEmpty" scoped="" ref="0xf6975a88"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf6975b68"/>
        <function-ref name="dequeue" scoped="" ref="0xf6975c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6976350" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6976350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6976538"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6976618"/>
        <function-ref name="request" scoped="" ref="0xf69766f8"/>
        <function-ref name="granted" scoped="" ref="0xf69767d8"/>
        <function-ref name="isOwner" scoped="" ref="0xf69768b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xf6976e98" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xf6976e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xf69750c0"/>
        <function-ref name="userId" scoped="" ref="0xf69751a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xf6975dc8" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xf6975dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6974010"/>
        <function-ref name="runTask" scoped="" ref="0xf69740f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xf7066488" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xf7066488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7066660"/>
        <function-ref name="isInput" scoped="" ref="0xf7066740"/>
        <function-ref name="toggle" scoped="" ref="0xf7066820"/>
        <function-ref name="isOutput" scoped="" ref="0xf7066900"/>
        <function-ref name="get" scoped="" ref="0xf70669e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7066ac0"/>
        <function-ref name="set" scoped="" ref="0xf7066ba0"/>
        <function-ref name="clr" scoped="" ref="0xf7066c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf7069570" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf7069570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7069748"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7069828"/>
        <function-ref name="request" scoped="" ref="0xf7069908"/>
        <function-ref name="granted" scoped="" ref="0xf70699e8"/>
        <function-ref name="isOwner" scoped="" ref="0xf7069ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0xf7069d30" loc="44:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0xf7069d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf7069f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf7066010"/>
        <function-ref name="request" scoped="" ref="0xf70660f0"/>
        <function-ref name="granted" scoped="" ref="0xf70661d0"/>
        <function-ref name="isOwner" scoped="" ref="0xf70662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xf705fa88" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf705fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf705fc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf705fd40"/>
        <function-ref name="led1On" scoped="" ref="0xf705fe20"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf705ff00"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf705c010"/>
        <function-ref name="get" scoped="" ref="0xf705c0f0"/>
        <function-ref name="led1Off" scoped="" ref="0xf705c1d0"/>
        <function-ref name="led2Off" scoped="" ref="0xf705c550"/>
        <function-ref name="set" scoped="" ref="0xf705c2b0"/>
        <function-ref name="led0On" scoped="" ref="0xf705c390"/>
        <function-ref name="led2On" scoped="" ref="0xf705c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xf7059e48" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xf7059e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7058050"/>
        <function-ref name="isInput" scoped="" ref="0xf7058130"/>
        <function-ref name="toggle" scoped="" ref="0xf7058210"/>
        <function-ref name="isOutput" scoped="" ref="0xf70582f0"/>
        <function-ref name="get" scoped="" ref="0xf70583d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf70584b0"/>
        <function-ref name="set" scoped="" ref="0xf7058590"/>
        <function-ref name="clr" scoped="" ref="0xf7058670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf705cdd0" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf705cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf7059010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xf7058860" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xf7058860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7058a38"/>
        <function-ref name="isInput" scoped="" ref="0xf7058b18"/>
        <function-ref name="toggle" scoped="" ref="0xf7058bf8"/>
        <function-ref name="isOutput" scoped="" ref="0xf7058cd8"/>
        <function-ref name="get" scoped="" ref="0xf7058db8"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7058e98"/>
        <function-ref name="set" scoped="" ref="0xf7057010"/>
        <function-ref name="clr" scoped="" ref="0xf70570f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xf7059180" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf7059180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf7059358"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf7059438"/>
        <function-ref name="led1On" scoped="" ref="0xf7059518"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf70595f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf70596d8"/>
        <function-ref name="get" scoped="" ref="0xf70597b8"/>
        <function-ref name="led1Off" scoped="" ref="0xf7059898"/>
        <function-ref name="led2Off" scoped="" ref="0xf7059c18"/>
        <function-ref name="set" scoped="" ref="0xf7059978"/>
        <function-ref name="led0On" scoped="" ref="0xf7059a58"/>
        <function-ref name="led2On" scoped="" ref="0xf7059b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xf70572e0" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xf70572e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf70574b8"/>
        <function-ref name="isInput" scoped="" ref="0xf7057598"/>
        <function-ref name="toggle" scoped="" ref="0xf7057678"/>
        <function-ref name="isOutput" scoped="" ref="0xf7057758"/>
        <function-ref name="get" scoped="" ref="0xf7057838"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7057918"/>
        <function-ref name="set" scoped="" ref="0xf70579f8"/>
        <function-ref name="clr" scoped="" ref="0xf7057ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xf70478e8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xf70478e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7047ac0"/>
        <function-ref name="isInput" scoped="" ref="0xf7047ba0"/>
        <function-ref name="toggle" scoped="" ref="0xf7047c80"/>
        <function-ref name="isOutput" scoped="" ref="0xf7047d60"/>
        <function-ref name="get" scoped="" ref="0xf7047e40"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7047f20"/>
        <function-ref name="set" scoped="" ref="0xf7046018"/>
        <function-ref name="clr" scoped="" ref="0xf70460f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xf7046308" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xf7046308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf70464e0"/>
        <function-ref name="isInput" scoped="" ref="0xf70465c0"/>
        <function-ref name="toggle" scoped="" ref="0xf70466a0"/>
        <function-ref name="isOutput" scoped="" ref="0xf7046780"/>
        <function-ref name="get" scoped="" ref="0xf7046860"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7046940"/>
        <function-ref name="set" scoped="" ref="0xf7046a20"/>
        <function-ref name="clr" scoped="" ref="0xf7046b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xf70456e0" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf70456e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf70458b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xf7046d10" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xf7046d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf7046ee8"/>
        <function-ref name="isInput" scoped="" ref="0xf7045010"/>
        <function-ref name="toggle" scoped="" ref="0xf70450f0"/>
        <function-ref name="isOutput" scoped="" ref="0xf70451d0"/>
        <function-ref name="get" scoped="" ref="0xf70452b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf7045390"/>
        <function-ref name="set" scoped="" ref="0xf7045470"/>
        <function-ref name="clr" scoped="" ref="0xf7045550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xf7018880" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xf7018880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7018b58"/>
        <function-ref name="write" scoped="" ref="0xf7018c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xf701ed38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xf701ed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701ef10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xf701be50" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xf701be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7019050"/>
        <function-ref name="write" scoped="" ref="0xf7019130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xf70176a8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xf70176a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7017880"/>
        <function-ref name="write" scoped="" ref="0xf7017960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xf7017ae0" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xf7017ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7017cb8"/>
        <function-ref name="write" scoped="" ref="0xf7017d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xf7011cb8" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xf7011cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7011e90"/>
        <function-ref name="write" scoped="" ref="0xf7010010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xf7012b20" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xf7012b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7012cf8"/>
        <function-ref name="write" scoped="" ref="0xf7012dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xf701d760" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xf701d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701d938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xf70122b0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf70122b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7012488"/>
        <function-ref name="write" scoped="" ref="0xf7012568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xf70196e8" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xf70196e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70198c0"/>
        <function-ref name="write" scoped="" ref="0xf70199a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xf7018010" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xf7018010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70181e8"/>
        <function-ref name="write" scoped="" ref="0xf70182c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xf7015468" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xf7015468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7015640"/>
        <function-ref name="write" scoped="" ref="0xf7015720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xf7017f18" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xf7017f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7016108"/>
        <function-ref name="write" scoped="" ref="0xf70161e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xf701e170" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xf701e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xf701e348"/>
        <function-ref name="abortRelease" scoped="" ref="0xf701e428"/>
        <function-ref name="attemptRelease" scoped="" ref="0xf701e508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xf701c4e8" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xf701c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xf701c840" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xf701c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701ca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xf701cc18" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xf701cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xf70126e8" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf70126e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70128c0"/>
        <function-ref name="write" scoped="" ref="0xf70129a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xf701de10" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xf701de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xf7019b20" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xf7019b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7019cf8"/>
        <function-ref name="write" scoped="" ref="0xf7019dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xf70192b0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xf70192b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7019488"/>
        <function-ref name="write" scoped="" ref="0xf7019568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xf701e9e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xf701e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701ebb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xf7011880" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xf7011880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7011a58"/>
        <function-ref name="write" scoped="" ref="0xf7011b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xf7011010" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xf7011010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70111e8"/>
        <function-ref name="write" scoped="" ref="0xf70112c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xf70158a0" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xf70158a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7015a78"/>
        <function-ref name="write" scoped="" ref="0xf7015b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xf7014e38" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xf7014e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7012050"/>
        <function-ref name="write" scoped="" ref="0xf7012130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xf70167a0" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xf70167a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7016978"/>
        <function-ref name="write" scoped="" ref="0xf7016a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xf7010190" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xf7010190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf7010568"/>
        <function-ref name="writeDone" scoped="" ref="0xf7010648"/>
        <function-ref name="write" scoped="" ref="0xf7010728"/>
        <function-ref name="beginRead" scoped="" ref="0xf7010808"/>
        <function-ref name="readDone" scoped="" ref="0xf70108e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xf701e688" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xf701e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701e860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xf701ba18" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xf701ba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf701bbf0"/>
        <function-ref name="write" scoped="" ref="0xf701bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xf7018448" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xf7018448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7018620"/>
        <function-ref name="write" scoped="" ref="0xf7018700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xf7016368" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xf7016368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7016540"/>
        <function-ref name="write" scoped="" ref="0xf7016620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xf7018db8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xf7018db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7017010"/>
        <function-ref name="write" scoped="" ref="0xf70170f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xf701d0b0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xf701d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701d288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xf7017270" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xf7017270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7017448"/>
        <function-ref name="write" scoped="" ref="0xf7017528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf701f9e0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf701f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf701fbb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf701fc98"/>
        <function-ref name="request" scoped="" ref="0xf701fd78"/>
        <function-ref name="granted" scoped="" ref="0xf701fe58"/>
        <function-ref name="isOwner" scoped="" ref="0xf701e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xf701b010" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xf701b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xf701b6c0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xf701b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xf7014a00" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xf7014a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7014bd8"/>
        <function-ref name="write" scoped="" ref="0xf7014cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xf70145c8" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xf70145c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70147a0"/>
        <function-ref name="write" scoped="" ref="0xf7014880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xf701c190" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xf701c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xf7014190" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf7014190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7014368"/>
        <function-ref name="write" scoped="" ref="0xf7014448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xf7011448" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xf7011448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7011620"/>
        <function-ref name="write" scoped="" ref="0xf7011700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xf7015cd8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xf7015cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7015eb0"/>
        <function-ref name="write" scoped="" ref="0xf7014010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xf701d408" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xf701d408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xf7015030" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xf7015030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7015208"/>
        <function-ref name="write" scoped="" ref="0xf70152e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xf701dab8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xf701dab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xf7016bd8" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xf7016bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7016db0"/>
        <function-ref name="write" scoped="" ref="0xf7016e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xf701b368" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xf701b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf701b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xf7010a68" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xf7010a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf7010c40"/>
        <function-ref name="writeDone" scoped="" ref="0xf7010d20"/>
        <function-ref name="write" scoped="" ref="0xf7010e00"/>
        <function-ref name="beginRead" scoped="" ref="0xf7010ee0"/>
        <function-ref name="readDone" scoped="" ref="0xf700f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xf7006e38" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xf7006e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7005208"/>
        <function-ref name="write" scoped="" ref="0xf70052e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xf700b368" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xf700b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf700b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xf70074b8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xf70074b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7007690"/>
        <function-ref name="write" scoped="" ref="0xf7007770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xf7005cd8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xf7005cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7005eb0"/>
        <function-ref name="write" scoped="" ref="0xf7003010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xf7003190" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xf7003190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7003368"/>
        <function-ref name="write" scoped="" ref="0xf7003448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xf6ffe448" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xf6ffe448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6ffe620"/>
        <function-ref name="write" scoped="" ref="0xf6ffe700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xf6fff2b0" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xf6fff2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fff488"/>
        <function-ref name="write" scoped="" ref="0xf6fff568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xf700bd70" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xf700bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7009010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xf7000a00" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf7000a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7000bd8"/>
        <function-ref name="write" scoped="" ref="0xf7000cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xf7007d28" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xf7007d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7007f00"/>
        <function-ref name="write" scoped="" ref="0xf7006010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xf70065c8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xf70065c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70067a0"/>
        <function-ref name="write" scoped="" ref="0xf7006880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xf7002b20" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xf7002b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7002cf8"/>
        <function-ref name="write" scoped="" ref="0xf7002dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xf70035c8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xf70035c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70037a0"/>
        <function-ref name="write" scoped="" ref="0xf7003880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xf700c758" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xf700c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xf700c930"/>
        <function-ref name="abortRelease" scoped="" ref="0xf700ca10"/>
        <function-ref name="attemptRelease" scoped="" ref="0xf700caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xf7009b98" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xf7009b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7009d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xf7009ef0" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xf7009ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7008188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xf7008308" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xf7008308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf70084e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xf7000e38" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf7000e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fff050"/>
        <function-ref name="write" scoped="" ref="0xf6fff130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xf70094e8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xf70094e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf70096c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xf7006190" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xf7006190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7006368"/>
        <function-ref name="write" scoped="" ref="0xf7006448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xf70078f0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xf70078f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7007ac8"/>
        <function-ref name="write" scoped="" ref="0xf7007ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xf700b010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xf700b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf700b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xf6ffe010" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xf6ffe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6ffe1e8"/>
        <function-ref name="write" scoped="" ref="0xf6ffe2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xf6fff6e8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xf6fff6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fff8c0"/>
        <function-ref name="write" scoped="" ref="0xf6fff9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xf7001010" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xf7001010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70011e8"/>
        <function-ref name="write" scoped="" ref="0xf70012c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xf70005c8" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xf70005c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70007a0"/>
        <function-ref name="write" scoped="" ref="0xf7000880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xf7003e38" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xf7003e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7002050"/>
        <function-ref name="write" scoped="" ref="0xf7002130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xf6ffe880" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xf6ffe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf6ffec58"/>
        <function-ref name="writeDone" scoped="" ref="0xf6ffed38"/>
        <function-ref name="write" scoped="" ref="0xf6ffee18"/>
        <function-ref name="beginRead" scoped="" ref="0xf6ffeef8"/>
        <function-ref name="readDone" scoped="" ref="0xf6ffc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xf700cc70" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xf700cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf700ce48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xf7007080" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xf7007080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7007258"/>
        <function-ref name="write" scoped="" ref="0xf7007338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xf7006a00" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xf7006a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7006bd8"/>
        <function-ref name="write" scoped="" ref="0xf7006cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xf7003a00" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xf7003a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7003bd8"/>
        <function-ref name="write" scoped="" ref="0xf7003cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xf7005468" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xf7005468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7005640"/>
        <function-ref name="write" scoped="" ref="0xf7005720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xf700b6c0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xf700b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf700b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xf70058a0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xf70058a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7005a78"/>
        <function-ref name="write" scoped="" ref="0xf7005b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf700c0a0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf700c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf700c278"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf700c358"/>
        <function-ref name="request" scoped="" ref="0xf700c438"/>
        <function-ref name="granted" scoped="" ref="0xf700c518"/>
        <function-ref name="isOwner" scoped="" ref="0xf700c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xf7008660" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xf7008660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7008838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xf7008d10" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xf7008d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7008ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xf7000190" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xf7000190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7000368"/>
        <function-ref name="write" scoped="" ref="0xf7000448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xf7001cb8" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xf7001cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7001e90"/>
        <function-ref name="write" scoped="" ref="0xf7000010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xf7009840" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xf7009840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7009a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xf7001880" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf7001880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7001a58"/>
        <function-ref name="write" scoped="" ref="0xf7001b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xf6fffb20" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xf6fffb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fffcf8"/>
        <function-ref name="write" scoped="" ref="0xf6fffdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xf7001448" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xf7001448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7001620"/>
        <function-ref name="write" scoped="" ref="0xf7001700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xf700ba18" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xf700ba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf700bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xf70026e8" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xf70026e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf70028c0"/>
        <function-ref name="write" scoped="" ref="0xf70029a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xf7009190" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xf7009190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7009368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xf70022b0" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xf70022b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf7002488"/>
        <function-ref name="write" scoped="" ref="0xf7002568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xf70089b8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xf70089b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf7008b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xf6ffc190" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xf6ffc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf6ffc368"/>
        <function-ref name="writeDone" scoped="" ref="0xf6ffc448"/>
        <function-ref name="write" scoped="" ref="0xf6ffc528"/>
        <function-ref name="beginRead" scoped="" ref="0xf6ffc608"/>
        <function-ref name="readDone" scoped="" ref="0xf6ffc6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xf6ff9968" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf6ff9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xf6ff9b40"/>
        <function-ref name="changed" scoped="" ref="0xf6ff9c20"/>
        <function-ref name="amGroup" scoped="" ref="0xf6ff9d00"/>
        <function-ref name="setAddress" scoped="" ref="0xf6ff9de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xf6fe8390" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xf6fe8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xf6fe8568"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xf6fe8648"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xf6fe8728"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xf6fe8808"/>
        <function-ref name="setCca" scoped="" ref="0xf6fe88e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xf6fe89c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xf6fe5458" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0xf6fe5458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xf6fe5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0xf6febc50" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0xf6febc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6febe28"/>
        <function-ref name="cancel" scoped="" ref="0xf6febf08"/>
        <function-ref name="modify" scoped="" ref="0xf6fe8010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fe80f0"/>
        <function-ref name="resend" scoped="" ref="0xf6fe81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xf6feb7c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xf6feb7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6feb9a0"/>
        <function-ref name="stop" scoped="" ref="0xf6feba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xf6fe58c0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0xf6fe58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xf6fe5a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xf6fd2010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xf6fd2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xf6fd21e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xf6fd22c8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xf6fd23a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xf6fd2488"/>
        <function-ref name="setCca" scoped="" ref="0xf6fd2568"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xf6fd2648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xf6fcfce0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6fcfce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6fcd828"/>
        <function-ref name="clear" scoped="" ref="0xf6fcdbd8"/>
        <function-ref name="isValid" scoped="" ref="0xf6fcd478"/>
        <function-ref name="set" scoped="" ref="0xf6fcc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xf6fc2970" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xf6fc2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fc2b48"/>
        <function-ref name="write" scoped="" ref="0xf6fc2c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xf6fc2e38" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xf6fc2e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fc0050"/>
        <function-ref name="write" scoped="" ref="0xf6fc0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xf6fd2908" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0xf6fd2908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xf6fd2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0xf6fc30d8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xf6fc30d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6fc32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0xf6fcb348" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0xf6fcb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xf6fcb520"/>
        <function-ref name="disable" scoped="" ref="0xf6fcb600"/>
        <function-ref name="captured" scoped="" ref="0xf6fcb6e0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xf6fcb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0xf6fd1400" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0xf6fd1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6fd08b8"/>
        <function-ref name="fired" scoped="" ref="0xf6fd0088"/>
        <function-ref name="startAt" scoped="" ref="0xf6fd0578"/>
        <function-ref name="isRunning" scoped="" ref="0xf6fd0300"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6fd0b30"/>
        <function-ref name="start" scoped="" ref="0xf6fd1b50"/>
        <function-ref name="stop" scoped="" ref="0xf6fd1df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xf6fd0de0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf6fd0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf6fcf010"/>
        <function-ref name="setNetwork" scoped="" ref="0xf6fcf0f0"/>
        <function-ref name="getRssi" scoped="" ref="0xf6fcf1d0"/>
        <function-ref name="getNetwork" scoped="" ref="0xf6fcf2b0"/>
        <function-ref name="getPower" scoped="" ref="0xf6fcf390"/>
        <function-ref name="getLqi" scoped="" ref="0xf6fcf470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0xf6fc5e58" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf6fc5e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fc4050"/>
        <function-ref name="write" scoped="" ref="0xf6fc4130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xf6fc4380" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xf6fc4380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fc4558"/>
        <function-ref name="write" scoped="" ref="0xf6fc4638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0xf6fbc5e8" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xf6fbc5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6fbc7c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xf6fbc8a0"/>
        <function-ref name="sfd" scoped="" ref="0xf6fbc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6fd38a8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6fd38a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6fd3a80"/>
        <function-ref name="cancel" scoped="" ref="0xf6fd3b60"/>
        <function-ref name="modify" scoped="" ref="0xf6fd3c40"/>
        <function-ref name="sendDone" scoped="" ref="0xf6fd3d20"/>
        <function-ref name="resend" scoped="" ref="0xf6fd3e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0xf6fc50f8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xf6fc50f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xf6fc52d0"/>
        <function-ref name="abortRelease" scoped="" ref="0xf6fc53b0"/>
        <function-ref name="attemptRelease" scoped="" ref="0xf6fc5490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0xf6fc3508" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xf6fc3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6fc36e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xf6fca4b0" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xf6fca4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6fca688"/>
        <function-ref name="isInput" scoped="" ref="0xf6fca768"/>
        <function-ref name="toggle" scoped="" ref="0xf6fca848"/>
        <function-ref name="isOutput" scoped="" ref="0xf6fca928"/>
        <function-ref name="get" scoped="" ref="0xf6fcaa08"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6fcaae8"/>
        <function-ref name="set" scoped="" ref="0xf6fcabc8"/>
        <function-ref name="clr" scoped="" ref="0xf6fcaca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6fd3010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6fd3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6fd31e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xf6fcf678" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6fcf678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0xf6fcf850"/>
        <function-ref name="getMetadata" scoped="" ref="0xf6fcf930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xf6fc6bf0" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6fc6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6fc6dc8"/>
        <function-ref name="isSet" scoped="" ref="0xf6fc6ea8"/>
        <function-ref name="cancel" scoped="" ref="0xf6fcb010"/>
        <function-ref name="set" scoped="" ref="0xf6fcb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xf6fc3948" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xf6fc3948"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fc3c20"/>
        <function-ref name="write" scoped="" ref="0xf6fc3d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xf6fc9928" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xf6fc9928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6fc9b00"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6fc9be0"/>
        <function-ref name="request" scoped="" ref="0xf6fc9cc0"/>
        <function-ref name="granted" scoped="" ref="0xf6fc9da0"/>
        <function-ref name="isOwner" scoped="" ref="0xf6fc9e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0xf6fcb9c0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xf6fcb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6fcbc18"/>
        <function-ref name="isInput" scoped="" ref="0xf6fcbcf8"/>
        <function-ref name="toggle" scoped="" ref="0xf6fcbdd8"/>
        <function-ref name="isOutput" scoped="" ref="0xf6fcbeb8"/>
        <function-ref name="get" scoped="" ref="0xf6fca010"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6fca0f0"/>
        <function-ref name="set" scoped="" ref="0xf6fca1d0"/>
        <function-ref name="clr" scoped="" ref="0xf6fca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xf6fc0340" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xf6fc0340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fc0518"/>
        <function-ref name="write" scoped="" ref="0xf6fc05f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0xf6fc0820" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xf6fc0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fc09f8"/>
        <function-ref name="write" scoped="" ref="0xf6fc0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xf6fc4868" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xf6fc4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6fc4a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0xf6fcaea8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0xf6fcaea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6fc90c0"/>
        <function-ref name="isInput" scoped="" ref="0xf6fc91a0"/>
        <function-ref name="toggle" scoped="" ref="0xf6fc9280"/>
        <function-ref name="isOutput" scoped="" ref="0xf6fc9360"/>
        <function-ref name="get" scoped="" ref="0xf6fc9440"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6fc9520"/>
        <function-ref name="set" scoped="" ref="0xf6fc9600"/>
        <function-ref name="clr" scoped="" ref="0xf6fc96e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6fbcb10" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6fbcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6fbcce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6fbcdc8"/>
        <function-ref name="led1On" scoped="" ref="0xf6fbcea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6fbf010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6fbf0f0"/>
        <function-ref name="get" scoped="" ref="0xf6fbf1d0"/>
        <function-ref name="led1Off" scoped="" ref="0xf6fbf2b0"/>
        <function-ref name="led2Off" scoped="" ref="0xf6fbf630"/>
        <function-ref name="set" scoped="" ref="0xf6fbf390"/>
        <function-ref name="led0On" scoped="" ref="0xf6fbf470"/>
        <function-ref name="led2On" scoped="" ref="0xf6fbf550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xf6fc2450" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xf6fc2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6fc2628"/>
        <function-ref name="write" scoped="" ref="0xf6fc2708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xf6fd33b0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xf6fd33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6fd3588"/>
        <function-ref name="stop" scoped="" ref="0xf6fd3668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0xf6fc56b8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xf6fc56b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf6fc5890"/>
        <function-ref name="writeDone" scoped="" ref="0xf6fc5970"/>
        <function-ref name="write" scoped="" ref="0xf6fc5a50"/>
        <function-ref name="beginRead" scoped="" ref="0xf6fc5b30"/>
        <function-ref name="readDone" scoped="" ref="0xf6fc5c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0xf6fc4c78" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xf6fc4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6fc4e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0xf6fc2010" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xf6fc2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6fc21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xf6fd2d90" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0xf6fd2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xf6fd1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xf6f65190" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xf6f65190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f65468"/>
        <function-ref name="write" scoped="" ref="0xf6f65548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xf6f6b598" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xf6f6b598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f6b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xf6f677a0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xf6f677a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f67978"/>
        <function-ref name="write" scoped="" ref="0xf6f67a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xf6f64010" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xf6f64010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f641e8"/>
        <function-ref name="write" scoped="" ref="0xf6f642c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xf6f64448" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xf6f64448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f64620"/>
        <function-ref name="write" scoped="" ref="0xf6f64700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xf6f5e6e8" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xf6f5e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f5e8c0"/>
        <function-ref name="write" scoped="" ref="0xf6f5e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xf6f5f5c8" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xf6f5f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f5f7a0"/>
        <function-ref name="write" scoped="" ref="0xf6f5f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xf6f6a010" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xf6f6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f6a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xf6f60cb8" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf6f60cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f60e90"/>
        <function-ref name="write" scoped="" ref="0xf6f5f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xf6f66030" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xf6f66030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f66208"/>
        <function-ref name="write" scoped="" ref="0xf6f662e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xf6f668a0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xf6f668a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f66a78"/>
        <function-ref name="write" scoped="" ref="0xf6f66b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xf6f62e38" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xf6f62e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f61050"/>
        <function-ref name="write" scoped="" ref="0xf6f61130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xf6f64880" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xf6f64880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f64a58"/>
        <function-ref name="write" scoped="" ref="0xf6f64b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xf6f6c988" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xf6f6c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xf6f6cb60"/>
        <function-ref name="abortRelease" scoped="" ref="0xf6f6cc40"/>
        <function-ref name="attemptRelease" scoped="" ref="0xf6f6cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xf6f6ad70" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xf6f6ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f68010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xf6f68190" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xf6f68190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f683e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xf6f68568" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xf6f68568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f68740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xf6f5f190" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf6f5f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f5f368"/>
        <function-ref name="write" scoped="" ref="0xf6f5f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xf6f6a6c0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xf6f6a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f6a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xf6f66468" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xf6f66468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f66640"/>
        <function-ref name="write" scoped="" ref="0xf6f66720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xf6f67bd8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xf6f67bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f67db0"/>
        <function-ref name="write" scoped="" ref="0xf6f67e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xf6f6b240" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xf6f6b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f6b418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xf6f5e2b0" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xf6f5e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f5e488"/>
        <function-ref name="write" scoped="" ref="0xf6f5e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xf6f5fa00" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xf6f5fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f5fbd8"/>
        <function-ref name="write" scoped="" ref="0xf6f5fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xf6f612b0" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xf6f612b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f61488"/>
        <function-ref name="write" scoped="" ref="0xf6f61568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xf6f60880" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xf6f60880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f60a58"/>
        <function-ref name="write" scoped="" ref="0xf6f60b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xf6f62190" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xf6f62190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f62368"/>
        <function-ref name="write" scoped="" ref="0xf6f62448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xf6f5eb20" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xf6f5eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf6f5eef8"/>
        <function-ref name="writeDone" scoped="" ref="0xf6f5d010"/>
        <function-ref name="write" scoped="" ref="0xf6f5d0f0"/>
        <function-ref name="beginRead" scoped="" ref="0xf6f5d1d0"/>
        <function-ref name="readDone" scoped="" ref="0xf6f5d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xf6f6cea0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xf6f6cea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f6b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xf6f67368" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xf6f67368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f67540"/>
        <function-ref name="write" scoped="" ref="0xf6f67620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xf6f66cd8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xf6f66cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f66eb0"/>
        <function-ref name="write" scoped="" ref="0xf6f65010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xf6f64cb8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xf6f64cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f64e90"/>
        <function-ref name="write" scoped="" ref="0xf6f62010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xf6f656c8" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xf6f656c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f658a0"/>
        <function-ref name="write" scoped="" ref="0xf6f65980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xf6f6b8f0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xf6f6b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f6bac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xf6f65b00" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xf6f65b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f65cd8"/>
        <function-ref name="write" scoped="" ref="0xf6f65db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6f6c2d0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6f6c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6f6c4a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6f6c588"/>
        <function-ref name="request" scoped="" ref="0xf6f6c668"/>
        <function-ref name="granted" scoped="" ref="0xf6f6c748"/>
        <function-ref name="isOwner" scoped="" ref="0xf6f6c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xf6f688c0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xf6f688c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f68a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xf6f67010" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xf6f67010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f671e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xf6f60448" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xf6f60448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f60620"/>
        <function-ref name="write" scoped="" ref="0xf6f60700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xf6f60010" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xf6f60010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f601e8"/>
        <function-ref name="write" scoped="" ref="0xf6f602c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xf6f6aa18" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xf6f6aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f6abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xf6f61b20" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf6f61b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f61cf8"/>
        <function-ref name="write" scoped="" ref="0xf6f61dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xf6f5fe38" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xf6f5fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f5e050"/>
        <function-ref name="write" scoped="" ref="0xf6f5e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xf6f616e8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xf6f616e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f618c0"/>
        <function-ref name="write" scoped="" ref="0xf6f619a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xf6f6bc48" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xf6f6bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f6be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xf6f62a00" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xf6f62a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f62bd8"/>
        <function-ref name="write" scoped="" ref="0xf6f62cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xf6f6a368" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xf6f6a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f6a540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xf6f625c8" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xf6f625c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f627a0"/>
        <function-ref name="write" scoped="" ref="0xf6f62880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xf6f68c18" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xf6f68c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f68df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xf6f5d430" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xf6f5d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf6f5d608"/>
        <function-ref name="writeDone" scoped="" ref="0xf6f5d6e8"/>
        <function-ref name="write" scoped="" ref="0xf6f5d7c8"/>
        <function-ref name="beginRead" scoped="" ref="0xf6f5d8a8"/>
        <function-ref name="readDone" scoped="" ref="0xf6f5d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xf6f54688" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xf6f54688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f54860"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xf6f54940"/>
        <function-ref name="sfd" scoped="" ref="0xf6f54a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6f54bc8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6f54bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f54da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xf6f530c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0xf6f530c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xf6f532a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xf6f541e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xf6f541e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6f543c0"/>
        <function-ref name="stop" scoped="" ref="0xf6f544a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0xf6f4fdf0" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0xf6f4fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6f4e010"/>
        <function-ref name="isInput" scoped="" ref="0xf6f4e0f0"/>
        <function-ref name="toggle" scoped="" ref="0xf6f4e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6f4e2b0"/>
        <function-ref name="get" scoped="" ref="0xf6f4e390"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6f4e470"/>
        <function-ref name="set" scoped="" ref="0xf6f4e550"/>
        <function-ref name="clr" scoped="" ref="0xf6f4e630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xf6f4bf28" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xf6f4bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xf6f4a110"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xf6f4a1f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xf6f4a2d0"/>
        <function-ref name="syncDone" scoped="" ref="0xf6f4a3b0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xf6f4a490"/>
        <function-ref name="setShortAddr" scoped="" ref="0xf6f4a570"/>
        <function-ref name="setChannel" scoped="" ref="0xf6f4a650"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xf6f4a730"/>
        <function-ref name="setPanAddr" scoped="" ref="0xf6f4a810"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xf6f4a8f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0xf6f4a9d0"/>
        <function-ref name="sync" scoped="" ref="0xf6f4aab0"/>
        <function-ref name="getChannel" scoped="" ref="0xf6f4ab90"/>
        <function-ref name="getPanAddr" scoped="" ref="0xf6f4acf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0xf6f3d230" loc="148:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0xf6f3d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6f3d408"/>
        <function-ref name="runTask" scoped="" ref="0xf6f3d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xf6f490b0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xf6f490b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6f49bb0"/>
        <function-ref name="clear" scoped="" ref="0xf6f48010"/>
        <function-ref name="isValid" scoped="" ref="0xf6f49800"/>
        <function-ref name="set" scoped="" ref="0xf6f483c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0xf6f4e848" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0xf6f4e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6f4ea20"/>
        <function-ref name="isInput" scoped="" ref="0xf6f4eb00"/>
        <function-ref name="toggle" scoped="" ref="0xf6f4ebe0"/>
        <function-ref name="isOutput" scoped="" ref="0xf6f4ecc0"/>
        <function-ref name="get" scoped="" ref="0xf6f4eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6f4ee80"/>
        <function-ref name="set" scoped="" ref="0xf6f4d010"/>
        <function-ref name="clr" scoped="" ref="0xf6f4d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xf6f46278" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xf6f46278"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f46450"/>
        <function-ref name="write" scoped="" ref="0xf6f46530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xf6f46740" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xf6f46740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f46918"/>
        <function-ref name="write" scoped="" ref="0xf6f469f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0xf6f45128" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xf6f45128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f45300"/>
        <function-ref name="write" scoped="" ref="0xf6f453e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xf6f4b250" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf6f4b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf6f4b428"/>
        <function-ref name="setNetwork" scoped="" ref="0xf6f4b508"/>
        <function-ref name="getRssi" scoped="" ref="0xf6f4b5e8"/>
        <function-ref name="getNetwork" scoped="" ref="0xf6f4b6c8"/>
        <function-ref name="getPower" scoped="" ref="0xf6f4b7a8"/>
        <function-ref name="getLqi" scoped="" ref="0xf6f4b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xf6f505a0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xf6f505a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f50778"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xf6f50858"/>
        <function-ref name="sfd" scoped="" ref="0xf6f50938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0xf6f4c9c0" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xf6f4c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f4cb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xf6f4f3e8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xf6f4f3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xf6f4f5c0"/>
        <function-ref name="isInput" scoped="" ref="0xf6f4f6a0"/>
        <function-ref name="toggle" scoped="" ref="0xf6f4f780"/>
        <function-ref name="isOutput" scoped="" ref="0xf6f4f860"/>
        <function-ref name="get" scoped="" ref="0xf6f4f940"/>
        <function-ref name="makeOutput" scoped="" ref="0xf6f4fa20"/>
        <function-ref name="set" scoped="" ref="0xf6f4fb00"/>
        <function-ref name="clr" scoped="" ref="0xf6f4fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0xf6f45628" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf6f45628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f45800"/>
        <function-ref name="write" scoped="" ref="0xf6f458e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6f53d50" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6f53d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6f53f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xf6f4ba90" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f4ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0xf6f4bc68"/>
        <function-ref name="getMetadata" scoped="" ref="0xf6f4bd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6f50ae0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6f50ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6f50cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xf6f4da48" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xf6f4da48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6f4dc20"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6f4dd00"/>
        <function-ref name="request" scoped="" ref="0xf6f4dde0"/>
        <function-ref name="granted" scoped="" ref="0xf6f4dec0"/>
        <function-ref name="isOwner" scoped="" ref="0xf6f4c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xf6f46c08" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xf6f46c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f46de0"/>
        <function-ref name="write" scoped="" ref="0xf6f46ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0xf6f4c238" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xf6f4c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf6f4c410"/>
        <function-ref name="writeDone" scoped="" ref="0xf6f4c4f0"/>
        <function-ref name="write" scoped="" ref="0xf6f4c5d0"/>
        <function-ref name="beginRead" scoped="" ref="0xf6f4c6b0"/>
        <function-ref name="readDone" scoped="" ref="0xf6f4c790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xf6f45b10" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xf6f45b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f45de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xf6f4f010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0xf6f4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xf6f4f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6f44010" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6f44010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6f441e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6f442c8"/>
        <function-ref name="led1On" scoped="" ref="0xf6f443a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6f44488"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6f44568"/>
        <function-ref name="get" scoped="" ref="0xf6f44648"/>
        <function-ref name="led1Off" scoped="" ref="0xf6f44728"/>
        <function-ref name="led2Off" scoped="" ref="0xf6f44aa8"/>
        <function-ref name="set" scoped="" ref="0xf6f44808"/>
        <function-ref name="led0On" scoped="" ref="0xf6f448e8"/>
        <function-ref name="led2On" scoped="" ref="0xf6f449c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xf6f48cf8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xf6f48cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6f48ed0"/>
        <function-ref name="write" scoped="" ref="0xf6f46010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0xf6f488b8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xf6f488b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f48a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0xf6f4d388" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0xf6f4d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xf6f4d560"/>
        <function-ref name="disable" scoped="" ref="0xf6f4d640"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xf6f4d720"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xf6f4d800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0xf6f4cdf0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xf6f4cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6f4b070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xf6f50100" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xf6f50100"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xf6f502d8"/>
        <function-ref name="stop" scoped="" ref="0xf6f503b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xf6f09790" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf6f09790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xf6f09968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xf6f0c4a8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf6f0c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf6f0c680"/>
        <function-ref name="setNetwork" scoped="" ref="0xf6f0c760"/>
        <function-ref name="getRssi" scoped="" ref="0xf6f0c840"/>
        <function-ref name="getNetwork" scoped="" ref="0xf6f0c920"/>
        <function-ref name="getPower" scoped="" ref="0xf6f0ca00"/>
        <function-ref name="getLqi" scoped="" ref="0xf6f0cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xf6f09de8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xf6f09de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6f07920"/>
        <function-ref name="clear" scoped="" ref="0xf6f07cd0"/>
        <function-ref name="isValid" scoped="" ref="0xf6f07570"/>
        <function-ref name="set" scoped="" ref="0xf6f060a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xf6f092e0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6f092e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0xf6f094b8"/>
        <function-ref name="getMetadata" scoped="" ref="0xf6f09598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xf6f03010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6f03010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6f031e8"/>
        <function-ref name="isSet" scoped="" ref="0xf6f032c8"/>
        <function-ref name="cancel" scoped="" ref="0xf6f033a8"/>
        <function-ref name="set" scoped="" ref="0xf6f03488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf6f067e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6f067e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6f053c0"/>
        <function-ref name="clear" scoped="" ref="0xf6f05770"/>
        <function-ref name="isValid" scoped="" ref="0xf6f05010"/>
        <function-ref name="set" scoped="" ref="0xf6f05b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6f0cd50" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6f0cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6f0cf28"/>
        <function-ref name="noAck" scoped="" ref="0xf6f09018"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6f090f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xf6efe128" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xf6efe128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xf6efe300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xf6f03dd8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf6f03dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf6eff010"/>
        <function-ref name="setNetwork" scoped="" ref="0xf6eff0f0"/>
        <function-ref name="getRssi" scoped="" ref="0xf6eff1d0"/>
        <function-ref name="getNetwork" scoped="" ref="0xf6eff2b0"/>
        <function-ref name="getPower" scoped="" ref="0xf6eff390"/>
        <function-ref name="getLqi" scoped="" ref="0xf6eff470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xf6efaee8" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6efaee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6ef90e0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6ef91c0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6ef92a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6ef9380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6ef9460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xf6efe780" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xf6efe780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6efd2a0"/>
        <function-ref name="clear" scoped="" ref="0xf6efd650"/>
        <function-ref name="isValid" scoped="" ref="0xf6efeed0"/>
        <function-ref name="set" scoped="" ref="0xf6efda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xf6effc60" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6effc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0xf6effe38"/>
        <function-ref name="getMetadata" scoped="" ref="0xf6efff18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xf6efa8c0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xf6efa8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6efaa98"/>
        <function-ref name="isSet" scoped="" ref="0xf6efab78"/>
        <function-ref name="cancel" scoped="" ref="0xf6efac58"/>
        <function-ref name="set" scoped="" ref="0xf6efad38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0xf6ef6478" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0xf6ef6478"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ef6ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xf6ef6ed0" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xf6ef6ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ef8578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xf6efc178" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xf6efc178"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xf6efcc78"/>
        <function-ref name="clear" scoped="" ref="0xf6efa048"/>
        <function-ref name="isValid" scoped="" ref="0xf6efc8c8"/>
        <function-ref name="set" scoped="" ref="0xf6efa3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6eff6e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6eff6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6eff8b8"/>
        <function-ref name="noAck" scoped="" ref="0xf6eff998"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6effa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6ed23d0" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6ed23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ed2a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xf6ed2d68" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6ed2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f28e8"/>
            <typename><typedef-ref name="T32khz" ref="0xf75f2ab0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ed14e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6ed19d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6ed1760"/>
        <function-ref name="overflow" scoped="" ref="0xf6ed1c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xf6ec1f18" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xf6ec1f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6ec0a18"/>
        <function-ref name="fired" scoped="" ref="0xf6ec7cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6ec03d8"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6ec0180"/>
        <function-ref name="getdt" scoped="" ref="0xf6ec0ec8"/>
        <function-ref name="gett0" scoped="" ref="0xf6ec0c70"/>
        <function-ref name="isRunning" scoped="" ref="0xf6ec7f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6ec7558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6ec06f8"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6ec77d8"/>
        <function-ref name="stop" scoped="" ref="0xf6ec7a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6ebf258" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6ebf258"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6ebf8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6ecbde0" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6ecbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6ec8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xf6eb9ae0" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xf6eb9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6eb8308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6eb87f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6eb8580"/>
        <function-ref name="overflow" scoped="" ref="0xf6eb8a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6ebe8f8" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6ebe8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6ebead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xf6ebeec0" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xf6ebeec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6eb9388"/>
        <function-ref name="fired" scoped="" ref="0xf6ebab40"/>
        <function-ref name="startAt" scoped="" ref="0xf6eb9048"/>
        <function-ref name="isRunning" scoped="" ref="0xf6ebadb8"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6eb9600"/>
        <function-ref name="start" scoped="" ref="0xf6eba628"/>
        <function-ref name="stop" scoped="" ref="0xf6eba8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf6e7c778" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6e7c778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6e7bc38"/>
        <function-ref name="fired" scoped="" ref="0xf6e7b408"/>
        <function-ref name="startAt" scoped="" ref="0xf6e7b8f8"/>
        <function-ref name="isRunning" scoped="" ref="0xf6e7b680"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6e7beb0"/>
        <function-ref name="start" scoped="" ref="0xf6e7cec8"/>
        <function-ref name="stop" scoped="" ref="0xf6e7b190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6e7c340" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6e7c340"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xf76575d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xf76575d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6e7c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf6e7a208" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6e7a208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6e7a958"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6e7ae48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6e7abd0"/>
        <function-ref name="overflow" scoped="" ref="0xf6e780d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xf6906ec0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xf6906ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xf69050c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xf69051a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xf6905280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xf6905360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xf6905440"/>
        <function-ref name="setControl" scoped="" ref="0xf6905520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xf690b010" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf690b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf690a4e0"/>
        <function-ref name="fired" scoped="" ref="0xf690bc78"/>
        <function-ref name="startAt" scoped="" ref="0xf690a1a0"/>
        <function-ref name="isRunning" scoped="" ref="0xf690bef0"/>
        <function-ref name="getAlarm" scoped="" ref="0xf690a758"/>
        <function-ref name="start" scoped="" ref="0xf690b760"/>
        <function-ref name="stop" scoped="" ref="0xf690ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf690db78" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf690db78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf690dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xf690aa88" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf690aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6909200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf69096f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6909478"/>
        <function-ref name="overflow" scoped="" ref="0xf6909968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xf6902158" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xf6902158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xf6902330"/>
        <function-ref name="compareBusy" scoped="" ref="0xf6902410"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xf69024f0"/>
        <function-ref name="countBusy" scoped="" ref="0xf69025d0"/>
        <function-ref name="getAssr" scoped="" ref="0xf69026b0"/>
        <function-ref name="setAssr" scoped="" ref="0xf6902790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xf6905710" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xf6905710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xf6904c90"/>
        <function-ref name="fired" scoped="" ref="0xf69042b0"/>
        <function-ref name="get" scoped="" ref="0xf6905d58"/>
        <function-ref name="reset" scoped="" ref="0xf6904528"/>
        <function-ref name="isOn" scoped="" ref="0xf6904f08"/>
        <function-ref name="set" scoped="" ref="0xf6904010"/>
        <function-ref name="start" scoped="" ref="0xf69047a0"/>
        <function-ref name="stop" scoped="" ref="0xf6904a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xf6909c58" loc="30:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6909c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xf6906778"/>
        <function-ref name="test" scoped="" ref="0xf6906288"/>
        <function-ref name="get" scoped="" ref="0xf69082e8"/>
        <function-ref name="setScale" scoped="" ref="0xf69069f0"/>
        <function-ref name="getScale" scoped="" ref="0xf6906c90"/>
        <function-ref name="reset" scoped="" ref="0xf6908a78"/>
        <function-ref name="overflow" scoped="" ref="0xf6908800"/>
        <function-ref name="isOn" scoped="" ref="0xf6906500"/>
        <function-ref name="set" scoped="" ref="0xf6908560"/>
        <function-ref name="start" scoped="" ref="0xf6908cf0"/>
        <function-ref name="stop" scoped="" ref="0xf6906010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xf6e5e4d8" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xf6e5e4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6e5e6b0"/>
        <function-ref name="runTask" scoped="" ref="0xf6e5e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xf6e61a48" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xf6e61a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6e5e010"/>
        <function-ref name="fired" scoped="" ref="0xf6e5f718"/>
        <function-ref name="startAt" scoped="" ref="0xf6e5fc08"/>
        <function-ref name="isRunning" scoped="" ref="0xf6e5f990"/>
        <function-ref name="getAlarm" scoped="" ref="0xf6e5e288"/>
        <function-ref name="start" scoped="" ref="0xf6e5f200"/>
        <function-ref name="stop" scoped="" ref="0xf6e5f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6e77720" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6e77720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6e61248"/>
        <function-ref name="fired" scoped="" ref="0xf6e624e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6e62bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6e62998"/>
        <function-ref name="getdt" scoped="" ref="0xf6e616f8"/>
        <function-ref name="gett0" scoped="" ref="0xf6e614a0"/>
        <function-ref name="isRunning" scoped="" ref="0xf6e62740"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6e77d48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6e62f10"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6e62010"/>
        <function-ref name="stop" scoped="" ref="0xf6e62290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xf6e32bc8" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xf6e32bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6e32da0"/>
        <function-ref name="runTask" scoped="" ref="0xf6e32e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xf6e35968" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xf6e35968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6e324c8"/>
        <function-ref name="fired" scoped="" ref="0xf6e33768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6e33e70"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6e33c18"/>
        <function-ref name="getdt" scoped="" ref="0xf6e32978"/>
        <function-ref name="gett0" scoped="" ref="0xf6e32720"/>
        <function-ref name="isRunning" scoped="" ref="0xf6e339c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6e33010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6e321a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6e33290"/>
        <function-ref name="stop" scoped="" ref="0xf6e33510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6e5b600" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6e5b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6e351a8"/>
        <function-ref name="fired" scoped="" ref="0xf6e363d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6e36b10"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6e368a8"/>
        <function-ref name="getdt" scoped="" ref="0xf6e35678"/>
        <function-ref name="gett0" scoped="" ref="0xf6e35410"/>
        <function-ref name="isRunning" scoped="" ref="0xf6e36640"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6e5bc38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6e36e40"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6e5bec8"/>
        <function-ref name="stop" scoped="" ref="0xf6e36170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xf6e300f0" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xf6e300f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6e30738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xf6e30a88" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xf6e30a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xf6e2e200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xf6e2e6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xf6e2e478"/>
        <function-ref name="overflow" scoped="" ref="0xf6e2e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6e2cbe8" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6e2cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6e25730"/>
        <function-ref name="fired" scoped="" ref="0xf6e2b9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6e250f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6e2be60"/>
        <function-ref name="getdt" scoped="" ref="0xf6e25be0"/>
        <function-ref name="gett0" scoped="" ref="0xf6e25988"/>
        <function-ref name="isRunning" scoped="" ref="0xf6e2bc08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6e2b258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6e25410"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6e2b4d8"/>
        <function-ref name="stop" scoped="" ref="0xf6e2b758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xf6e27e18" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xf6e27e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6e23920"/>
        <function-ref name="fired" scoped="" ref="0xf6e24bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6e232e0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6e23088"/>
        <function-ref name="getdt" scoped="" ref="0xf6e23dd0"/>
        <function-ref name="gett0" scoped="" ref="0xf6e23b78"/>
        <function-ref name="isRunning" scoped="" ref="0xf6e24e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6e24468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6e23600"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6e246e8"/>
        <function-ref name="stop" scoped="" ref="0xf6e24968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xf6e185c8" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xf6e185c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e188a0"/>
        <function-ref name="write" scoped="" ref="0xf6e18980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xf6e1ea60" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xf6e1ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1ec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xf6e1bb68" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xf6e1bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e1bd40"/>
        <function-ref name="write" scoped="" ref="0xf6e1be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xf6e17448" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xf6e17448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e17620"/>
        <function-ref name="write" scoped="" ref="0xf6e17700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xf6e17880" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xf6e17880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e17a58"/>
        <function-ref name="write" scoped="" ref="0xf6e17b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xf6e11b20" loc="94:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xf6e11b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e11cf8"/>
        <function-ref name="write" scoped="" ref="0xf6e11dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xf6e12a00" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xf6e12a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e12bd8"/>
        <function-ref name="write" scoped="" ref="0xf6e12cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xf6e1d4e8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xf6e1d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xf6e12190" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xf6e12190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e12368"/>
        <function-ref name="write" scoped="" ref="0xf6e12448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xf6e19448" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xf6e19448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e19620"/>
        <function-ref name="write" scoped="" ref="0xf6e19700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xf6e19cb8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xf6e19cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e19e90"/>
        <function-ref name="write" scoped="" ref="0xf6e18010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xf6e152b0" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xf6e152b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e15488"/>
        <function-ref name="write" scoped="" ref="0xf6e15568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xf6e17cb8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xf6e17cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e17e90"/>
        <function-ref name="write" scoped="" ref="0xf6e16010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xf6f0ae78" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xf6f0ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xf6e1e070"/>
        <function-ref name="abortRelease" scoped="" ref="0xf6e1e150"/>
        <function-ref name="attemptRelease" scoped="" ref="0xf6e1e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xf6e1c260" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xf6e1c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1c438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xf6e1c5b8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xf6e1c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xf6e1c990" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xf6e1c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1cb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xf6e125c8" loc="89:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xf6e125c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e127a0"/>
        <function-ref name="write" scoped="" ref="0xf6e12880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xf6e1db98" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xf6e1db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1dd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xf6e19880" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xf6e19880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e19a58"/>
        <function-ref name="write" scoped="" ref="0xf6e19b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xf6e19010" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xf6e19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e191e8"/>
        <function-ref name="write" scoped="" ref="0xf6e192c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xf6e1e708" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xf6e1e708"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xf6e116e8" loc="93:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xf6e116e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e118c0"/>
        <function-ref name="write" scoped="" ref="0xf6e119a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xf6e12e38" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xf6e12e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e11050"/>
        <function-ref name="write" scoped="" ref="0xf6e11130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xf6e156e8" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xf6e156e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e158c0"/>
        <function-ref name="write" scoped="" ref="0xf6e159a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xf6e14cb8" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xf6e14cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e14e90"/>
        <function-ref name="write" scoped="" ref="0xf6e12010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xf6e165c8" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xf6e165c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e167a0"/>
        <function-ref name="write" scoped="" ref="0xf6e16880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xf6e10010" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xf6e10010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf6e103e8"/>
        <function-ref name="writeDone" scoped="" ref="0xf6e104c8"/>
        <function-ref name="write" scoped="" ref="0xf6e105a8"/>
        <function-ref name="beginRead" scoped="" ref="0xf6e10688"/>
        <function-ref name="readDone" scoped="" ref="0xf6e10768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xf6e1e3b0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xf6e1e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1e588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xf6e1b730" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xf6e1b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e1b908"/>
        <function-ref name="write" scoped="" ref="0xf6e1b9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xf6e18190" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xf6e18190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e18368"/>
        <function-ref name="write" scoped="" ref="0xf6e18448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xf6e16190" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xf6e16190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e16368"/>
        <function-ref name="write" scoped="" ref="0xf6e16448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xf6e18b00" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xf6e18b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e18cd8"/>
        <function-ref name="write" scoped="" ref="0xf6e18db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xf6e1edb8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xf6e1edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xf6e17010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xf6e17010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e171e8"/>
        <function-ref name="write" scoped="" ref="0xf6e172c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6f0a7c0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6f0a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6f0a998"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6f0aa78"/>
        <function-ref name="request" scoped="" ref="0xf6f0ab58"/>
        <function-ref name="granted" scoped="" ref="0xf6f0ac38"/>
        <function-ref name="isOwner" scoped="" ref="0xf6f0ad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xf6e1cce8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xf6e1cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1cec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xf6e1b3d8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xf6e1b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xf6e14880" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xf6e14880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e14a58"/>
        <function-ref name="write" scoped="" ref="0xf6e14b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xf6e14448" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xf6e14448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e14620"/>
        <function-ref name="write" scoped="" ref="0xf6e14700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xf6e1def0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xf6e1def0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1c0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xf6e14010" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xf6e14010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e141e8"/>
        <function-ref name="write" scoped="" ref="0xf6e142c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xf6e112b0" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xf6e112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e11488"/>
        <function-ref name="write" scoped="" ref="0xf6e11568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xf6e15b20" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xf6e15b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e15cf8"/>
        <function-ref name="write" scoped="" ref="0xf6e15dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xf6e1d190" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xf6e1d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1d368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xf6e16e38" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xf6e16e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e15050"/>
        <function-ref name="write" scoped="" ref="0xf6e15130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xf6e1d840" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xf6e1d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1da18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xf6e16a00" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xf6e16a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6e16bd8"/>
        <function-ref name="write" scoped="" ref="0xf6e16cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xf6e1b080" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xf6e1b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xf6e1b258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xf6e108e8" loc="98:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xf6e108e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xf6e10ac0"/>
        <function-ref name="writeDone" scoped="" ref="0xf6e10ba0"/>
        <function-ref name="write" scoped="" ref="0xf6e10c80"/>
        <function-ref name="beginRead" scoped="" ref="0xf6e10d60"/>
        <function-ref name="readDone" scoped="" ref="0xf6e10e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xf6dfa948" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6dfa948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6dfab20"/>
        <function-ref name="rand32" scoped="" ref="0xf6dfac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xf6dfa088" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xf6dfa088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6dfa6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6dfeda8" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6dfeda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6dfb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xf6df5478" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6df5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6df5650"/>
        <function-ref name="rand32" scoped="" ref="0xf6df5730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xf6df9b10" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xf6df9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6df51e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6df95f0" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6df95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6df97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xf6dfd608" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xf6dfd608"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf6dfd7e0"/>
        <function-ref name="toIdle" scoped="" ref="0xf6dfd8c0"/>
        <function-ref name="isState" scoped="" ref="0xf6dfd9a0"/>
        <function-ref name="isIdle" scoped="" ref="0xf6dfda80"/>
        <function-ref name="requestState" scoped="" ref="0xf6dfdb60"/>
        <function-ref name="forceState" scoped="" ref="0xf6dfdc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6deda70" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6deda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6dedc48"/>
        <function-ref name="getPayload" scoped="" ref="0xf6dedd28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6dede08"/>
        <function-ref name="cancel" scoped="" ref="0xf6dedee8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6dea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6ded300" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6ded300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6ded4d8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6ded5b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6ded698"/>
        <function-ref name="cancel" scoped="" ref="0xf6ded778"/>
        <function-ref name="sendDone" scoped="" ref="0xf6ded858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6de7430" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6de7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6de7608"/>
        <function-ref name="getPayload" scoped="" ref="0xf6de76e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6de77c8"/>
        <function-ref name="cancel" scoped="" ref="0xf6de78a8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6de7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6dea938" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6dea938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6deab10"/>
        <function-ref name="getPayload" scoped="" ref="0xf6deabf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6deacd0"/>
        <function-ref name="cancel" scoped="" ref="0xf6deadb0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6deae90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xf6de6350" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6de6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6de6528"/>
        <function-ref name="rand32" scoped="" ref="0xf6de6608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6de7040" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6de7040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6de7218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xf6de67f0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6de67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0xf6de69c8"/>
        <function-ref name="getMetadata" scoped="" ref="0xf6de6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0xf6de7b00" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xf6de7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf6de7cd8"/>
        <function-ref name="toIdle" scoped="" ref="0xf6de7db8"/>
        <function-ref name="isState" scoped="" ref="0xf6de7e98"/>
        <function-ref name="isIdle" scoped="" ref="0xf6de6010"/>
        <function-ref name="requestState" scoped="" ref="0xf6de60f0"/>
        <function-ref name="forceState" scoped="" ref="0xf6de61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xf6de9738" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xf6de9738"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf6de9910"/>
        <function-ref name="toIdle" scoped="" ref="0xf6de99f0"/>
        <function-ref name="isState" scoped="" ref="0xf6de9ad0"/>
        <function-ref name="isIdle" scoped="" ref="0xf6de9bb0"/>
        <function-ref name="requestState" scoped="" ref="0xf6de9c90"/>
        <function-ref name="forceState" scoped="" ref="0xf6de9d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6dd9688" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6dd9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dd9860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6decd68" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6decd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dd9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xf6dd9260" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0xf6dd9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dd9438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6dd5010" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6dd5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dd51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6dd6b48" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6dd6b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6dd6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6dd63d8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6dd63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dd65b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xf6dd53d0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6dd53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0xf6dd55a8"/>
        <function-ref name="getMetadata" scoped="" ref="0xf6dd5688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xf6dd6800" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0xf6dd6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dd69d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6dc1748" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6dc1748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dc1920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6dc1af8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6dc1af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6dc1cd0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6dc1db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6dc1e90"/>
        <function-ref name="cancel" scoped="" ref="0xf6dc0010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6dc00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6dc2090" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6dc2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6dc2268"/>
        <function-ref name="getPayload" scoped="" ref="0xf6dc2348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6dc2428"/>
        <function-ref name="cancel" scoped="" ref="0xf6dc2508"/>
        <function-ref name="sendDone" scoped="" ref="0xf6dc25e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xf6dc2b40" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xf6dc2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6dc2d18"/>
        <function-ref name="getPayload" scoped="" ref="0xf6dc2df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6dc2ed8"/>
        <function-ref name="cancel" scoped="" ref="0xf6dc1010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6dc10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6dc2770" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6dc2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dc2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6dc39a0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6dc39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6dc3b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6dc3c58"/>
        <function-ref name="request" scoped="" ref="0xf6dc3d38"/>
        <function-ref name="granted" scoped="" ref="0xf6dc3e18"/>
        <function-ref name="isOwner" scoped="" ref="0xf6dc3ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xf6dc1320" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xf6dc1320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dc14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6dba550" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6dba550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6dba728"/>
        <function-ref name="getPayload" scoped="" ref="0xf6dba808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6dba8e8"/>
        <function-ref name="cancel" scoped="" ref="0xf6dba9c8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6dbaaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6dbacb8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6dbacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dbae90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0xf6da73c0" loc="148:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0xf6da73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6da7598"/>
        <function-ref name="runTask" scoped="" ref="0xf6da7678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xf6db9060" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf6db9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf6db9238"/>
        <function-ref name="setNetwork" scoped="" ref="0xf6db9318"/>
        <function-ref name="getRssi" scoped="" ref="0xf6db93f8"/>
        <function-ref name="getNetwork" scoped="" ref="0xf6db94d8"/>
        <function-ref name="getPower" scoped="" ref="0xf6db95b8"/>
        <function-ref name="getLqi" scoped="" ref="0xf6db9698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xf6dbb9b8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xf6dbb9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6dbbb90"/>
        <function-ref name="getPayload" scoped="" ref="0xf6dbbc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6dbbd50"/>
        <function-ref name="cancel" scoped="" ref="0xf6dbbe30"/>
        <function-ref name="sendDone" scoped="" ref="0xf6dbbf10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xf6db9d58" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xf6db9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf6db8010"/>
        <function-ref name="isEmpty" scoped="" ref="0xf6db80f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf6db81d0"/>
        <function-ref name="dequeue" scoped="" ref="0xf6db82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xf6db9880" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6db9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0xf6db9a58"/>
        <function-ref name="getMetadata" scoped="" ref="0xf6db9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xf6dbb5e8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xf6dbb5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dbb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xf6dbd718" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xf6dbd718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6dbd8f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6dbd9d0"/>
        <function-ref name="request" scoped="" ref="0xf6dbdab0"/>
        <function-ref name="granted" scoped="" ref="0xf6dbdb90"/>
        <function-ref name="isOwner" scoped="" ref="0xf6dbdc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xf6dbde58" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xf6dbde58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6dbb050"/>
        <function-ref name="getPayload" scoped="" ref="0xf6dbb130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6dbb210"/>
        <function-ref name="cancel" scoped="" ref="0xf6dbb2f0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6dbb3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xf6dba160" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xf6dba160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6dba338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xf6dbe9a0" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xf6dbe9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xf6dbeb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xf6dbecd8" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xf6dbecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xf6dbeeb0"/>
        <function-ref name="isEmpty" scoped="" ref="0xf6d95010"/>
        <function-ref name="isEnqueued" scoped="" ref="0xf6d950f0"/>
        <function-ref name="dequeue" scoped="" ref="0xf6d951d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xf6d90f18" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xf6d90f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6d8f108"/>
        <function-ref name="stopDone" scoped="" ref="0xf6d8f1e8"/>
        <function-ref name="start" scoped="" ref="0xf6d8f2c8"/>
        <function-ref name="stop" scoped="" ref="0xf6d8f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6d8fdf0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6d8fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d8e010"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d8e0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d8e1d0"/>
        <function-ref name="cancel" scoped="" ref="0xf6d8e2b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d8e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6d8e5a0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6d8e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d8e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6ddad98" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6ddad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d90010"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d900f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d901d0"/>
        <function-ref name="cancel" scoped="" ref="0xf6d902b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d90390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf6d908e0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf6d908e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf6d90ab8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf6d90b98"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf6d90c78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf6d90d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0xf6d8f5a0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0xf6d8f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf6d8f778"/>
        <function-ref name="toIdle" scoped="" ref="0xf6d8f858"/>
        <function-ref name="isState" scoped="" ref="0xf6d8f938"/>
        <function-ref name="isIdle" scoped="" ref="0xf6d8fa18"/>
        <function-ref name="requestState" scoped="" ref="0xf6d8faf8"/>
        <function-ref name="forceState" scoped="" ref="0xf6d8fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xf6d8e9c0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xf6d8e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6d8eb98"/>
        <function-ref name="stopDone" scoped="" ref="0xf6d8ec78"/>
        <function-ref name="start" scoped="" ref="0xf6d8ed58"/>
        <function-ref name="stop" scoped="" ref="0xf6d8ee38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6d90518" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6d90518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d906f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xf6d8d600" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xf6d8d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xf6d8d7d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xf6d8d8b8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xf6d8d998"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xf6d8da78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xf6d8c6a8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xf6d8c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xf6d8c880"/>
        <function-ref name="toIdle" scoped="" ref="0xf6d8c960"/>
        <function-ref name="isState" scoped="" ref="0xf6d8ca40"/>
        <function-ref name="isIdle" scoped="" ref="0xf6d8cb20"/>
        <function-ref name="requestState" scoped="" ref="0xf6d8cc00"/>
        <function-ref name="forceState" scoped="" ref="0xf6d8cce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6d83010" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6d83010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d831e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d832c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d833a8"/>
        <function-ref name="cancel" scoped="" ref="0xf6d83488"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d83568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6d84158" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6d84158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d84330"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d84410"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d844f0"/>
        <function-ref name="cancel" scoped="" ref="0xf6d845d0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d846b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf6d84858" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf6d84858"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf6d84a30"/>
        <function-ref name="setRetries" scoped="" ref="0xf6d84b10"/>
        <function-ref name="getRetries" scoped="" ref="0xf6d84bf0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf6d84cd0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf6d84db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xf6d80510" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xf6d80510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6d806e8"/>
        <function-ref name="noAck" scoped="" ref="0xf6d807c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6d808a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xf6d83cb0" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xf6d83cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xf6d83e88"/>
        <function-ref name="setRetries" scoped="" ref="0xf6d80010"/>
        <function-ref name="getRetries" scoped="" ref="0xf6d800f0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xf6d801d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xf6d802b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xf6d705a0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xf6d705a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d70778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xf6d72df8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xf6d72df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d70010"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d700f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d701d0"/>
        <function-ref name="cancel" scoped="" ref="0xf6d702b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d70390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xf6d6f670" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xf6d6f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xf6d6f848"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xf6d6f928"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xf6d6fa08"/>
        <function-ref name="syncDone" scoped="" ref="0xf6d6fae8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xf6d6fbc8"/>
        <function-ref name="setShortAddr" scoped="" ref="0xf6d6fca8"/>
        <function-ref name="setChannel" scoped="" ref="0xf6d6fd88"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xf6d6fe68"/>
        <function-ref name="setPanAddr" scoped="" ref="0xf6d6e010"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xf6d6e0f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0xf6d6e1d0"/>
        <function-ref name="sync" scoped="" ref="0xf6d6e2b0"/>
        <function-ref name="getChannel" scoped="" ref="0xf6d6e390"/>
        <function-ref name="getPanAddr" scoped="" ref="0xf6d6e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xf6d725a8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xf6d725a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xf6d72780"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xf6d72860"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xf6d72940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xf6d72a20"/>
        <function-ref name="setCca" scoped="" ref="0xf6d72b00"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xf6d72be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xf6d73f10" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xf6d73f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xf6d72108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xf6d6ee40" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0xf6d6ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xf6d6d050"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xf6d6d130"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xf6d6d210"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xf6d6d2f0"/>
        <function-ref name="setCca" scoped="" ref="0xf6d6d3d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xf6d6d4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6d73518" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6d73518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6d736f0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6d737d0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d738b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d73990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6d73a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6d754e8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6d754e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d756c0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d757a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d75880"/>
        <function-ref name="cancel" scoped="" ref="0xf6d75960"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d75a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xf6d74580" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xf6d74580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d74758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xf6d70938" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf6d70938"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf6d70b10"/>
        <function-ref name="setNetwork" scoped="" ref="0xf6d70bf0"/>
        <function-ref name="getRssi" scoped="" ref="0xf6d70cd0"/>
        <function-ref name="getNetwork" scoped="" ref="0xf6d70db0"/>
        <function-ref name="getPower" scoped="" ref="0xf6d70e90"/>
        <function-ref name="getLqi" scoped="" ref="0xf6d6f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xf6d6e700" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xf6d6e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xf6d6e958"/>
        <function-ref name="changed" scoped="" ref="0xf6d6ea38"/>
        <function-ref name="amGroup" scoped="" ref="0xf6d6eb18"/>
        <function-ref name="setAddress" scoped="" ref="0xf6d6ebf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xf6d6f1f8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xf6d6f1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0xf6d6f3d0"/>
        <function-ref name="getMetadata" scoped="" ref="0xf6d6f4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6d75ea8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6d75ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d740c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6d6ddb8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6d6ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6d6c010"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6d6c0f0"/>
        <function-ref name="led1On" scoped="" ref="0xf6d6c1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6d6c2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6d6c390"/>
        <function-ref name="get" scoped="" ref="0xf6d6c470"/>
        <function-ref name="led1Off" scoped="" ref="0xf6d6c550"/>
        <function-ref name="led2Off" scoped="" ref="0xf6d6c8d0"/>
        <function-ref name="set" scoped="" ref="0xf6d6c630"/>
        <function-ref name="led0On" scoped="" ref="0xf6d6c710"/>
        <function-ref name="led2On" scoped="" ref="0xf6d6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6d748f0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6d748f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6d74ac8"/>
        <function-ref name="source" scoped="" ref="0xf6d74ba8"/>
        <function-ref name="address" scoped="" ref="0xf6d74c88"/>
        <function-ref name="destination" scoped="" ref="0xf6d74d68"/>
        <function-ref name="setSource" scoped="" ref="0xf6d74e48"/>
        <function-ref name="setDestination" scoped="" ref="0xf6d74f28"/>
        <function-ref name="type" scoped="" ref="0xf6d73018"/>
        <function-ref name="setType" scoped="" ref="0xf6d730f8"/>
        <function-ref name="isForMe" scoped="" ref="0xf6d731d8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6d732b8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6d73398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0xf6d6d6f0" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0xf6d6d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xf6d6d8c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xf6d6d9a8"/>
        <function-ref name="request" scoped="" ref="0xf6d6da88"/>
        <function-ref name="granted" scoped="" ref="0xf6d6db68"/>
        <function-ref name="isOwner" scoped="" ref="0xf6d6dc48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xf6d03908" loc="121:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xf6d03908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xf6d03ae0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xf6d03bc0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xf6d03ca0"/>
        <function-ref name="syncDone" scoped="" ref="0xf6d03d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xf6d03e60"/>
        <function-ref name="setShortAddr" scoped="" ref="0xf6d02010"/>
        <function-ref name="setChannel" scoped="" ref="0xf6d020f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xf6d021d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0xf6d022b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xf6d02390"/>
        <function-ref name="getShortAddr" scoped="" ref="0xf6d02470"/>
        <function-ref name="sync" scoped="" ref="0xf6d02550"/>
        <function-ref name="getChannel" scoped="" ref="0xf6d02630"/>
        <function-ref name="getPanAddr" scoped="" ref="0xf6d02790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendTimer" ref="0xf6d1c4d0" loc="59:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendTimer" scoped="" ref="0xf6d1c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d19010"/>
        <function-ref name="fired" scoped="" ref="0xf6d1a268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d1a970"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d1a718"/>
        <function-ref name="getdt" scoped="" ref="0xf6d194c0"/>
        <function-ref name="gett0" scoped="" ref="0xf6d19268"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d1a4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d1caf8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d1ac90"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d1cd78"/>
        <function-ref name="stop" scoped="" ref="0xf6d1a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NoiseFloorTimer" ref="0xf6d10400" loc="63:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NoiseFloorTimer" scoped="" ref="0xf6d10400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d0fed8"/>
        <function-ref name="fired" scoped="" ref="0xf6d0f190"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d0f898"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d0f640"/>
        <function-ref name="getdt" scoped="" ref="0xf6d0e3a8"/>
        <function-ref name="gett0" scoped="" ref="0xf6d0e150"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d0f3e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d10a28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d0fbb8"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d10ca8"/>
        <function-ref name="stop" scoped="" ref="0xf6d10f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandReceive" ref="0xf6d07798" loc="82:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandReceive" scoped="" ref="0xf6d07798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d07970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendIdentification" ref="0xf6cf2858" loc="280:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendIdentification" scoped="" ref="0xf6cf2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6cf2a30"/>
        <function-ref name="runTask" scoped="" ref="0xf6cf2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xf6d1c010" loc="58:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xf6d1c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xf6d1c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadRssi" ref="0xf6d02a90" loc="124:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0xf6d02a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xf6d010d8"/>
        <function-ref name="readDone" scoped="" ref="0xf6d01330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xf6d067d0" loc="86:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6d067d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6d069a8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6d06a88"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d06b68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d06c48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6d06d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xf6d030e0" loc="118:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xf6d030e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xf6d032b8"/>
        <function-ref name="setNetwork" scoped="" ref="0xf6d03398"/>
        <function-ref name="getRssi" scoped="" ref="0xf6d03478"/>
        <function-ref name="getNetwork" scoped="" ref="0xf6d03558"/>
        <function-ref name="getPower" scoped="" ref="0xf6d03638"/>
        <function-ref name="getLqi" scoped="" ref="0xf6d03718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SensorReadingTimer" ref="0xf6d0e7b8" loc="64:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensorReadingTimer" scoped="" ref="0xf6d0e7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d0b330"/>
        <function-ref name="fired" scoped="" ref="0xf6d0c560"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d0cc68"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d0ca10"/>
        <function-ref name="getdt" scoped="" ref="0xf6d0b7e0"/>
        <function-ref name="gett0" scoped="" ref="0xf6d0b588"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d0c7b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d0ede0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d0b010"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d0c088"/>
        <function-ref name="stop" scoped="" ref="0xf6d0c308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xf6d04b50" loc="90:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xf6d04b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xf6d04d28"/>
        <function-ref name="rand32" scoped="" ref="0xf6d04e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xf6d08380" loc="76:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xf6d08380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xf6d085d8"/>
        <function-ref name="stopDone" scoped="" ref="0xf6d086b8"/>
        <function-ref name="start" scoped="" ref="0xf6d08798"/>
        <function-ref name="stop" scoped="" ref="0xf6d08878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReport" ref="0xf6cf5548" loc="273:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReport" scoped="" ref="0xf6cf5548"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6cf5720"/>
        <function-ref name="runTask" scoped="" ref="0xf6cf5800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEchoReply" ref="0xf6c85858" loc="1266:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendEchoReply" scoped="" ref="0xf6c85858"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6c85a30"/>
        <function-ref name="runTask" scoped="" ref="0xf6c85b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendCommandACK" ref="0xf6cc2220" loc="686:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendCommandACK" scoped="" ref="0xf6cc2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6cc23f8"/>
        <function-ref name="runTask" scoped="" ref="0xf6cc24d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TinyReportMsgSend" ref="0xf6d0ab00" loc="69:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyReportMsgSend" scoped="" ref="0xf6d0ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d0acd8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d0adb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d0ae98"/>
        <function-ref name="cancel" scoped="" ref="0xf6d09010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d090f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReportMsgSend" ref="0xf6d0a338" loc="68:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReportMsgSend" scoped="" ref="0xf6d0a338"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d0a510"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d0a5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d0a6d0"/>
        <function-ref name="cancel" scoped="" ref="0xf6d0a7b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d0a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandMsgSend" ref="0xf6d09340" loc="70:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandMsgSend" scoped="" ref="0xf6d09340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d09518"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d095f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d096d8"/>
        <function-ref name="cancel" scoped="" ref="0xf6d097b8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d09898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SignalTimer" ref="0xf6d13010" loc="62:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SignalTimer" scoped="" ref="0xf6d13010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d11b00"/>
        <function-ref name="fired" scoped="" ref="0xf6d13d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d114c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d11268"/>
        <function-ref name="getdt" scoped="" ref="0xf6d10010"/>
        <function-ref name="gett0" scoped="" ref="0xf6d11d58"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d11010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d13638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d117e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d138b8"/>
        <function-ref name="stop" scoped="" ref="0xf6d13b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PingReceive" ref="0xf6d08f10" loc="80:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PingReceive" scoped="" ref="0xf6d08f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d07108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xf6d07b10" loc="85:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xf6d07b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xf6d07ce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xf6d07dc8"/>
        <function-ref name="led1On" scoped="" ref="0xf6d07ea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xf6d06010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xf6d060f0"/>
        <function-ref name="get" scoped="" ref="0xf6d061d0"/>
        <function-ref name="led1Off" scoped="" ref="0xf6d062b0"/>
        <function-ref name="led2Off" scoped="" ref="0xf6d06630"/>
        <function-ref name="set" scoped="" ref="0xf6d06390"/>
        <function-ref name="led0On" scoped="" ref="0xf6d06470"/>
        <function-ref name="led2On" scoped="" ref="0xf6d06550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendReading" ref="0xf6cef170" loc="286:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendReading" scoped="" ref="0xf6cef170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6cef348"/>
        <function-ref name="runTask" scoped="" ref="0xf6cef428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiMsgSend" ref="0xf6d0baf0" loc="67:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiMsgSend" scoped="" ref="0xf6d0baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d0bcc8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d0bda8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d0be88"/>
        <function-ref name="cancel" scoped="" ref="0xf6d0a010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d0a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResponseReceive" ref="0xf6d07368" loc="81:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResponseReceive" scoped="" ref="0xf6d07368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d07540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MultiPingResponseSend" ref="0xf6d09b30" loc="71:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiPingResponseSend" scoped="" ref="0xf6d09b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6d09d08"/>
        <function-ref name="getPayload" scoped="" ref="0xf6d09de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6d09ec8"/>
        <function-ref name="cancel" scoped="" ref="0xf6d08010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6d080f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SimplePingReceive" ref="0xf6d08b00" loc="79:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SimplePingReceive" scoped="" ref="0xf6d08b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6d08cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6d06ee0" loc="87:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6d06ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6d040e0"/>
        <function-ref name="source" scoped="" ref="0xf6d041c0"/>
        <function-ref name="address" scoped="" ref="0xf6d042a0"/>
        <function-ref name="destination" scoped="" ref="0xf6d04380"/>
        <function-ref name="setSource" scoped="" ref="0xf6d04460"/>
        <function-ref name="setDestination" scoped="" ref="0xf6d04540"/>
        <function-ref name="type" scoped="" ref="0xf6d04620"/>
        <function-ref name="setType" scoped="" ref="0xf6d04700"/>
        <function-ref name="isForMe" scoped="" ref="0xf6d047e0"/>
        <function-ref name="setGroup" scoped="" ref="0xf6d048c0"/>
        <function-ref name="localGroup" scoped="" ref="0xf6d049a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlushTimer" ref="0xf6d19880" loc="60:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlushTimer" scoped="" ref="0xf6d19880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d17388"/>
        <function-ref name="fired" scoped="" ref="0xf6d18628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d18d30"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d18ad8"/>
        <function-ref name="getdt" scoped="" ref="0xf6d17838"/>
        <function-ref name="gett0" scoped="" ref="0xf6d175e0"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d18880"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d19ea8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d17068"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d18150"/>
        <function-ref name="stop" scoped="" ref="0xf6d183d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMultipleEcho" ref="0xf6cf6b98" loc="272:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMultipleEcho" scoped="" ref="0xf6cf6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6cf6e70"/>
        <function-ref name="runTask" scoped="" ref="0xf6cf5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GapTimer" ref="0xf6d17be8" loc="61:SendingMoteC.nc">
      <component-ref qname="SendingMoteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GapTimer" scoped="" ref="0xf6d17be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6d14730"/>
        <function-ref name="fired" scoped="" ref="0xf6d159b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6d140f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6d15e60"/>
        <function-ref name="getdt" scoped="" ref="0xf6d14be0"/>
        <function-ref name="gett0" scoped="" ref="0xf6d14988"/>
        <function-ref name="isRunning" scoped="" ref="0xf6d15c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6d15258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6d14410"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6d154d8"/>
        <function-ref name="stop" scoped="" ref="0xf6d15758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c4e330" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.FlushTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c4e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c4de38"/>
        <function-ref name="fired" scoped="" ref="0xf6c4d0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c4d7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c4d5a0"/>
        <function-ref name="getdt" scoped="" ref="0xf6c4c310"/>
        <function-ref name="gett0" scoped="" ref="0xf6c4c0b8"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c4d348"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c4e958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c4db18"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c4ebd8"/>
        <function-ref name="stop" scoped="" ref="0xf6c4ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c4b120" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.SendTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c4b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c49c00"/>
        <function-ref name="fired" scoped="" ref="0xf6c4bea0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c495c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c49368"/>
        <function-ref name="getdt" scoped="" ref="0xf6c480f0"/>
        <function-ref name="gett0" scoped="" ref="0xf6c49e58"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c49110"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c4b748"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c498e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c4b9c8"/>
        <function-ref name="stop" scoped="" ref="0xf6c4bc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c47010" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.GapTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c47010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c46b00"/>
        <function-ref name="fired" scoped="" ref="0xf6c47d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c464c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c46268"/>
        <function-ref name="getdt" scoped="" ref="0xf6c45010"/>
        <function-ref name="gett0" scoped="" ref="0xf6c46d58"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c46010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c47638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c467e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c478b8"/>
        <function-ref name="stop" scoped="" ref="0xf6c47b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c45e08" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.SignalTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c45e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c42900"/>
        <function-ref name="fired" scoped="" ref="0xf6c43ba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c422c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c42068"/>
        <function-ref name="getdt" scoped="" ref="0xf6c42db0"/>
        <function-ref name="gett0" scoped="" ref="0xf6c42b58"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c43df8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c43448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c425e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c436c8"/>
        <function-ref name="stop" scoped="" ref="0xf6c43948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c41c38" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.NoiseFloorTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c41c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c3e730"/>
        <function-ref name="fired" scoped="" ref="0xf6c409d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c3e0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c40e80"/>
        <function-ref name="getdt" scoped="" ref="0xf6c3ebe0"/>
        <function-ref name="gett0" scoped="" ref="0xf6c3e988"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c40c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c40278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c3e410"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c404f8"/>
        <function-ref name="stop" scoped="" ref="0xf6c40778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xf6c3db10" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingMoteAppC.SensorReadingTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xf6c3db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xf75f24a8"/>
            <typename><typedef-ref name="TMilli" ref="0xf75f2670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xf6c3b6a8"/>
        <function-ref name="fired" scoped="" ref="0xf6c3c938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xf6c3b068"/>
        <function-ref name="isOneShot" scoped="" ref="0xf6c3cde8"/>
        <function-ref name="getdt" scoped="" ref="0xf6c3bb58"/>
        <function-ref name="gett0" scoped="" ref="0xf6c3b900"/>
        <function-ref name="isRunning" scoped="" ref="0xf6c3cb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xf6c3c1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xf6c3b388"/>
        <function-ref name="startOneShot" scoped="" ref="0xf6c3c460"/>
        <function-ref name="stop" scoped="" ref="0xf6c3c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6c38280" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6c38280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c38458"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c38538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c38618"/>
        <function-ref name="cancel" scoped="" ref="0xf6c386f8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c387d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6c38918" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6c38918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6c38af0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6c38bd0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c38cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c38d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6c38e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6bee010" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6bee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6bee1e8"/>
        <function-ref name="source" scoped="" ref="0xf6bee2c8"/>
        <function-ref name="address" scoped="" ref="0xf6bee3a8"/>
        <function-ref name="destination" scoped="" ref="0xf6bee488"/>
        <function-ref name="setSource" scoped="" ref="0xf6bee568"/>
        <function-ref name="setDestination" scoped="" ref="0xf6bee648"/>
        <function-ref name="type" scoped="" ref="0xf6bee728"/>
        <function-ref name="setType" scoped="" ref="0xf6bee808"/>
        <function-ref name="isForMe" scoped="" ref="0xf6bee8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bee9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6beeaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6beec08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6beec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6beede0"/>
        <function-ref name="noAck" scoped="" ref="0xf6beeec0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6bed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf68a02c8" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf68a02c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf68a04a0"/>
        <function-ref name="getPayload" scoped="" ref="0xf68a0580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68a0660"/>
        <function-ref name="cancel" scoped="" ref="0xf68a0740"/>
        <function-ref name="sendDone" scoped="" ref="0xf68a0820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf68a0960" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf68a0960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf68a0b38"/>
        <function-ref name="payloadLength" scoped="" ref="0xf68a0c18"/>
        <function-ref name="getPayload" scoped="" ref="0xf68a0cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68a0dd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf68a0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf689f010" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf689f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf689f1e8"/>
        <function-ref name="source" scoped="" ref="0xf689f2c8"/>
        <function-ref name="address" scoped="" ref="0xf689f3a8"/>
        <function-ref name="destination" scoped="" ref="0xf689f488"/>
        <function-ref name="setSource" scoped="" ref="0xf689f568"/>
        <function-ref name="setDestination" scoped="" ref="0xf689f648"/>
        <function-ref name="type" scoped="" ref="0xf689f728"/>
        <function-ref name="setType" scoped="" ref="0xf689f808"/>
        <function-ref name="isForMe" scoped="" ref="0xf689f8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xf689f9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xf689faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf689fc08" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf689fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf689fde0"/>
        <function-ref name="noAck" scoped="" ref="0xf689fec0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf689e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf689cd90" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf689cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6899010"/>
        <function-ref name="getPayload" scoped="" ref="0xf68990f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68991d0"/>
        <function-ref name="cancel" scoped="" ref="0xf68992b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6899390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf6899500" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6899500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf68996d8"/>
        <function-ref name="getPayload" scoped="" ref="0xf68997b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6899898"/>
        <function-ref name="cancel" scoped="" ref="0xf6899978"/>
        <function-ref name="sendDone" scoped="" ref="0xf6899a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6899b98" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.RssiMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6899b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6899d70"/>
        <function-ref name="source" scoped="" ref="0xf6899e50"/>
        <function-ref name="address" scoped="" ref="0xf6898010"/>
        <function-ref name="destination" scoped="" ref="0xf68980f0"/>
        <function-ref name="setSource" scoped="" ref="0xf68981d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf68982b0"/>
        <function-ref name="type" scoped="" ref="0xf6898390"/>
        <function-ref name="setType" scoped="" ref="0xf6898470"/>
        <function-ref name="isForMe" scoped="" ref="0xf6898550"/>
        <function-ref name="setGroup" scoped="" ref="0xf6898630"/>
        <function-ref name="localGroup" scoped="" ref="0xf6898710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6c21220" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6c21220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6c213f8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6c214d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6c215b8"/>
        <function-ref name="cancel" scoped="" ref="0xf6c21698"/>
        <function-ref name="sendDone" scoped="" ref="0xf6c21778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xf6bf7ab8" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6bf7ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6bf7ca0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bf7d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bf7e60"/>
        <function-ref name="cancel" scoped="" ref="0xf6bf6010"/>
        <function-ref name="sendDone" scoped="" ref="0xf6bf60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xf6bf7348" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6bf7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6bf7530"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bf7610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bf76f0"/>
        <function-ref name="cancel" scoped="" ref="0xf6bf77d0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6bf78b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xf6bf6e08" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6bf6e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6bf5010"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6bf50f0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bf51d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bf52b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6bf5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xf6bf5510" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xf6bf5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6bf56e8"/>
        <function-ref name="runTask" scoped="" ref="0xf6bf57c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xf6bf5948" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xf6bf5948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xf6bf5b20"/>
        <function-ref name="runTask" scoped="" ref="0xf6bf5c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6bf6230" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6bf6230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6bf6408"/>
        <function-ref name="source" scoped="" ref="0xf6bf64e8"/>
        <function-ref name="address" scoped="" ref="0xf6bf65c8"/>
        <function-ref name="destination" scoped="" ref="0xf6bf66a8"/>
        <function-ref name="setSource" scoped="" ref="0xf6bf6788"/>
        <function-ref name="setDestination" scoped="" ref="0xf6bf6868"/>
        <function-ref name="type" scoped="" ref="0xf6bf6948"/>
        <function-ref name="setType" scoped="" ref="0xf6bf6a28"/>
        <function-ref name="isForMe" scoped="" ref="0xf6bf6b08"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bf6be8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6bf6cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6bec360" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6bec360"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6bec538"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bec618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bec6f8"/>
        <function-ref name="cancel" scoped="" ref="0xf6bec7d8"/>
        <function-ref name="sendDone" scoped="" ref="0xf6bec8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6bec9f8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6bec9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6becbd0"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6beccb0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6becd90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bece70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6beb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6beb150" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6beb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6beb328"/>
        <function-ref name="source" scoped="" ref="0xf6beb408"/>
        <function-ref name="address" scoped="" ref="0xf6beb4e8"/>
        <function-ref name="destination" scoped="" ref="0xf6beb5c8"/>
        <function-ref name="setSource" scoped="" ref="0xf6beb6a8"/>
        <function-ref name="setDestination" scoped="" ref="0xf6beb788"/>
        <function-ref name="type" scoped="" ref="0xf6beb868"/>
        <function-ref name="setType" scoped="" ref="0xf6beb948"/>
        <function-ref name="isForMe" scoped="" ref="0xf6beba28"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bebb08"/>
        <function-ref name="localGroup" scoped="" ref="0xf6bebbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6bebd48" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6bebd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6bebf20"/>
        <function-ref name="noAck" scoped="" ref="0xf6be9018"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6be90f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6872890" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6872890"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6872a68"/>
        <function-ref name="getPayload" scoped="" ref="0xf6872b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6872c28"/>
        <function-ref name="cancel" scoped="" ref="0xf6872d08"/>
        <function-ref name="sendDone" scoped="" ref="0xf6872de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6872f28" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6872f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf686f110"/>
        <function-ref name="payloadLength" scoped="" ref="0xf686f1f0"/>
        <function-ref name="getPayload" scoped="" ref="0xf686f2d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf686f3b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf686f490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf686f5d0" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf686f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf686f7a8"/>
        <function-ref name="source" scoped="" ref="0xf686f888"/>
        <function-ref name="address" scoped="" ref="0xf686f968"/>
        <function-ref name="destination" scoped="" ref="0xf686fa48"/>
        <function-ref name="setSource" scoped="" ref="0xf686fb28"/>
        <function-ref name="setDestination" scoped="" ref="0xf686fc08"/>
        <function-ref name="type" scoped="" ref="0xf686fce8"/>
        <function-ref name="setType" scoped="" ref="0xf686fdc8"/>
        <function-ref name="isForMe" scoped="" ref="0xf686fea8"/>
        <function-ref name="setGroup" scoped="" ref="0xf686e010"/>
        <function-ref name="localGroup" scoped="" ref="0xf686e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf686e250" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf686e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf686e428"/>
        <function-ref name="noAck" scoped="" ref="0xf686e508"/>
        <function-ref name="wasAcked" scoped="" ref="0xf686e5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf68693b0" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf68693b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6869588"/>
        <function-ref name="getPayload" scoped="" ref="0xf6869668"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6869748"/>
        <function-ref name="cancel" scoped="" ref="0xf6869828"/>
        <function-ref name="sendDone" scoped="" ref="0xf6869908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf6869a78" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6869a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6869c50"/>
        <function-ref name="getPayload" scoped="" ref="0xf6869d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6869e10"/>
        <function-ref name="cancel" scoped="" ref="0xf6869ef0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6868010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6868150" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.MultiPingResponseSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6868150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6868328"/>
        <function-ref name="source" scoped="" ref="0xf6868408"/>
        <function-ref name="address" scoped="" ref="0xf68684e8"/>
        <function-ref name="destination" scoped="" ref="0xf68685c8"/>
        <function-ref name="setSource" scoped="" ref="0xf68686a8"/>
        <function-ref name="setDestination" scoped="" ref="0xf6868788"/>
        <function-ref name="type" scoped="" ref="0xf6868868"/>
        <function-ref name="setType" scoped="" ref="0xf6868948"/>
        <function-ref name="isForMe" scoped="" ref="0xf6868a28"/>
        <function-ref name="setGroup" scoped="" ref="0xf6868b08"/>
        <function-ref name="localGroup" scoped="" ref="0xf6868be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6be8448" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6be8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6be8620"/>
        <function-ref name="getPayload" scoped="" ref="0xf6be8700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6be87e0"/>
        <function-ref name="cancel" scoped="" ref="0xf6be88c0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6be89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6be8ae0" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6be8ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6be8cb8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6be8d98"/>
        <function-ref name="getPayload" scoped="" ref="0xf6be8e78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6be7010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6be70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6be7230" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6be7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6be7408"/>
        <function-ref name="source" scoped="" ref="0xf6be74e8"/>
        <function-ref name="address" scoped="" ref="0xf6be75c8"/>
        <function-ref name="destination" scoped="" ref="0xf6be76a8"/>
        <function-ref name="setSource" scoped="" ref="0xf6be7788"/>
        <function-ref name="setDestination" scoped="" ref="0xf6be7868"/>
        <function-ref name="type" scoped="" ref="0xf6be7948"/>
        <function-ref name="setType" scoped="" ref="0xf6be7a28"/>
        <function-ref name="isForMe" scoped="" ref="0xf6be7b08"/>
        <function-ref name="setGroup" scoped="" ref="0xf6be7be8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6be7cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6be7e28" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6be7e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6be6050"/>
        <function-ref name="noAck" scoped="" ref="0xf6be6130"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6be6210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf685c2e8" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf685c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf685c4c0"/>
        <function-ref name="getPayload" scoped="" ref="0xf685c5a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf685c680"/>
        <function-ref name="cancel" scoped="" ref="0xf685c760"/>
        <function-ref name="sendDone" scoped="" ref="0xf685c840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf685c980" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf685c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf685cb58"/>
        <function-ref name="payloadLength" scoped="" ref="0xf685cc38"/>
        <function-ref name="getPayload" scoped="" ref="0xf685cd18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf685cdf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf685ced8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf685b030" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf685b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf685b208"/>
        <function-ref name="source" scoped="" ref="0xf685b2e8"/>
        <function-ref name="address" scoped="" ref="0xf685b3c8"/>
        <function-ref name="destination" scoped="" ref="0xf685b4a8"/>
        <function-ref name="setSource" scoped="" ref="0xf685b588"/>
        <function-ref name="setDestination" scoped="" ref="0xf685b668"/>
        <function-ref name="type" scoped="" ref="0xf685b748"/>
        <function-ref name="setType" scoped="" ref="0xf685b828"/>
        <function-ref name="isForMe" scoped="" ref="0xf685b908"/>
        <function-ref name="setGroup" scoped="" ref="0xf685b9e8"/>
        <function-ref name="localGroup" scoped="" ref="0xf685bac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf685bc28" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf685bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf685be00"/>
        <function-ref name="noAck" scoped="" ref="0xf685bee0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6859010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf68579a0" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf68579a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6857b78"/>
        <function-ref name="getPayload" scoped="" ref="0xf6857c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6857d38"/>
        <function-ref name="cancel" scoped="" ref="0xf6857e18"/>
        <function-ref name="sendDone" scoped="" ref="0xf6857ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf6854080" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6854080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6854258"/>
        <function-ref name="getPayload" scoped="" ref="0xf6854338"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6854418"/>
        <function-ref name="cancel" scoped="" ref="0xf68544f8"/>
        <function-ref name="sendDone" scoped="" ref="0xf68545d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf6854718" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.ReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6854718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf68548f0"/>
        <function-ref name="source" scoped="" ref="0xf68549d0"/>
        <function-ref name="address" scoped="" ref="0xf6854ab0"/>
        <function-ref name="destination" scoped="" ref="0xf6854b90"/>
        <function-ref name="setSource" scoped="" ref="0xf6854c70"/>
        <function-ref name="setDestination" scoped="" ref="0xf6854d50"/>
        <function-ref name="type" scoped="" ref="0xf6854e30"/>
        <function-ref name="setType" scoped="" ref="0xf6854f10"/>
        <function-ref name="isForMe" scoped="" ref="0xf6853010"/>
        <function-ref name="setGroup" scoped="" ref="0xf68530f0"/>
        <function-ref name="localGroup" scoped="" ref="0xf68531d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6be55c0" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6be55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6be5798"/>
        <function-ref name="getPayload" scoped="" ref="0xf6be5878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6be5958"/>
        <function-ref name="cancel" scoped="" ref="0xf6be5a38"/>
        <function-ref name="sendDone" scoped="" ref="0xf6be5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6be5c58" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6be5c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6be5e30"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6be5f10"/>
        <function-ref name="getPayload" scoped="" ref="0xf6be4010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6be40f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6be41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6be4310" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6be4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6be44e8"/>
        <function-ref name="source" scoped="" ref="0xf6be45c8"/>
        <function-ref name="address" scoped="" ref="0xf6be46a8"/>
        <function-ref name="destination" scoped="" ref="0xf6be4788"/>
        <function-ref name="setSource" scoped="" ref="0xf6be4868"/>
        <function-ref name="setDestination" scoped="" ref="0xf6be4948"/>
        <function-ref name="type" scoped="" ref="0xf6be4a28"/>
        <function-ref name="setType" scoped="" ref="0xf6be4b08"/>
        <function-ref name="isForMe" scoped="" ref="0xf6be4be8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6be4cc8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6be4da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6be4f08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6be4f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6be30f0"/>
        <function-ref name="noAck" scoped="" ref="0xf6be31d0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6be32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf684a880" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf684a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf684aa58"/>
        <function-ref name="getPayload" scoped="" ref="0xf684ab38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf684ac18"/>
        <function-ref name="cancel" scoped="" ref="0xf684acf8"/>
        <function-ref name="sendDone" scoped="" ref="0xf684add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf684af18" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf684af18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6847108"/>
        <function-ref name="payloadLength" scoped="" ref="0xf68471e8"/>
        <function-ref name="getPayload" scoped="" ref="0xf68472c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf68473a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6847488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf68475c8" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf68475c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf68477a0"/>
        <function-ref name="source" scoped="" ref="0xf6847880"/>
        <function-ref name="address" scoped="" ref="0xf6847960"/>
        <function-ref name="destination" scoped="" ref="0xf6847a40"/>
        <function-ref name="setSource" scoped="" ref="0xf6847b20"/>
        <function-ref name="setDestination" scoped="" ref="0xf6847c00"/>
        <function-ref name="type" scoped="" ref="0xf6847ce0"/>
        <function-ref name="setType" scoped="" ref="0xf6847dc0"/>
        <function-ref name="isForMe" scoped="" ref="0xf6847ea0"/>
        <function-ref name="setGroup" scoped="" ref="0xf6846010"/>
        <function-ref name="localGroup" scoped="" ref="0xf68460f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6846250" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6846250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6846428"/>
        <function-ref name="noAck" scoped="" ref="0xf6846508"/>
        <function-ref name="wasAcked" scoped="" ref="0xf68465e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf68403b0" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf68403b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6840588"/>
        <function-ref name="getPayload" scoped="" ref="0xf6840668"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6840748"/>
        <function-ref name="cancel" scoped="" ref="0xf6840828"/>
        <function-ref name="sendDone" scoped="" ref="0xf6840908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf6840a78" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf6840a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6840c50"/>
        <function-ref name="getPayload" scoped="" ref="0xf6840d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6840e10"/>
        <function-ref name="cancel" scoped="" ref="0xf6840ef0"/>
        <function-ref name="sendDone" scoped="" ref="0xf683f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf683f150" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.TinyReportMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf683f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf683f328"/>
        <function-ref name="source" scoped="" ref="0xf683f408"/>
        <function-ref name="address" scoped="" ref="0xf683f4e8"/>
        <function-ref name="destination" scoped="" ref="0xf683f5c8"/>
        <function-ref name="setSource" scoped="" ref="0xf683f6a8"/>
        <function-ref name="setDestination" scoped="" ref="0xf683f788"/>
        <function-ref name="type" scoped="" ref="0xf683f868"/>
        <function-ref name="setType" scoped="" ref="0xf683f948"/>
        <function-ref name="isForMe" scoped="" ref="0xf683fa28"/>
        <function-ref name="setGroup" scoped="" ref="0xf683fb08"/>
        <function-ref name="localGroup" scoped="" ref="0xf683fbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf6be2568" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf6be2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf6be2740"/>
        <function-ref name="getPayload" scoped="" ref="0xf6be2820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6be2900"/>
        <function-ref name="cancel" scoped="" ref="0xf6be29e0"/>
        <function-ref name="sendDone" scoped="" ref="0xf6be2ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6be2c00" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6be2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6be2dd8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6be2eb8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6be1010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6be10f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6be11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6be1310" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6be1310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6be14e8"/>
        <function-ref name="source" scoped="" ref="0xf6be15c8"/>
        <function-ref name="address" scoped="" ref="0xf6be16a8"/>
        <function-ref name="destination" scoped="" ref="0xf6be1788"/>
        <function-ref name="setSource" scoped="" ref="0xf6be1868"/>
        <function-ref name="setDestination" scoped="" ref="0xf6be1948"/>
        <function-ref name="type" scoped="" ref="0xf6be1a28"/>
        <function-ref name="setType" scoped="" ref="0xf6be1b08"/>
        <function-ref name="isForMe" scoped="" ref="0xf6be1be8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6be1cc8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6be1da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6be1f08" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6be1f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6be00f0"/>
        <function-ref name="noAck" scoped="" ref="0xf6be01d0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6be02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf68332e8" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf68332e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf68334c0"/>
        <function-ref name="getPayload" scoped="" ref="0xf68335a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6833680"/>
        <function-ref name="cancel" scoped="" ref="0xf6833760"/>
        <function-ref name="sendDone" scoped="" ref="0xf6833840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6833980" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6833980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6833b58"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6833c38"/>
        <function-ref name="getPayload" scoped="" ref="0xf6833d18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6833df8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6833ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6832030" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6832030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6832208"/>
        <function-ref name="source" scoped="" ref="0xf68322e8"/>
        <function-ref name="address" scoped="" ref="0xf68323c8"/>
        <function-ref name="destination" scoped="" ref="0xf68324a8"/>
        <function-ref name="setSource" scoped="" ref="0xf6832588"/>
        <function-ref name="setDestination" scoped="" ref="0xf6832668"/>
        <function-ref name="type" scoped="" ref="0xf6832748"/>
        <function-ref name="setType" scoped="" ref="0xf6832828"/>
        <function-ref name="isForMe" scoped="" ref="0xf6832908"/>
        <function-ref name="setGroup" scoped="" ref="0xf68329e8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6832ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xf6832c28" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xf6832c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xf6832e00"/>
        <function-ref name="noAck" scoped="" ref="0xf6832ee0"/>
        <function-ref name="wasAcked" scoped="" ref="0xf6831010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xf682fd98" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xf682fd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf682c010"/>
        <function-ref name="getPayload" scoped="" ref="0xf682c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf682c1d0"/>
        <function-ref name="cancel" scoped="" ref="0xf682c2b0"/>
        <function-ref name="sendDone" scoped="" ref="0xf682c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xf682c500" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xf682c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xf682c6d8"/>
        <function-ref name="getPayload" scoped="" ref="0xf682c7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf682c898"/>
        <function-ref name="cancel" scoped="" ref="0xf682c978"/>
        <function-ref name="sendDone" scoped="" ref="0xf682ca58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xf682cb98" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgSender.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf682cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf682cd70"/>
        <function-ref name="source" scoped="" ref="0xf682ce50"/>
        <function-ref name="address" scoped="" ref="0xf682a010"/>
        <function-ref name="destination" scoped="" ref="0xf682a0f0"/>
        <function-ref name="setSource" scoped="" ref="0xf682a1d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf682a2b0"/>
        <function-ref name="type" scoped="" ref="0xf682a390"/>
        <function-ref name="setType" scoped="" ref="0xf682a470"/>
        <function-ref name="isForMe" scoped="" ref="0xf682a550"/>
        <function-ref name="setGroup" scoped="" ref="0xf682a630"/>
        <function-ref name="localGroup" scoped="" ref="0xf682a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6bddd60" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.PingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6bddd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6bda010"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6bda0f0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bda1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bda2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6bda390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6bdda48" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.PingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6bdda48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6bddc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6bda4d0" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.PingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6bda4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6bda6a8"/>
        <function-ref name="source" scoped="" ref="0xf6bda788"/>
        <function-ref name="address" scoped="" ref="0xf6bda868"/>
        <function-ref name="destination" scoped="" ref="0xf6bda948"/>
        <function-ref name="setSource" scoped="" ref="0xf6bdaa28"/>
        <function-ref name="setDestination" scoped="" ref="0xf6bdab08"/>
        <function-ref name="type" scoped="" ref="0xf6bdabe8"/>
        <function-ref name="setType" scoped="" ref="0xf6bdacc8"/>
        <function-ref name="isForMe" scoped="" ref="0xf6bdada8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bdae88"/>
        <function-ref name="localGroup" scoped="" ref="0xf6bd9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6bd8510" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6bd8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6bd86e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6bd87c8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bd88a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bd8988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6bd8a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6bd81f8" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6bd81f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6bd83d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6bd8ba8" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.MultiPingMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6bd8ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6bd8d80"/>
        <function-ref name="source" scoped="" ref="0xf6bd8e60"/>
        <function-ref name="address" scoped="" ref="0xf6bd7010"/>
        <function-ref name="destination" scoped="" ref="0xf6bd70f0"/>
        <function-ref name="setSource" scoped="" ref="0xf6bd71d0"/>
        <function-ref name="setDestination" scoped="" ref="0xf6bd72b0"/>
        <function-ref name="type" scoped="" ref="0xf6bd7390"/>
        <function-ref name="setType" scoped="" ref="0xf6bd7470"/>
        <function-ref name="isForMe" scoped="" ref="0xf6bd7550"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bd7630"/>
        <function-ref name="localGroup" scoped="" ref="0xf6bd7710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6bd6bf0" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.ResponseMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6bd6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6bd6dc8"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6bd6ea8"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bd5010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bd50f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6bd51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6bd68d8" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.ResponseMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6bd68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6bd6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6bd5310" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.ResponseMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6bd5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6bd54e8"/>
        <function-ref name="source" scoped="" ref="0xf6bd55c8"/>
        <function-ref name="address" scoped="" ref="0xf6bd56a8"/>
        <function-ref name="destination" scoped="" ref="0xf6bd5788"/>
        <function-ref name="setSource" scoped="" ref="0xf6bd5868"/>
        <function-ref name="setDestination" scoped="" ref="0xf6bd5948"/>
        <function-ref name="type" scoped="" ref="0xf6bd5a28"/>
        <function-ref name="setType" scoped="" ref="0xf6bd5b08"/>
        <function-ref name="isForMe" scoped="" ref="0xf6bd5be8"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bd5cc8"/>
        <function-ref name="localGroup" scoped="" ref="0xf6bd5da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xf6bd3328" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xf6bd3328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xf6bd3500"/>
        <function-ref name="payloadLength" scoped="" ref="0xf6bd35e0"/>
        <function-ref name="getPayload" scoped="" ref="0xf6bd36c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xf6bd37a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xf6bd3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xf6bd3010" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xf6bd3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xf6bd31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xf6bd39c0" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="SendingMoteAppC.CommandMsgReader"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xf6bd39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xf6bd3b98"/>
        <function-ref name="source" scoped="" ref="0xf6bd3c78"/>
        <function-ref name="address" scoped="" ref="0xf6bd3d58"/>
        <function-ref name="destination" scoped="" ref="0xf6bd3e38"/>
        <function-ref name="setSource" scoped="" ref="0xf6bd3f18"/>
        <function-ref name="setDestination" scoped="" ref="0xf6bd2010"/>
        <function-ref name="type" scoped="" ref="0xf6bd20f0"/>
        <function-ref name="setType" scoped="" ref="0xf6bd21d0"/>
        <function-ref name="isForMe" scoped="" ref="0xf6bd22b0"/>
        <function-ref name="setGroup" scoped="" ref="0xf6bd2390"/>
        <function-ref name="localGroup" scoped="" ref="0xf6bd2470"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xf7563d58" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf7563c00" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xf7562ae0" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf7562988" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf7563518" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf75622a8" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf7566e78" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xf7566918" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xf7566b30" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf7566d10" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf755ea88" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf755e728" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf755e908" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf755e1c8" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf755fb80" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf755fa28" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf755d898" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf755d540" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf755d738" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xf755c958" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
              <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf755c410" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xf755c5f0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf755c7d0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xf7564c50" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7564af8" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xf7555658" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7555500" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf7554648" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf75542e8" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf75544c8" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf7556ce8" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xf7556350" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7556010" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf75561f0" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xf7543b60" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf7543b60"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf7543cc8" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7543cc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xf7545ec0" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7543cc8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7545d68" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xf75429c0" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7542868" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xf7545370" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7545218" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf75414b8" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7543cc8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7541148" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xf7541358" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf7543cc8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xf753a480" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf753a0e8" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xf753a320" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xf7538010" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf753ade8" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xf753bbe8" loc="57:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xf753b568" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xf753b410" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xf7547710" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf75475b8" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xf7546220" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf75460c8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xf7546ca8" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7546b50" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xf754b9e8" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf7573010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf754b890" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xf7550168" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf7550010" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xf7553010" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xf75536a8" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf7553550" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xf754fbd8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf754f870" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf754fa78" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xf7550d50" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf75509e8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xf7550bf0" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xf754e310" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf754e1b8" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xf754ee48" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf754eb18" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xf754ece8" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xf7574d30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xf754c7c0" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf754c668" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xf7549688" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7573010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xf7549328" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xf7549528" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7573010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xf7549f00" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf7573010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0xf7527010" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7528e58" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0xf7529e78" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7529d20" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0xf7529010" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xf752bde0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0xf752b858" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xf752b700" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0xf7529608" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0xf75294b0" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0xf7528788" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7528630" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xf7520988" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xf7520610" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xf7520828" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0xf7531cb0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xf7531958" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0xf7531b50" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0xf752e928" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xf752e5a8" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0xf752e7c8" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0xf7530368" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0xf77971d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xf7530210" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0xf752e168" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xf752e010" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0xf7531490" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xf7531338" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0xf7530a30" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xf75308d8" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xf7524960" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7524808" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xf7532d50" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf75329b8" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xf7532bf0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xf7524010" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7523e70" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xf7523950" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf75235b8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xf75237f0" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xf75222a0" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf7522148" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xf752c168" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf752c010" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf751ded0" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf751db90" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf751dd70" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xf7515a18" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf75156b8" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf7515898" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xf7515158" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf7516b38" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf75169e0" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf7514820" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf75144c8" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf75146c0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xf7519258" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xf751a8e0" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xf751a2e0" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xf751ad90" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xf7519950" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf74fea70" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xf74fe728" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0xf74fe910" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf74fd640" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0xf74fbd40" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xf74fb550" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xf74fb9f8" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf74fbbd8" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf74fb060" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xf74fdcf0" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xf74fdee8" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0xf74fd168" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0xf74fd010" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xf7500aa8" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xf7500600" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xf74ff1a8" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf74ff670" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0xf74f03b0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0xf759b3c0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0xf759a7c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74f0218" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0xf74f0e40" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0xf759ae88"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0xf7598dd8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf74f0ca8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0xf7503ac0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0xf7501da8" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0xf7501940" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0xf7506c40" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0xf75035e8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0xf7501010" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0xf75014d0" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0xf7503158" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xf74f6340" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xf74f6788" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xf74f6c08" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xf74f54b8" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xf74f31c8" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf74f3670" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xf74f5070" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf74f3db0" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xf74f3c58" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xf74f7ed0" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xf74f5938" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xf74f5d60" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0xf74ec5d0" loc="71:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0xf74ed6c0" loc="56:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0xf74ec168" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0xf74ec010" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0xf74edad8" loc="61:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0xf74f8b88" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xf74f8a30" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0xf74ed238" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xf74ed0e0" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xf764fb68" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xf764e090" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0xf74b9d90" loc="99:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0xf74b9a28" loc="99:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0xf74b9c30" loc="99:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0xf74b9090" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0xf74baa88" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0xf74ba698" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0xf74ba928" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0xf74bc398" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xf74bc240" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0xf74b95a8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0xf74bb780" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xf74bb628" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xf74bcd30" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xf74bcbd8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0xf74b78a0" loc="110:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0xf74ba188" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xf74ba030" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0xf74b7358" loc="105:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0xf74bb1a8" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0xf74bfd60" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xf74bc7a8" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0xf74bbbc0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xf74bd8d8" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xf74bd8d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xf74bdd88" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xf74b4558" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xf74bd8d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xf74b4228" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xf74b43f8" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xf74bd8d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xf7498168" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xf759c100"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf7498010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xf7498800" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xf759c100"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf74986a8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf74aed80" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf74aed80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf74aeee8" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74aeee8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xf74a91c8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74aeee8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf74abe78" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xf74aab58" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74aeee8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74aeee8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xf74aa808" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74aeee8"/></type-var>
          </variable>
          <variable name="dt" ref="0xf74aa9f8" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74aeee8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xf74aa300" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xf74a9658" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74aeee8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf74ab538" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74aeee8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf74ab3e0" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf74aeee8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf74aba18" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xf74a5938" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xf74a5d20" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xf74a51a8" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xf74a3530" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf74a5568" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xf74a3138" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf74a8a48" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xf74a8dd8" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xf749e1a8" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xf749ea18" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xf749e618" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xf7573010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xf74a2c78" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7573010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xf74a2910" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xf7573010"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xf74a2b18" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xf7573270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0xf74975e0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xf759c100"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xf74b01f0" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xf749b198" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xf759c100"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xf74a1948" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xf74a1e20" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xf749b030" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xf749a010" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xf759c100"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xf749b740" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xf749bc18" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xf749be18" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xf74a09a8" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xf74a0548" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0xf74a0138" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0xf74a6bc0" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xf7450e08" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xf7446010" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xf7447dd8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xf74485c0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xf7448bf8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xf7448aa0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xf74472d8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xf7447180" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xf7447830" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xf7654390" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xf7654c98" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xf76547d0" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xf75ca1c8" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xf75bab28" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xf7606340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xf75bd630" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xf7334038" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75d2330"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xf75d2558"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0xf7336a58" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75dd6a0"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xf75dd8c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf7336900" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75dd6a0"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xf75dd8c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xf7335550" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75d6d70"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xf75d4010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0xf73383b8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e2668"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xf75e2890"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xf7335b60" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75d6d70"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xf75d4010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xf7335a08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75d6d70"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xf75d4010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xf7334648" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75d2330"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xf75d2558"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xf73344f0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75d2330"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xf75d2558"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0xf7338da8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75dcd58"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xf75db010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0xf73388d8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75dd6a0"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xf75dd8c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0xf7336410" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e2668"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xf75e2890"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf73362b8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e2668"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xf75e2890"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0xf7335090" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75dcd58"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xf75db010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf7336f20" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75dcd58"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xf75db010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xf733b858" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf733b858"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xf732f360" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xf732f208" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xf7330950" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf733bd50" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf733b858"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xf73328b8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf733b858"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf7332760" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf733b858"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xf7332cf8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xf7330db0" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf73322e0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf733b858"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf7332188" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf733b858"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf7330138" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf7330530" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xf732e920" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf732e920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xf732a858" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf732b808" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf732ee18" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf732e920"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xf732bc10" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xf732acb8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf732b3c8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf732e920"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf732b270" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf732e920"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf732a038" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf732a430" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xf73403e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf73403e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xf733eba0" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xf733e310" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xf73408d8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf73403e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xf733c168" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xf733c010" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xf733c5f8" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xf733f6c8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xf733f2a8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xf733e778" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf7340e50" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf73403e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xf7340cf8" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xf73403e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xf733fad0" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf733fec8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0xf7320010" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75ec7a8"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0xf75ec9d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xf731f618" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e5840"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0xf75e5a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xf7320ae8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e7130"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xf75e7358"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xf731f168" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e7130"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xf75e7358"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xf731f010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e7130"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xf75e7358"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xf731fc20" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e5840"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xf75e5a68"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xf731fac8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e5840"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xf75e5a68"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0xf7320630" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75ec7a8"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xf75ec9d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xf73204d8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75ec7a8"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xf75ec9d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0xf731a7f0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0xf731acc0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0xf731a3d8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xf73191a8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xf731d8e0" loc="21:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e99c0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0xf75e9be8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xf731ded0" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e99c0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xf75e9be8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xf731dd78" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xf75e99c0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xf75e9be8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf7254688" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf7254688"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xf72547f0" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf72547f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xf7254cd8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xf72547f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xf7251710" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xf7251210" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xf7251b38" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xf71f97c8" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xf71f81a8" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xf71f9d30" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xf71f9bd8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xf71f92c0" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xf71e4810" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf71e3768" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xf71e4418" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0xf71e32a0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0xf71e3148" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0xf71e4010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0xf71e4c60" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xf71d7df0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0xf7195718" loc="24:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0xf7195c08" loc="31:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0xf7191138" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0xf7180370" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf7180010" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xf7180210" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xf717dae0" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf717d580" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xf717d780" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xf717d978" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xf717fd20" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xf759c100"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf717f9c0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xf717fbc0" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0xf71816a0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xf759c100"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf7181340" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xf7181540" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xf717f178" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf7180bb8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xf7180db8" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xf717f010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xf716c8a8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xf716c338" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xf716c550" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf716c740" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xf716aee8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xf716a768" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xf716a980" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xf716ab70" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xf7797d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xf716ad78" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xf716d4e0" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xf716d388" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xf711ca68" loc="46:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf711c910" loc="46:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xf71196e8" loc="58:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf7119590" loc="58:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xf7119010" loc="52:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xf7119d30" loc="65:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf7119bd8" loc="65:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xf710c548" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xf7107c38" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xf7109dd8" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xf7106288" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xf7106130" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xf710c0f8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xf7108d48" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xf7108bf0" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xf7109010" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xf710be48" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xf710cdd8" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xf7103318" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xf71031c0" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xf7109468" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xf7106c10" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xf7106ab8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xf71044b0" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xf71077f0" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xf7107698" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xf7104d78" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xf7108380" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xf7108228" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xf710b390" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf710b238" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xf71099b8" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xf7109860" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xf7107210" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xf71066b0" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xf7104038" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xf7104908" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xf71087b8" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xf710c970" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xf710b958" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xf710b800" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xf7100070" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xf7100570" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xf70cc2f0" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf70cc7d8" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xf709d138" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xf709d710" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xf709b3a8" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xf709fec8" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xf7095d20" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf709e718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf7095bc8" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf709e718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xf70989a8" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xf7095088" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf709e718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xf7098f10" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xf709e718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xf7095638" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xf709e718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0xf6fe51c8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xf6fbc3c8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xf6fbde18" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0xf6fbc268" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0xf6fbd980" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0xf6fbd500" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xf6fbd3a8" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0xf6fc8538" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xf7797708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6fc83e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xf6fccc18" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6fccac0" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xf6fc6708" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6fc65b0" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xf6fc8e10" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xf6fc8cb8" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xf756a5c0"/>
                <typename><typedef-ref name="message_t" ref="0xf75693a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf6ef9bb0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf6ef9bb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xf6ef60c8" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xf6ec8700" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xf6ec8700"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xf6ec2f00" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xf6ec5ca0" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xf6ec3e08" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xf6ec3ac0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xf6ec3ca8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xf6ec3618" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xf6ec1888" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xf6ec1358" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xf6ec3158" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xf76586e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xf6ec8d58" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf6ec8c00" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xf6ec28e0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xf6ec2598" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xf6ec2780" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xf6ec5408" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xf6ec52b0" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xf7796400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xf6ec58d8" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xf6dfb578" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xf6dfb578"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xf6dfbbc8" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xf7650628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xf6dfb578"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xf6dfba70" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xf6dfb578"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
